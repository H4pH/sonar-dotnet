// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22ConstantAndNull%22+%7B%0D%0Asubgraph+%22cluster_Sonar.ConstantAndNull%22+%7B%0Alabel+%3D+%22Sonar.ConstantAndNull%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ALogicalAndExpression%7CIdentifierNameSyntax%3A+a%7CLiteralExpressionSyntax%3A+10%7CIsPatternExpressionSyntax%3A+a+is+10%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%7CIdentifierNameSyntax%3A+b%7CLiteralExpressionSyntax%3A+null%7CIsPatternExpressionSyntax%3A+b+is+null%7D%22%5D%0D%0A1+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CVariableDeclaratorSyntax%3A+ret+%3D+a+is+10+%26%26+b+is+null%7D%22%5D%0D%0A2+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.ConstantAndNull%22+%7B%0Alabel+%3D+%22Roslyn.ConstantAndNull%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C%23%23+BranchValue+%23%23%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+10%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+10%7C0%23+IsPatternOperation+%2F+IsPatternExpressionSyntax%3A+a+is+10%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C2%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+b%7C4%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+null%7C3%23+ConversionOperation+%2F+LiteralExpressionSyntax%3A+null%7C2%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+null%7C1%23+IsPatternOperation+%2F+IsPatternExpressionSyntax%3A+b+is+null%7C0%23+FlowCaptureOperation+%2F+IsPatternExpressionSyntax%3A+b+is+null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22Else%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C1%23+LiteralOperation+%2F+IsPatternExpressionSyntax%3A+a+is+10%7C0%23+FlowCaptureOperation+%2F+IsPatternExpressionSyntax%3A+a+is+10%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R3+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+a+is+10+%26%26+b+is+null%7C1%23+FlowCaptureReferenceOperation+%2F+BinaryExpressionSyntax%3A+a+is+10+%26%26+b+is+null%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+a+is+10+%26%26+b+is+null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R4%0D%0AR3+-%3E+R4%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R5%7D%22%5D%0D%0AR4+-%3E+R5%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void ConstantAndNull(object a, object b)
    {
        var ret = a is 10 && b is null;
    }
*/

digraph "ConstantAndNull" {
subgraph "cluster_Sonar.ConstantAndNull" {
label = "Sonar.ConstantAndNull"
0 [shape=record label="{BINARY:LogicalAndExpression|IdentifierNameSyntax: a|LiteralExpressionSyntax: 10|IsPatternExpressionSyntax: a is 10}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{BINARY|IdentifierNameSyntax: b|LiteralExpressionSyntax: null|IsPatternExpressionSyntax: b is null}"]
1 -> 2
2 [shape=record label="{SIMPLE|VariableDeclaratorSyntax: ret = a is 10 && b is null}"]
2 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.ConstantAndNull" {
label = "Roslyn.ConstantAndNull"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|## BranchValue ##|1# ParameterReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 10|1# ConstantPatternOperation / ConstantPatternSyntax: 10|0# IsPatternOperation / IsPatternExpressionSyntax: a is 10|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|2# ParameterReferenceOperation / IdentifierNameSyntax: b|4# LiteralOperation / LiteralExpressionSyntax: null|3# ConversionOperation / LiteralExpressionSyntax: null|2# ConstantPatternOperation / ConstantPatternSyntax: null|1# IsPatternOperation / IsPatternExpressionSyntax: b is null|0# FlowCaptureOperation / IsPatternExpressionSyntax: b is null|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|1# LiteralOperation / IsPatternExpressionSyntax: a is 10|0# FlowCaptureOperation / IsPatternExpressionSyntax: a is 10|##########}"]
R1 -> R3 [label="WhenFalse"]
R4 [shape=record label="{BLOCK #R4|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = a is 10 && b is null|1# FlowCaptureReferenceOperation / BinaryExpressionSyntax: a is 10 && b is null|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = a is 10 && b is null|##########}"]
R2 -> R4
R3 -> R4
}
R0 [shape=record label="{ENTRY #R0}"]
R5 [shape=record label="{EXIT #R5}"]
R4 -> R5
}
}
