// http://viz-js.com/
// https://dreampuf.github.io/GraphvizOnline/#digraph%20%22PropertyPattern%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.PropertyPattern%22%20%7B%0Alabel%20%3D%20%22Sonar.PropertyPattern%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20arg%7CRecursivePatternSyntax%3A%20%5C%7B%20RootValue%3A%200%20%5C%7D%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22RootValue%20is%20zero%5C%22%7D%22%5D%0D%0A1%20-%3E%203%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20arg%7CRecursivePatternSyntax%3A%20%5C%7B%20A%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%20%5C%7D%7D%22%5D%0D%0A2%20-%3E%204%20%5Blabel%3D%22True%22%5D%0D%0A2%20-%3E%205%20%5Blabel%3D%22False%22%5D%0D%0A4%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7D%22%5D%0D%0A4%20-%3E%203%0D%0A5%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20arg%7CRecursivePatternSyntax%3A%20%5C%7B%20B%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%20%5C%7D%7D%22%5D%0D%0A5%20-%3E%206%20%5Blabel%3D%22True%22%5D%0D%0A5%20-%3E%207%20%5Blabel%3D%22False%22%5D%0D%0A6%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7D%22%5D%0D%0A6%20-%3E%203%0D%0A7%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20arg%7CRecursivePatternSyntax%3A%20%5C%7B%20C%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%20%5C%7D%7D%22%5D%0D%0A7%20-%3E%208%20%5Blabel%3D%22True%22%5D%0D%0A7%20-%3E%209%20%5Blabel%3D%22False%22%5D%0D%0A8%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7D%22%5D%0D%0A8%20-%3E%203%0D%0A9%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Default%5C%22%7D%22%5D%0D%0A9%20-%3E%203%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AReturnStatement%7D%22%5D%0D%0A3%20-%3E%2010%0D%0A10%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.PropertyPattern%22%20%7B%0Alabel%20%3D%20%22Roslyn.PropertyPattern%22%0D%0AR0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23R0%7D%22%5D%0D%0AR1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R1%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C4%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20RootValue%7C3%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20RootValue%7C4%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C3%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%200%7C2%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20RootValue%3A%200%7C1%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20RootValue%3A%200%20%5C%7D%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20%5C%7B%20RootValue%3A%200%20%5C%7D%20%3D%5C%3E%20%5C%22RootValue%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0%20-%3E%20R1%0D%0AR2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R2%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22RootValue%20is%20zero%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22RootValue%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R2%20%5Blabel%3D%22Else%22%5D%0D%0AR3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R3%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C4%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20A%7C3%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20A%7C6%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ValueA%7C5%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ValueA%7C6%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C5%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%200%7C4%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20ValueA%3A%200%7C3%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%7C2%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20A%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%7C1%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20A%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%20%5C%7D%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20%5C%7B%20A%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R3%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R4%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3%20-%3E%20R4%20%5Blabel%3D%22Else%22%5D%0D%0AR5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R5%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C4%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20B%7C3%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20B%7C6%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ValueB%7C5%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ValueB%7C6%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C5%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%200%7C4%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20ValueB%3A%200%7C3%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%7C2%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20B%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%7C1%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20B%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%20%5C%7D%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20%5C%7B%20B%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3%20-%3E%20R5%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R6%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5%20-%3E%20R6%20%5Blabel%3D%22Else%22%5D%0D%0AR7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R7%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C4%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20C%7C3%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20C%7C6%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ValueC%7C5%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ValueC%7C6%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C5%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%200%7C4%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20ValueC%3A%200%7C3%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%7C2%23%20PropertySubpatternOperation%20%2F%20SubpatternSyntax%3A%20C%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%7C1%23%20RecursivePatternOperation%20%2F%20RecursivePatternSyntax%3A%20%5C%7B%20C%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%20%5C%7D%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20%5C%7B%20C%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5%20-%3E%20R7%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR8%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R8%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%20is%20zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR7%20-%3E%20R8%20%5Blabel%3D%22Else%22%5D%0D%0AR9%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R9%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C1%23%20DiscardPatternOperation%20%2F%20DiscardPatternSyntax%3A%20_%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20_%20%3D%5C%3E%20%5C%22Default%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR7%20-%3E%20R9%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR10%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R10%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Default%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Default%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR9%20-%3E%20R10%20%5Blabel%3D%22Else%22%5D%0D%0AR11%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R11%7C%23%23%20BranchValue%20%23%23%7C0%23%20ObjectCreationOperation%20%2F%20SwitchExpressionSyntax%3A%20arg%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20RootValue%3A%200%20%5C%7D%20%3D%5C%3E%20%5C%22RootValue%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20A%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20B%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20C%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20%5C%22Default%5C%22%5Cn%20%20%20%20%20%20%20%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR9%20-%3E%20R11%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR12%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R12%7C%23%23%20BranchValue%20%23%23%7C0%23%20FlowCaptureReferenceOperation%20%2F%20SwitchExpressionSyntax%3A%20arg%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20RootValue%3A%200%20%5C%7D%20%3D%5C%3E%20%5C%22RootValue%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20A%3A%20%5C%7B%20ValueA%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20B%3A%20%5C%7B%20ValueB%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%7B%20C%3A%20%5C%7B%20ValueC%3A%200%20%5C%7D%20%5C%7D%20%3D%5C%3E%20%5C%22A%20is%20zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20%5C%22Default%5C%22%5Cn%20%20%20%20%20%20%20%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2%20-%3E%20R12%0D%0AR4%20-%3E%20R12%0D%0AR6%20-%3E%20R12%0D%0AR8%20-%3E%20R12%0D%0AR10%20-%3E%20R12%0D%0AR13%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23R13%7D%22%5D%0D%0AR12%20-%3E%20R13%0D%0A%7D%0D%0A%7D%0D%0A

/*
public string PropertyPattern(Wrapper arg)
    {
        return arg switch
        {
            { RootValue: 0 } => "RootValue is zero",
            { A: { ValueA: 0 } } => "A is zero",
            { B: { ValueB: 0 } } => "A is zero",
            { C: { ValueC: 0 } } => "A is zero",
            _ => "Default"
        };
    }
*/

digraph "PropertyPattern" {
subgraph "cluster_Sonar.PropertyPattern" {
label = "Sonar.PropertyPattern"
0 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ RootValue: 0 \}}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"RootValue is zero\"}"]
1 -> 3
2 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ A: \{ ValueA: 0 \} \}}"]
2 -> 4 [label="True"]
2 -> 5 [label="False"]
4 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"A is zero\"}"]
4 -> 3
5 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ B: \{ ValueB: 0 \} \}}"]
5 -> 6 [label="True"]
5 -> 7 [label="False"]
6 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"A is zero\"}"]
6 -> 3
7 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ C: \{ ValueC: 0 \} \}}"]
7 -> 8 [label="True"]
7 -> 9 [label="False"]
8 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"A is zero\"}"]
8 -> 3
9 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Default\"}"]
9 -> 3
3 [shape=record label="{JUMP:ReturnStatement}"]
3 -> 10
10 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.PropertyPattern" {
label = "Roslyn.PropertyPattern"
R0 [shape=record label="{ENTRY #R0}"]
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: arg|0# FlowCaptureOperation / IdentifierNameSyntax: arg|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: RootValue|3# FieldReferenceOperation / IdentifierNameSyntax: RootValue|4# LiteralOperation / LiteralExpressionSyntax: 0|3# ConstantPatternOperation / ConstantPatternSyntax: 0|2# PropertySubpatternOperation / SubpatternSyntax: RootValue: 0|1# RecursivePatternOperation / RecursivePatternSyntax: \{ RootValue: 0 \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ RootValue: 0 \} =\> \"RootValue is zero\"|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# LiteralOperation / LiteralExpressionSyntax: \"RootValue is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"RootValue is zero\"|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: A|3# FieldReferenceOperation / IdentifierNameSyntax: A|6# InstanceReferenceOperation / IdentifierNameSyntax: ValueA|5# FieldReferenceOperation / IdentifierNameSyntax: ValueA|6# LiteralOperation / LiteralExpressionSyntax: 0|5# ConstantPatternOperation / ConstantPatternSyntax: 0|4# PropertySubpatternOperation / SubpatternSyntax: ValueA: 0|3# RecursivePatternOperation / RecursivePatternSyntax: \{ ValueA: 0 \}|2# PropertySubpatternOperation / SubpatternSyntax: A: \{ ValueA: 0 \}|1# RecursivePatternOperation / RecursivePatternSyntax: \{ A: \{ ValueA: 0 \} \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ A: \{ ValueA: 0 \} \} =\> \"A is zero\"|##########}"]
R1 -> R3 [label="WhenFalse"]
R4 [shape=record label="{BLOCK #R4|1# LiteralOperation / LiteralExpressionSyntax: \"A is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"A is zero\"|##########}"]
R3 -> R4 [label="Else"]
R5 [shape=record label="{BLOCK #R5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: B|3# FieldReferenceOperation / IdentifierNameSyntax: B|6# InstanceReferenceOperation / IdentifierNameSyntax: ValueB|5# FieldReferenceOperation / IdentifierNameSyntax: ValueB|6# LiteralOperation / LiteralExpressionSyntax: 0|5# ConstantPatternOperation / ConstantPatternSyntax: 0|4# PropertySubpatternOperation / SubpatternSyntax: ValueB: 0|3# RecursivePatternOperation / RecursivePatternSyntax: \{ ValueB: 0 \}|2# PropertySubpatternOperation / SubpatternSyntax: B: \{ ValueB: 0 \}|1# RecursivePatternOperation / RecursivePatternSyntax: \{ B: \{ ValueB: 0 \} \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ B: \{ ValueB: 0 \} \} =\> \"A is zero\"|##########}"]
R3 -> R5 [label="WhenFalse"]
R6 [shape=record label="{BLOCK #R6|1# LiteralOperation / LiteralExpressionSyntax: \"A is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"A is zero\"|##########}"]
R5 -> R6 [label="Else"]
R7 [shape=record label="{BLOCK #R7|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: C|3# FieldReferenceOperation / IdentifierNameSyntax: C|6# InstanceReferenceOperation / IdentifierNameSyntax: ValueC|5# FieldReferenceOperation / IdentifierNameSyntax: ValueC|6# LiteralOperation / LiteralExpressionSyntax: 0|5# ConstantPatternOperation / ConstantPatternSyntax: 0|4# PropertySubpatternOperation / SubpatternSyntax: ValueC: 0|3# RecursivePatternOperation / RecursivePatternSyntax: \{ ValueC: 0 \}|2# PropertySubpatternOperation / SubpatternSyntax: C: \{ ValueC: 0 \}|1# RecursivePatternOperation / RecursivePatternSyntax: \{ C: \{ ValueC: 0 \} \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ C: \{ ValueC: 0 \} \} =\> \"A is zero\"|##########}"]
R5 -> R7 [label="WhenFalse"]
R8 [shape=record label="{BLOCK #R8|1# LiteralOperation / LiteralExpressionSyntax: \"A is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"A is zero\"|##########}"]
R7 -> R8 [label="Else"]
R9 [shape=record label="{BLOCK #R9|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> \"Default\"|##########}"]
R7 -> R9 [label="WhenFalse"]
R10 [shape=record label="{BLOCK #R10|1# LiteralOperation / LiteralExpressionSyntax: \"Default\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Default\"|##########}"]
R9 -> R10 [label="Else"]
R11 [shape=record label="{BLOCK #R11|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: arg switch\n        \{\n            \{ RootValue: 0 \} =\> \"RootValue is zero\",\n            \{ A: \{ ValueA: 0 \} \} =\> \"A is zero\",\n            \{ B: \{ ValueB: 0 \} \} =\> \"A is zero\",\n            \{ C: \{ ValueC: 0 \} \} =\> \"A is zero\",\n            _ =\> \"Default\"\n        \}|##########}"]
R9 -> R11 [label="WhenFalse"]
R12 [shape=record label="{BLOCK #R12|## BranchValue ##|0# FlowCaptureReferenceOperation / SwitchExpressionSyntax: arg switch\n        \{\n            \{ RootValue: 0 \} =\> \"RootValue is zero\",\n            \{ A: \{ ValueA: 0 \} \} =\> \"A is zero\",\n            \{ B: \{ ValueB: 0 \} \} =\> \"A is zero\",\n            \{ C: \{ ValueC: 0 \} \} =\> \"A is zero\",\n            _ =\> \"Default\"\n        \}|##########}"]
R2 -> R12
R4 -> R12
R6 -> R12
R8 -> R12
R10 -> R12
R13 [shape=record label="{EXIT #R13}"]
R12 -> R13
}
}
