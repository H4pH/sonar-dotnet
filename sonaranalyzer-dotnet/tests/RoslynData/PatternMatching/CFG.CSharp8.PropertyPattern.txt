// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22PropertyPattern%22+%7B%0D%0Asubgraph+%22cluster_Sonar.PropertyPattern%22+%7B%0Alabel+%3D+%22Sonar.PropertyPattern%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+arg%7CRecursivePatternSyntax%3A+%5C%7B+RootValue%3A+0+%5C%7D%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22RootValue+is+zero%5C%22%7D%22%5D%0D%0A1+-%3E+3%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+arg%7CRecursivePatternSyntax%3A+%5C%7B+A%3A+%5C%7B+ValueA%3A+0+%5C%7D+%5C%7D%7D%22%5D%0D%0A2+-%3E+4+%5Blabel%3D%22True%22%5D%0D%0A2+-%3E+5+%5Blabel%3D%22False%22%5D%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7D%22%5D%0D%0A4+-%3E+3%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+arg%7CRecursivePatternSyntax%3A+%5C%7B+B%3A+%5C%7B+ValueB%3A+0+%5C%7D+%5C%7D%7D%22%5D%0D%0A5+-%3E+6+%5Blabel%3D%22True%22%5D%0D%0A5+-%3E+7+%5Blabel%3D%22False%22%5D%0D%0A6+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7D%22%5D%0D%0A6+-%3E+3%0D%0A7+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+arg%7CRecursivePatternSyntax%3A+%5C%7B+C%3A+%5C%7B+ValueC%3A+0+%5C%7D+%5C%7D%7D%22%5D%0D%0A7+-%3E+8+%5Blabel%3D%22True%22%5D%0D%0A7+-%3E+9+%5Blabel%3D%22False%22%5D%0D%0A8+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7D%22%5D%0D%0A8+-%3E+3%0D%0A9+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Default%5C%22%7D%22%5D%0D%0A9+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AReturnStatement%7D%22%5D%0D%0A3+-%3E+10%0D%0A10+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.PropertyPattern%22+%7B%0Alabel+%3D+%22Roslyn.PropertyPattern%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+arg%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C4%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+RootValue%7C3%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+RootValue%7C4%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C3%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C2%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+RootValue%3A+0%7C1%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+RootValue%3A+0+%5C%7D%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+%5C%7B+RootValue%3A+0+%5C%7D+%3D%5C%3E+%5C%22RootValue+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22RootValue+is+zero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22RootValue+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22Else%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C4%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+A%7C3%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+A%7C6%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+ValueA%7C5%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+ValueA%7C6%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C5%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C4%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+ValueA%3A+0%7C3%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+ValueA%3A+0+%5C%7D%7C2%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+A%3A+%5C%7B+ValueA%3A+0+%5C%7D%7C1%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+A%3A+%5C%7B+ValueA%3A+0+%5C%7D+%5C%7D%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+%5C%7B+A%3A+%5C%7B+ValueA%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R3+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R4+%5Blabel%3D%22Else%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R5%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C4%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+B%7C3%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+B%7C6%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+ValueB%7C5%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+ValueB%7C6%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C5%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C4%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+ValueB%3A+0%7C3%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+ValueB%3A+0+%5C%7D%7C2%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+B%3A+%5C%7B+ValueB%3A+0+%5C%7D%7C1%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+B%3A+%5C%7B+ValueB%3A+0+%5C%7D+%5C%7D%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+%5C%7B+B%3A+%5C%7B+ValueB%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R5+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R6%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5+-%3E+R6+%5Blabel%3D%22Else%22%5D%0D%0AR7+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R7%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C4%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+C%7C3%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+C%7C6%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+ValueC%7C5%23+FieldReferenceOperation+%2F+IdentifierNameSyntax%3A+ValueC%7C6%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C5%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C4%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+ValueC%3A+0%7C3%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+ValueC%3A+0+%5C%7D%7C2%23+PropertySubpatternOperation+%2F+SubpatternSyntax%3A+C%3A+%5C%7B+ValueC%3A+0+%5C%7D%7C1%23+RecursivePatternOperation+%2F+RecursivePatternSyntax%3A+%5C%7B+C%3A+%5C%7B+ValueC%3A+0+%5C%7D+%5C%7D%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+%5C%7B+C%3A+%5C%7B+ValueC%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5+-%3E+R7+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR8+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R8%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A+is+zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR7+-%3E+R8+%5Blabel%3D%22Else%22%5D%0D%0AR9+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R9%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C1%23+DiscardPatternOperation+%2F+DiscardPatternSyntax%3A+_%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+_+%3D%5C%3E+%5C%22Default%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR7+-%3E+R9+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR10+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R10%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Default%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Default%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR9+-%3E+R10+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0AR11+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R11%7C%23%23+BranchValue+%23%23%7C0%23+ObjectCreationOperation+%2F+SwitchExpressionSyntax%3A+arg+switch%5Cn++++++++%5C%7B%5Cn++++++++++++%5C%7B+RootValue%3A+0+%5C%7D+%3D%5C%3E+%5C%22RootValue+is+zero%5C%22%2C%5Cn++++++++++++%5C%7B+A%3A+%5C%7B+ValueA%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%2C%5Cn++++++++++++%5C%7B+B%3A+%5C%7B+ValueB%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%2C%5Cn++++++++++++%5C%7B+C%3A+%5C%7B+ValueC%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+%5C%22Default%5C%22%5Cn++++++++%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR9+-%3E+R11+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR12+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R12%7C%23%23+BranchValue+%23%23%7C0%23+FlowCaptureReferenceOperation+%2F+SwitchExpressionSyntax%3A+arg+switch%5Cn++++++++%5C%7B%5Cn++++++++++++%5C%7B+RootValue%3A+0+%5C%7D+%3D%5C%3E+%5C%22RootValue+is+zero%5C%22%2C%5Cn++++++++++++%5C%7B+A%3A+%5C%7B+ValueA%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%2C%5Cn++++++++++++%5C%7B+B%3A+%5C%7B+ValueB%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%2C%5Cn++++++++++++%5C%7B+C%3A+%5C%7B+ValueC%3A+0+%5C%7D+%5C%7D+%3D%5C%3E+%5C%22A+is+zero%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+%5C%22Default%5C%22%5Cn++++++++%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R12%0D%0AR4+-%3E+R12%0D%0AR6+-%3E+R12%0D%0AR8+-%3E+R12%0D%0AR10+-%3E+R12%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR13+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R13%7D%22%5D%0D%0AR12+-%3E+R13%0D%0A%7D%0D%0A%7D%0D%0A

/*
public string PropertyPattern(Wrapper arg)
    {
        return arg switch
        {
            { RootValue: 0 } => "RootValue is zero",
            { A: { ValueA: 0 } } => "A is zero",
            { B: { ValueB: 0 } } => "A is zero",
            { C: { ValueC: 0 } } => "A is zero",
            _ => "Default"
        };
    }
*/

digraph "PropertyPattern" {
subgraph "cluster_Sonar.PropertyPattern" {
label = "Sonar.PropertyPattern"
0 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ RootValue: 0 \}}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"RootValue is zero\"}"]
1 -> 3
2 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ A: \{ ValueA: 0 \} \}}"]
2 -> 4 [label="True"]
2 -> 5 [label="False"]
4 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"A is zero\"}"]
4 -> 3
5 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ B: \{ ValueB: 0 \} \}}"]
5 -> 6 [label="True"]
5 -> 7 [label="False"]
6 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"A is zero\"}"]
6 -> 3
7 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: arg|RecursivePatternSyntax: \{ C: \{ ValueC: 0 \} \}}"]
7 -> 8 [label="True"]
7 -> 9 [label="False"]
8 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"A is zero\"}"]
8 -> 3
9 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Default\"}"]
9 -> 3
3 [shape=record label="{JUMP:ReturnStatement}"]
3 -> 10
10 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.PropertyPattern" {
label = "Roslyn.PropertyPattern"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: arg|0# FlowCaptureOperation / IdentifierNameSyntax: arg|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: RootValue|3# FieldReferenceOperation / IdentifierNameSyntax: RootValue|4# LiteralOperation / LiteralExpressionSyntax: 0|3# ConstantPatternOperation / ConstantPatternSyntax: 0|2# PropertySubpatternOperation / SubpatternSyntax: RootValue: 0|1# RecursivePatternOperation / RecursivePatternSyntax: \{ RootValue: 0 \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ RootValue: 0 \} =\> \"RootValue is zero\"|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# LiteralOperation / LiteralExpressionSyntax: \"RootValue is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"RootValue is zero\"|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: A|3# FieldReferenceOperation / IdentifierNameSyntax: A|6# InstanceReferenceOperation / IdentifierNameSyntax: ValueA|5# FieldReferenceOperation / IdentifierNameSyntax: ValueA|6# LiteralOperation / LiteralExpressionSyntax: 0|5# ConstantPatternOperation / ConstantPatternSyntax: 0|4# PropertySubpatternOperation / SubpatternSyntax: ValueA: 0|3# RecursivePatternOperation / RecursivePatternSyntax: \{ ValueA: 0 \}|2# PropertySubpatternOperation / SubpatternSyntax: A: \{ ValueA: 0 \}|1# RecursivePatternOperation / RecursivePatternSyntax: \{ A: \{ ValueA: 0 \} \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ A: \{ ValueA: 0 \} \} =\> \"A is zero\"|##########}"]
R1 -> R3 [label="WhenFalse"]
R4 [shape=record label="{BLOCK #R4|1# LiteralOperation / LiteralExpressionSyntax: \"A is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"A is zero\"|##########}"]
R3 -> R4 [label="Else"]
R5 [shape=record label="{BLOCK #R5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: B|3# FieldReferenceOperation / IdentifierNameSyntax: B|6# InstanceReferenceOperation / IdentifierNameSyntax: ValueB|5# FieldReferenceOperation / IdentifierNameSyntax: ValueB|6# LiteralOperation / LiteralExpressionSyntax: 0|5# ConstantPatternOperation / ConstantPatternSyntax: 0|4# PropertySubpatternOperation / SubpatternSyntax: ValueB: 0|3# RecursivePatternOperation / RecursivePatternSyntax: \{ ValueB: 0 \}|2# PropertySubpatternOperation / SubpatternSyntax: B: \{ ValueB: 0 \}|1# RecursivePatternOperation / RecursivePatternSyntax: \{ B: \{ ValueB: 0 \} \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ B: \{ ValueB: 0 \} \} =\> \"A is zero\"|##########}"]
R3 -> R5 [label="WhenFalse"]
R6 [shape=record label="{BLOCK #R6|1# LiteralOperation / LiteralExpressionSyntax: \"A is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"A is zero\"|##########}"]
R5 -> R6 [label="Else"]
R7 [shape=record label="{BLOCK #R7|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|4# InstanceReferenceOperation / IdentifierNameSyntax: C|3# FieldReferenceOperation / IdentifierNameSyntax: C|6# InstanceReferenceOperation / IdentifierNameSyntax: ValueC|5# FieldReferenceOperation / IdentifierNameSyntax: ValueC|6# LiteralOperation / LiteralExpressionSyntax: 0|5# ConstantPatternOperation / ConstantPatternSyntax: 0|4# PropertySubpatternOperation / SubpatternSyntax: ValueC: 0|3# RecursivePatternOperation / RecursivePatternSyntax: \{ ValueC: 0 \}|2# PropertySubpatternOperation / SubpatternSyntax: C: \{ ValueC: 0 \}|1# RecursivePatternOperation / RecursivePatternSyntax: \{ C: \{ ValueC: 0 \} \}|0# IsPatternOperation / SwitchExpressionArmSyntax: \{ C: \{ ValueC: 0 \} \} =\> \"A is zero\"|##########}"]
R5 -> R7 [label="WhenFalse"]
R8 [shape=record label="{BLOCK #R8|1# LiteralOperation / LiteralExpressionSyntax: \"A is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"A is zero\"|##########}"]
R7 -> R8 [label="Else"]
R9 [shape=record label="{BLOCK #R9|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: arg|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> \"Default\"|##########}"]
R7 -> R9 [label="WhenFalse"]
R10 [shape=record label="{BLOCK #R10|1# LiteralOperation / LiteralExpressionSyntax: \"Default\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Default\"|##########}"]
R9 -> R10 [label="Else"]
}
R11 [shape=record label="{BLOCK #R11|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: arg switch\n        \{\n            \{ RootValue: 0 \} =\> \"RootValue is zero\",\n            \{ A: \{ ValueA: 0 \} \} =\> \"A is zero\",\n            \{ B: \{ ValueB: 0 \} \} =\> \"A is zero\",\n            \{ C: \{ ValueC: 0 \} \} =\> \"A is zero\",\n            _ =\> \"Default\"\n        \}|##########}"]
R9 -> R11 [label="WhenFalse"]
R12 [shape=record label="{BLOCK #R12|## BranchValue ##|0# FlowCaptureReferenceOperation / SwitchExpressionSyntax: arg switch\n        \{\n            \{ RootValue: 0 \} =\> \"RootValue is zero\",\n            \{ A: \{ ValueA: 0 \} \} =\> \"A is zero\",\n            \{ B: \{ ValueB: 0 \} \} =\> \"A is zero\",\n            \{ C: \{ ValueC: 0 \} \} =\> \"A is zero\",\n            _ =\> \"Default\"\n        \}|##########}"]
R2 -> R12
R4 -> R12
R6 -> R12
R8 -> R12
R10 -> R12
}
R0 [shape=record label="{ENTRY #R0}"]
R13 [shape=record label="{EXIT #R13}"]
R12 -> R13
}
}
