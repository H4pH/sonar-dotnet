digraph "Roslyn.TuplePattern" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# ParameterReferenceOperation / IdentifierNameSyntax: tuple|0# FlowCaptureOperation / IdentifierNameSyntax: tuple|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: tuple|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ConstantPatternOperation / ConstantPatternSyntax: 0|2# DiscardPatternOperation / DiscardPatternSyntax: _|1# RecursivePatternOperation / RecursivePatternSyntax: (0, _)|0# IsPatternOperation / SwitchExpressionArmSyntax: (0, _) =\> \"First is zero\"|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|1# LiteralOperation / LiteralExpressionSyntax: \"First is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"First is zero\"|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: tuple|2# DiscardPatternOperation / DiscardPatternSyntax: _|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ConstantPatternOperation / ConstantPatternSyntax: 0|1# RecursivePatternOperation / RecursivePatternSyntax: (_, 0)|0# IsPatternOperation / SwitchExpressionArmSyntax: (_, 0) =\> \"Second is zero\"|##########}"]
1 -> 3 [label="WhenFalse"]
4 [shape=record label="{BLOCK #4|1# LiteralOperation / LiteralExpressionSyntax: \"Second is zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Second is zero\"|##########}"]
3 -> 4 [label="Else"]
5 [shape=record label="{BLOCK #5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: tuple|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> \"No zero\"|##########}"]
3 -> 5 [label="WhenFalse"]
6 [shape=record label="{BLOCK #6|1# LiteralOperation / LiteralExpressionSyntax: \"No zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"No zero\"|##########}"]
5 -> 6 [label="Else"]
7 [shape=record label="{BLOCK #7|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: tuple switch\n        \{\n            (0, _) =\> \"First is zero\",\n            (_, 0) =\> \"Second is zero\",\n            _ =\> \"No zero\"\n        \}|##########}"]
5 -> 7 [label="WhenFalse"]
8 [shape=record label="{BLOCK #8|## BranchValue ##|0# FlowCaptureReferenceOperation / SwitchExpressionSyntax: tuple switch\n        \{\n            (0, _) =\> \"First is zero\",\n            (_, 0) =\> \"Second is zero\",\n            _ =\> \"No zero\"\n        \}|##########}"]
2 -> 8
4 -> 8
6 -> 8
9 [shape=record label="{EXIT #9}"]
8 -> 9
}
