digraph "Roslyn.ConstantAndNull" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|## BranchValue ##|1# ParameterReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 10|1# ConstantPatternOperation / ConstantPatternSyntax: 10|0# IsPatternOperation / IsPatternExpressionSyntax: a is 10|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|2# ParameterReferenceOperation / IdentifierNameSyntax: b|4# LiteralOperation / LiteralExpressionSyntax: null|3# ConversionOperation / LiteralExpressionSyntax: null|2# ConstantPatternOperation / ConstantPatternSyntax: null|1# IsPatternOperation / IsPatternExpressionSyntax: b is null|0# FlowCaptureOperation / IsPatternExpressionSyntax: b is null|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|1# LiteralOperation / IsPatternExpressionSyntax: a is 10|0# FlowCaptureOperation / IsPatternExpressionSyntax: a is 10|##########}"]
1 -> 3 [label="WhenFalse"]
4 [shape=record label="{BLOCK #4|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = a is 10 && b is null|1# FlowCaptureReferenceOperation / BinaryExpressionSyntax: a is 10 && b is null|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = a is 10 && b is null|##########}"]
2 -> 4
3 -> 4
5 [shape=record label="{EXIT #5}"]
4 -> 5
}
