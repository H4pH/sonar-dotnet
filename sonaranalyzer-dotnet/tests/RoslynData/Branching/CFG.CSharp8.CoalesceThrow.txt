// http://viz-js.com/
// https://dreampuf.github.io/GraphvizOnline/#digraph%20%22CoalesceThrow%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.CoalesceThrow%22%20%7B%0Alabel%20%3D%20%22Sonar.CoalesceThrow%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ACoalesceExpression%7CIdentifierNameSyntax%3A%20a%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ACoalesceExpression%7CIdentifierNameSyntax%3A%20b%7D%22%5D%0D%0A1%20-%3E%203%20%5Blabel%3D%22True%22%5D%0D%0A1%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AThrowExpression%7CObjectCreationExpressionSyntax%3A%20new%20ArgumentNullException()%7D%22%5D%0D%0A3%20-%3E%204%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CVariableDeclaratorSyntax%3A%20c%20%3D%20a%20%3F%3F%20b%20%3F%3F%20throw%20new%20ArgumentNullException()%7D%22%5D%0D%0A2%20-%3E%204%0D%0A4%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.CoalesceThrow%22%20%7B%0Alabel%20%3D%20%22Roslyn.CoalesceThrow%22%0D%0AR0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23R0%7D%22%5D%0D%0AR1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R1%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0%20-%3E%20R1%0D%0AR2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R2%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R2%20%5Blabel%3D%22Else%22%5D%0D%0AR3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R3%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R3%20%5Blabel%3D%22WhenTrue%22%5D%0D%0AR4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R4%7C%23%23%20BranchValue%20%23%23%7C1%23%20ObjectCreationOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20ArgumentNullException()%7C0%23%20ConversionOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20ArgumentNullException()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3%20-%3E%20R4%20%5Blabel%3D%22WhenTrue%22%5D%0D%0AR5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R5%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C0%23%20FlowCaptureOperation%20%2F%20BinaryExpressionSyntax%3A%20b%20%3F%3F%20throw%20new%20ArgumentNullException()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3%20-%3E%20R5%20%5Blabel%3D%22Else%22%5D%0D%0AR6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R6%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20c%20%3D%20a%20%3F%3F%20b%20%3F%3F%20throw%20new%20ArgumentNullException()%7C1%23%20FlowCaptureReferenceOperation%20%2F%20BinaryExpressionSyntax%3A%20a%20%3F%3F%20b%20%3F%3F%20throw%20new%20ArgumentNullException()%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20c%20%3D%20a%20%3F%3F%20b%20%3F%3F%20throw%20new%20ArgumentNullException()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2%20-%3E%20R6%0D%0AR5%20-%3E%20R6%0D%0AR7%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23R7%7D%22%5D%0D%0AR6%20-%3E%20R7%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void CoalesceThrow(string a, string b)
    {
        var c = a ?? b ?? throw new ArgumentNullException();
    }
*/

digraph "CoalesceThrow" {
subgraph "cluster_Sonar.CoalesceThrow" {
label = "Sonar.CoalesceThrow"
0 [shape=record label="{BINARY:CoalesceExpression|IdentifierNameSyntax: a}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{BINARY:CoalesceExpression|IdentifierNameSyntax: b}"]
1 -> 3 [label="True"]
1 -> 2 [label="False"]
3 [shape=record label="{JUMP:ThrowExpression|ObjectCreationExpressionSyntax: new ArgumentNullException()}"]
3 -> 4
2 [shape=record label="{SIMPLE|VariableDeclaratorSyntax: c = a ?? b ?? throw new ArgumentNullException()}"]
2 -> 4
4 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.CoalesceThrow" {
label = "Roslyn.CoalesceThrow"
R0 [shape=record label="{ENTRY #R0}"]
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|0# IsNullOperation / IdentifierNameSyntax: a|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|1# ParameterReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / IdentifierNameSyntax: b|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|0# IsNullOperation / IdentifierNameSyntax: b|##########}"]
R1 -> R3 [label="WhenTrue"]
R4 [shape=record label="{BLOCK #R4|## BranchValue ##|1# ObjectCreationOperation / ObjectCreationExpressionSyntax: new ArgumentNullException()|0# ConversionOperation / ObjectCreationExpressionSyntax: new ArgumentNullException()|##########}"]
R3 -> R4 [label="WhenTrue"]
R5 [shape=record label="{BLOCK #R5|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / BinaryExpressionSyntax: b ?? throw new ArgumentNullException()|##########}"]
R3 -> R5 [label="Else"]
R6 [shape=record label="{BLOCK #R6|1# LocalReferenceOperation / VariableDeclaratorSyntax: c = a ?? b ?? throw new ArgumentNullException()|1# FlowCaptureReferenceOperation / BinaryExpressionSyntax: a ?? b ?? throw new ArgumentNullException()|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: c = a ?? b ?? throw new ArgumentNullException()|##########}"]
R2 -> R6
R5 -> R6
R7 [shape=record label="{EXIT #R7}"]
R6 -> R7
}
}
