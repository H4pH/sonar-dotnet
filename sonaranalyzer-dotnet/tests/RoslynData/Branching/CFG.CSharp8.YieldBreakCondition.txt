// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22YieldBreakCondition%22+%7B%0D%0Asubgraph+%22cluster_Sonar.YieldBreakCondition%22+%7B%0Alabel+%3D+%22Sonar.YieldBreakCondition%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AYieldReturnStatement%7CLiteralExpressionSyntax%3A+%5C%22A%5C%22%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AYieldReturnStatement%7CLiteralExpressionSyntax%3A+%5C%22B%5C%22%7D%22%5D%0D%0A1+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A+condition%7D%22%5D%0D%0A2+-%3E+3+%5Blabel%3D%22True%22%5D%0D%0A2+-%3E+4+%5Blabel%3D%22False%22%5D%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AYieldBreakStatement%7D%22%5D%0D%0A3+-%3E+5%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AYieldReturnStatement%7CLiteralExpressionSyntax%3A+%5C%22C%5C%22%7D%22%5D%0D%0A4+-%3E+5%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.YieldBreakCondition%22+%7B%0Alabel+%3D+%22Roslyn.YieldBreakCondition%22%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22A%5C%22%7C0%23+ReturnOperation+%2F+YieldStatementSyntax%3A+yield+return+%5C%22A%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22B%5C%22%7C0%23+ReturnOperation+%2F+YieldStatementSyntax%3A+yield+return+%5C%22B%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C0%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+condition%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22C%5C%22%7C0%23+ReturnOperation+%2F+YieldStatementSyntax%3A+yield+return+%5C%22C%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R3%7D%22%5D%0D%0AR1+-%3E+R3+%5Blabel%3D%22Else%22%5D%0D%0AR2+-%3E+R3%0D%0A%7D%0D%0A%7D%0D%0A

/*
public IEnumerable<string> YieldBreakCondition(bool condition)
    {
        yield return "A";
        yield return "B";
        if (condition)
        {
            yield break;
        }
        yield return "C";
    }
*/

digraph "YieldBreakCondition" {
subgraph "cluster_Sonar.YieldBreakCondition" {
label = "Sonar.YieldBreakCondition"
0 [shape=record label="{JUMP:YieldReturnStatement|LiteralExpressionSyntax: \"A\"}"]
0 -> 1
1 [shape=record label="{JUMP:YieldReturnStatement|LiteralExpressionSyntax: \"B\"}"]
1 -> 2
2 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: condition}"]
2 -> 3 [label="True"]
2 -> 4 [label="False"]
3 [shape=record label="{JUMP:YieldBreakStatement}"]
3 -> 5
4 [shape=record label="{JUMP:YieldReturnStatement|LiteralExpressionSyntax: \"C\"}"]
4 -> 5
5 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.YieldBreakCondition" {
label = "Roslyn.YieldBreakCondition"
R0 [shape=record label="{ENTRY #R0}"]
R1 [shape=record label="{BLOCK #R1|1# LiteralOperation / LiteralExpressionSyntax: \"A\"|0# ReturnOperation / YieldStatementSyntax: yield return \"A\";|##########|1# LiteralOperation / LiteralExpressionSyntax: \"B\"|0# ReturnOperation / YieldStatementSyntax: yield return \"B\";|##########|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: condition|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# LiteralOperation / LiteralExpressionSyntax: \"C\"|0# ReturnOperation / YieldStatementSyntax: yield return \"C\";|##########}"]
R1 -> R2 [label="WhenFalse"]
R3 [shape=record label="{EXIT #R3}"]
R1 -> R3 [label="Else"]
R2 -> R3
}
}
