digraph "Roslyn.CoalescingAssignmentMulti" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# ParameterReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|0# IsNullOperation / IdentifierNameSyntax: a|##########}"]
1 -> 2
3 [shape=record label="{BLOCK #3|1# ParameterReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / IdentifierNameSyntax: b|##########}"]
2 -> 3 [label="WhenTrue"]
4 [shape=record label="{BLOCK #4|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / IdentifierNameSyntax: b|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|0# IsNullOperation / IdentifierNameSyntax: b|##########}"]
3 -> 4
5 [shape=record label="{BLOCK #5|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / AssignmentExpressionSyntax: b ??= c ??= d|##########}"]
4 -> 5 [label="Else"]
6 [shape=record label="{BLOCK #6|1# ParameterReferenceOperation / IdentifierNameSyntax: c|0# FlowCaptureOperation / IdentifierNameSyntax: c|##########}"]
4 -> 6 [label="WhenTrue"]
7 [shape=record label="{BLOCK #7|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: c|0# FlowCaptureOperation / IdentifierNameSyntax: c|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: c|0# IsNullOperation / IdentifierNameSyntax: c|##########}"]
6 -> 7
8 [shape=record label="{BLOCK #8|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: c|0# FlowCaptureOperation / AssignmentExpressionSyntax: c ??= d|##########}"]
7 -> 8 [label="Else"]
9 [shape=record label="{BLOCK #9|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: c|2# ParameterReferenceOperation / IdentifierNameSyntax: d|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: c ??= d|0# FlowCaptureOperation / AssignmentExpressionSyntax: c ??= d|##########}"]
7 -> 9 [label="WhenTrue"]
10 [shape=record label="{BLOCK #10|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|2# FlowCaptureReferenceOperation / AssignmentExpressionSyntax: c ??= d|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: b ??= c ??= d|0# FlowCaptureOperation / AssignmentExpressionSyntax: b ??= c ??= d|##########}"]
8 -> 10
9 -> 10
11 [shape=record label="{BLOCK #11|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|1# FlowCaptureReferenceOperation / AssignmentExpressionSyntax: b ??= c ??= d|0# SimpleAssignmentOperation / AssignmentExpressionSyntax: a ??= b ??= c ??= d|##########}"]
5 -> 11
10 -> 11
12 [shape=record label="{EXIT #12}"]
2 -> 12 [label="Else"]
11 -> 12
}
