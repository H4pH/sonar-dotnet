// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22ConditionalAccess%22+%7B%0D%0Asubgraph+%22cluster_Sonar.ConditionalAccess%22+%7B%0Alabel+%3D+%22Sonar.ConditionalAccess%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AConditionalAccessExpression%7CIdentifierNameSyntax%3A+o%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+ToString%7CMemberBindingExpressionSyntax%3A+.ToString%7CInvocationExpressionSyntax%3A+.ToString()%7D%22%5D%0D%0A2+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CVariableDeclaratorSyntax%3A+ret+%3D+o%3F.ToString()%7D%22%5D%0D%0A1+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.ConditionalAccess%22+%7B%0Alabel+%3D+%22Roslyn.ConditionalAccess%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+o%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+o%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+o%7C0%23+IsNullOperation+%2F+IdentifierNameSyntax%3A+o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C2%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+o%7C1%23+InvocationOperation.ToString+%2F+InvocationExpressionSyntax%3A+.ToString()%7C0%23+FlowCaptureOperation+%2F+InvocationExpressionSyntax%3A+.ToString()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C1%23+DefaultValueOperation+%2F+IdentifierNameSyntax%3A+o%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R3+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+o%3F.ToString()%7C1%23+FlowCaptureReferenceOperation+%2F+ConditionalAccessExpressionSyntax%3A+o%3F.ToString()%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+o%3F.ToString()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R4%0D%0AR3+-%3E+R4%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R5%7D%22%5D%0D%0AR4+-%3E+R5%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void ConditionalAccess(object o)
    {
        var ret = o?.ToString();
    }
*/

digraph "ConditionalAccess" {
subgraph "cluster_Sonar.ConditionalAccess" {
label = "Sonar.ConditionalAccess"
0 [shape=record label="{BINARY:ConditionalAccessExpression|IdentifierNameSyntax: o}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
2 [shape=record label="{SIMPLE|IdentifierNameSyntax: ToString|MemberBindingExpressionSyntax: .ToString|InvocationExpressionSyntax: .ToString()}"]
2 -> 1
1 [shape=record label="{SIMPLE|VariableDeclaratorSyntax: ret = o?.ToString()}"]
1 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.ConditionalAccess" {
label = "Roslyn.ConditionalAccess"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: o|0# FlowCaptureOperation / IdentifierNameSyntax: o|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: o|0# IsNullOperation / IdentifierNameSyntax: o|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: o|1# InvocationOperation.ToString / InvocationExpressionSyntax: .ToString()|0# FlowCaptureOperation / InvocationExpressionSyntax: .ToString()|##########}"]
R1 -> R2 [label="Else"]
}
R3 [shape=record label="{BLOCK #R3|1# DefaultValueOperation / IdentifierNameSyntax: o|0# FlowCaptureOperation / IdentifierNameSyntax: o|##########}"]
R1 -> R3 [label="WhenTrue"]
R4 [shape=record label="{BLOCK #R4|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = o?.ToString()|1# FlowCaptureReferenceOperation / ConditionalAccessExpressionSyntax: o?.ToString()|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = o?.ToString()|##########}"]
R2 -> R4
R3 -> R4
}
R0 [shape=record label="{ENTRY #R0}"]
R5 [shape=record label="{EXIT #R5}"]
R4 -> R5
}
}
