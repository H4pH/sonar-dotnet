digraph "Roslyn.SwitchExpressionNoDefault" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# ParameterReferenceOperation / IdentifierNameSyntax: value|0# FlowCaptureOperation / IdentifierNameSyntax: value|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: 0|1# ConstantPatternOperation / ConstantPatternSyntax: 0|0# IsPatternOperation / SwitchExpressionArmSyntax: 0 =\> \"Zero\"|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|1# LiteralOperation / LiteralExpressionSyntax: \"Zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Zero\"|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ConstantPatternOperation / ConstantPatternSyntax: 1|0# IsPatternOperation / SwitchExpressionArmSyntax: 1 =\> \"One\"|##########}"]
1 -> 3 [label="WhenFalse"]
4 [shape=record label="{BLOCK #4|1# LiteralOperation / LiteralExpressionSyntax: \"One\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"One\"|##########}"]
3 -> 4 [label="Else"]
5 [shape=record label="{BLOCK #5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: 2|1# ConstantPatternOperation / ConstantPatternSyntax: 2|0# IsPatternOperation / SwitchExpressionArmSyntax: 2 =\> \"Two\"|##########}"]
3 -> 5 [label="WhenFalse"]
6 [shape=record label="{BLOCK #6|1# LiteralOperation / LiteralExpressionSyntax: \"Two\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two\"|##########}"]
5 -> 6 [label="Else"]
7 [shape=record label="{BLOCK #7|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: value switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> \"Two\",\n        \}|##########}"]
5 -> 7 [label="WhenFalse"]
8 [shape=record label="{BLOCK #8|## BranchValue ##|0# FlowCaptureReferenceOperation / SwitchExpressionSyntax: value switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> \"Two\",\n        \}|##########}"]
2 -> 8
4 -> 8
6 -> 8
9 [shape=record label="{EXIT #9}"]
8 -> 9
}
