// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22CoalescingAssignmentSingle%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.CoalescingAssignmentSingle%22%20%7B%0Alabel%20%3D%20%22Sonar.CoalescingAssignmentSingle%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ACoalesceAssignmentExpression%7CIdentifierNameSyntax%3A%20a%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20b%7D%22%5D%0D%0A1%20-%3E%202%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CAssignmentExpressionSyntax%3A%20a%20%3F%3F%3D%20b%7D%22%5D%0D%0A2%20-%3E%203%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.CoalescingAssignmentSingle%22%20%7B%0Alabel%20%3D%20%22Roslyn.CoalescingAssignmentSingle%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root2%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0A%7D%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0ARoot3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root3%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C0%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20a%20%3F%3F%3D%20b%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2%20-%3E%20Root3%20%5Blabel%3D%22WhenTrue%22%5D%0D%0A%7D%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot4%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root4%7D%22%5D%0D%0ARoot2%20-%3E%20Root4%20%5Blabel%3D%22Else%22%5D%0D%0ARoot3%20-%3E%20Root4%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void CoalescingAssignmentSingle(string a, string b)
    {
        a ??= b;
    }
*/

digraph "CoalescingAssignmentSingle" {
subgraph "cluster_Sonar.CoalescingAssignmentSingle" {
label = "Sonar.CoalescingAssignmentSingle"
0 [shape=record label="{BINARY:CoalesceAssignmentExpression|IdentifierNameSyntax: a}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|IdentifierNameSyntax: b}"]
1 -> 2
2 [shape=record label="{SIMPLE|AssignmentExpressionSyntax: a ??= b}"]
2 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.CoalescingAssignmentSingle" {
label = "Roslyn.CoalescingAssignmentSingle"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root2 [shape=record label="{BLOCK #Root2|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|0# IsNullOperation / IdentifierNameSyntax: a|##########}"]
Root1 -> Root2
}
Root1 [shape=record label="{BLOCK #Root1|1# ParameterReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########}"]
Root0 -> Root1
Root3 [shape=record label="{BLOCK #Root3|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|1# ParameterReferenceOperation / IdentifierNameSyntax: b|0# SimpleAssignmentOperation / AssignmentExpressionSyntax: a ??= b|##########}"]
Root2 -> Root3 [label="WhenTrue"]
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root4 [shape=record label="{EXIT #Root4}"]
Root2 -> Root4 [label="Else"]
Root3 -> Root4
}
}
