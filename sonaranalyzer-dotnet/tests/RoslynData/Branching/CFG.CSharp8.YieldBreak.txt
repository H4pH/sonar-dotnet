// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22YieldBreak%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.YieldBreak%22%20%7B%0Alabel%20%3D%20%22Sonar.YieldBreak%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AYieldReturnStatement%7CLiteralExpressionSyntax%3A%20%5C%22A%5C%22%7D%22%5D%0D%0A0%20-%3E%201%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AYieldReturnStatement%7CLiteralExpressionSyntax%3A%20%5C%22B%5C%22%7D%22%5D%0D%0A1%20-%3E%202%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AYieldBreakStatement%7D%22%5D%0D%0A2%20-%3E%203%0D%0A4%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AYieldReturnStatement%7CLiteralExpressionSyntax%3A%20%5C%22C%5C%22%7D%22%5D%0D%0A4%20-%3E%203%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.YieldBreak%22%20%7B%0Alabel%20%3D%20%22Roslyn.YieldBreak%22%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22A%5C%22%7C0%23%20ReturnOperation%20%2F%20YieldStatementSyntax%3A%20yield%20return%20%5C%22A%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22B%5C%22%7C0%23%20ReturnOperation%20%2F%20YieldStatementSyntax%3A%20yield%20return%20%5C%22B%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root2%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22C%5C%22%7C0%23%20ReturnOperation%20%2F%20YieldStatementSyntax%3A%20yield%20return%20%5C%22C%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root3%7D%22%5D%0D%0ARoot1%20-%3E%20Root3%0D%0ARoot2%20-%3E%20Root3%0D%0A%7D%0D%0A%7D%0D%0A

/*
public IEnumerable<string> YieldBreak()
    {
        yield return "A";
        yield return "B";
        yield break;
        yield return "C";
    }
*/

digraph "YieldBreak" {
subgraph "cluster_Sonar.YieldBreak" {
label = "Sonar.YieldBreak"
0 [shape=record label="{JUMP:YieldReturnStatement|LiteralExpressionSyntax: \"A\"}"]
0 -> 1
1 [shape=record label="{JUMP:YieldReturnStatement|LiteralExpressionSyntax: \"B\"}"]
1 -> 2
2 [shape=record label="{JUMP:YieldBreakStatement}"]
2 -> 3
4 [shape=record label="{JUMP:YieldReturnStatement|LiteralExpressionSyntax: \"C\"}"]
4 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.YieldBreak" {
label = "Roslyn.YieldBreak"
Root0 [shape=record label="{ENTRY #Root0}"]
Root1 [shape=record label="{BLOCK #Root1|1# LiteralOperation / LiteralExpressionSyntax: \"A\"|0# ReturnOperation / YieldStatementSyntax: yield return \"A\";|##########|1# LiteralOperation / LiteralExpressionSyntax: \"B\"|0# ReturnOperation / YieldStatementSyntax: yield return \"B\";|##########}"]
Root0 -> Root1
Root2 [shape=record label="{BLOCK #Root2|1# LiteralOperation / LiteralExpressionSyntax: \"C\"|0# ReturnOperation / YieldStatementSyntax: yield return \"C\";|##########}"]
Root3 [shape=record label="{EXIT #Root3}"]
Root1 -> Root3
Root2 -> Root3
}
}
