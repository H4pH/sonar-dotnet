// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22ConditionAndOr%22+%7B%0D%0Asubgraph+%22cluster_Sonar.ConditionAndOr%22+%7B%0Alabel+%3D+%22Sonar.ConditionAndOr%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AIdentifierName%7CLiteralExpressionSyntax%3A+%5C%22Init%5C%22%7CVariableDeclaratorSyntax%3A+value+%3D+%5C%22Init%5C%22%7CIdentifierNameSyntax%3A+a%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A+b%7D%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+4+%5Blabel%3D%22False%22%5D%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A+c%7D%22%5D%0D%0A4+-%3E+3+%5Blabel%3D%22True%22%5D%0D%0A4+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Modified%5C%22%7CAssignmentExpressionSyntax%3A+value+%3D+%5C%22Modified%5C%22%7D%22%5D%0D%0A3+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AReturnStatement%7CIdentifierNameSyntax%3A+value%7D%22%5D%0D%0A2+-%3E+5%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.ConditionAndOr%22+%7B%0Alabel+%3D+%22Roslyn.ConditionAndOr%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+%5C%22Init%5C%22%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Init%5C%22%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+%5C%22Init%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C0%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C%23%23+BranchValue+%23%23%7C0%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+b%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22Else%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C%23%23+BranchValue+%23%23%7C0%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+c%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R3+%5Blabel%3D%22Else%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Modified%5C%22%7C1%23+SimpleAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+value+%3D+%5C%22Modified%5C%22%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+value+%3D+%5C%22Modified%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R4+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR3+-%3E+R4+%5Blabel%3D%22Else%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R5%7C%23%23+BranchValue+%23%23%7C0%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R5+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR3+-%3E+R5+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4+-%3E+R5%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR6+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R6%7D%22%5D%0D%0AR5+-%3E+R6+%5Blabel%3D%22Return%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public string ConditionAndOr(bool a, bool b, bool c)
    {
        string value = "Init";
        if (a && ((((b || c)))))
        {
            value = "Modified";
        }
        return value;
    }
*/

digraph "ConditionAndOr" {
subgraph "cluster_Sonar.ConditionAndOr" {
label = "Sonar.ConditionAndOr"
0 [shape=record label="{BINARY:IdentifierName|LiteralExpressionSyntax: \"Init\"|VariableDeclaratorSyntax: value = \"Init\"|IdentifierNameSyntax: a}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: b}"]
1 -> 3 [label="True"]
1 -> 4 [label="False"]
4 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: c}"]
4 -> 3 [label="True"]
4 -> 2 [label="False"]
3 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Modified\"|AssignmentExpressionSyntax: value = \"Modified\"}"]
3 -> 2
2 [shape=record label="{JUMP:ReturnStatement|IdentifierNameSyntax: value}"]
2 -> 5
5 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.ConditionAndOr" {
label = "Roslyn.ConditionAndOr"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = \"Init\"|1# LiteralOperation / LiteralExpressionSyntax: \"Init\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = \"Init\"|##########|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: a|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: b|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: c|##########}"]
R2 -> R3 [label="Else"]
R4 [shape=record label="{BLOCK #R4|2# LocalReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: \"Modified\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: value = \"Modified\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: value = \"Modified\";|##########}"]
R2 -> R4 [label="WhenTrue"]
R3 -> R4 [label="Else"]
R5 [shape=record label="{BLOCK #R5|## BranchValue ##|0# LocalReferenceOperation / IdentifierNameSyntax: value|##########}"]
R1 -> R5 [label="WhenFalse"]
R3 -> R5 [label="WhenFalse"]
R4 -> R5
}
R0 [shape=record label="{ENTRY #R0}"]
R6 [shape=record label="{EXIT #R6}"]
R5 -> R6 [label="Return"]
}
}
