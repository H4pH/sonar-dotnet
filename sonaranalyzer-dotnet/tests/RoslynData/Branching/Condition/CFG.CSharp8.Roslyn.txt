digraph "Roslyn.Condition" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = \"Init\"|1# LiteralOperation / LiteralExpressionSyntax: \"Init\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = \"Init\"|##########|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: condition|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|2# LocalReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: \"True\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: value = \"True\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: value = \"True\";|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|2# LocalReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: \"False\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: value = \"False\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: value = \"False\";|##########}"]
1 -> 3 [label="WhenFalse"]
4 [shape=record label="{BLOCK #4|## BranchValue ##|0# LocalReferenceOperation / IdentifierNameSyntax: value|##########}"]
2 -> 4
3 -> 4
5 [shape=record label="{EXIT #5}"]
4 -> 5
}
