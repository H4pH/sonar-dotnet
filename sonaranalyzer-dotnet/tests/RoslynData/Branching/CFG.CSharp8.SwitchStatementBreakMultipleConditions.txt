// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22SwitchStatementBreakMultipleConditions%22+%7B%0D%0Asubgraph+%22cluster_Sonar.SwitchStatementBreakMultipleConditions%22+%7B%0Alabel+%3D+%22Sonar.SwitchStatementBreakMultipleConditions%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3ASwitchStatement%7CVariableDeclaratorSyntax%3A+ret%7CIdentifierNameSyntax%3A+value%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ACaseSwitchLabel%7CIdentifierNameSyntax%3A+value%7D%22%5D%0D%0A1+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22False%22%5D%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ACaseSwitchLabel%7CIdentifierNameSyntax%3A+value%7D%22%5D%0D%0A3+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A3+-%3E+4+%5Blabel%3D%22False%22%5D%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ACaseSwitchLabel%7CIdentifierNameSyntax%3A+value%7D%22%5D%0D%0A4+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A4+-%3E+5+%5Blabel%3D%22False%22%5D%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BJUMP%3ABreakStatement%7CLiteralExpressionSyntax%3A+%5C%22Small%5C%22%7CAssignmentExpressionSyntax%3A+ret+%3D+%5C%22Small%5C%22%7D%22%5D%0D%0A2+-%3E+6%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BJUMP%3ABreakStatement%7CLiteralExpressionSyntax%3A+%5C%22Other%5C%22%7CAssignmentExpressionSyntax%3A+ret+%3D+%5C%22Other%5C%22%7D%22%5D%0D%0A5+-%3E+6%0D%0A6+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AReturnStatement%7CIdentifierNameSyntax%3A+ret%7D%22%5D%0D%0A6+-%3E+7%0D%0A7+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.SwitchStatementBreakMultipleConditions%22+%7B%0Alabel+%3D+%22Roslyn.SwitchStatementBreakMultipleConditions%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+value%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C0%23+BinaryOperation+%2F+LiteralExpressionSyntax%3A+0%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C0%23+BinaryOperation+%2F+LiteralExpressionSyntax%3A+1%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root2+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root3%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+2%7C0%23+BinaryOperation+%2F+LiteralExpressionSyntax%3A+2%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+Root3+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root4%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ret%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Small%5C%22%7C1%23+SimpleAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+ret+%3D+%5C%22Small%5C%22%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+ret+%3D+%5C%22Small%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root4+%5Blabel%3D%22Else%22%5D%0D%0ARoot2+-%3E+Root4+%5Blabel%3D%22Else%22%5D%0D%0ARoot3+-%3E+Root4+%5Blabel%3D%22Else%22%5D%0D%0ARoot5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root5%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ret%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Other%5C%22%7C1%23+SimpleAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+ret+%3D+%5C%22Other%5C%22%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+ret+%3D+%5C%22Other%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root5+%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0ARoot6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root6%7C%23%23+BranchValue+%23%23%7C0%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ret%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot4+-%3E+Root6%0D%0ARoot5+-%3E+Root6%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot7+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root7%7D%22%5D%0D%0ARoot6+-%3E+Root7+%5Blabel%3D%22Return%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public string SwitchStatementBreakMultipleConditions(int value)
    {
        string ret;
        switch (value)
        {
            case 0:
            case 1:
            case 2:
                ret = "Small";
                break;

            default:
                ret = "Other";
                break;
        }
        return ret;
    }
*/

digraph "SwitchStatementBreakMultipleConditions" {
subgraph "cluster_Sonar.SwitchStatementBreakMultipleConditions" {
label = "Sonar.SwitchStatementBreakMultipleConditions"
0 [shape=record label="{BRANCH:SwitchStatement|VariableDeclaratorSyntax: ret|IdentifierNameSyntax: value}"]
0 -> 1
1 [shape=record label="{BINARY:CaseSwitchLabel|IdentifierNameSyntax: value}"]
1 -> 2 [label="True"]
1 -> 3 [label="False"]
3 [shape=record label="{BINARY:CaseSwitchLabel|IdentifierNameSyntax: value}"]
3 -> 2 [label="True"]
3 -> 4 [label="False"]
4 [shape=record label="{BINARY:CaseSwitchLabel|IdentifierNameSyntax: value}"]
4 -> 2 [label="True"]
4 -> 5 [label="False"]
2 [shape=record label="{JUMP:BreakStatement|LiteralExpressionSyntax: \"Small\"|AssignmentExpressionSyntax: ret = \"Small\"}"]
2 -> 6
5 [shape=record label="{JUMP:BreakStatement|LiteralExpressionSyntax: \"Other\"|AssignmentExpressionSyntax: ret = \"Other\"}"]
5 -> 6
6 [shape=record label="{JUMP:ReturnStatement|IdentifierNameSyntax: ret}"]
6 -> 7
7 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.SwitchStatementBreakMultipleConditions" {
label = "Roslyn.SwitchStatementBreakMultipleConditions"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root1 [shape=record label="{BLOCK #Root1|1# ParameterReferenceOperation / IdentifierNameSyntax: value|0# FlowCaptureOperation / IdentifierNameSyntax: value|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|1# LiteralOperation / LiteralExpressionSyntax: 0|0# BinaryOperation / LiteralExpressionSyntax: 0|##########}"]
Root0 -> Root1
Root2 [shape=record label="{BLOCK #Root2|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|1# LiteralOperation / LiteralExpressionSyntax: 1|0# BinaryOperation / LiteralExpressionSyntax: 1|##########}"]
Root1 -> Root2 [label="WhenFalse"]
Root3 [shape=record label="{BLOCK #Root3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|1# LiteralOperation / LiteralExpressionSyntax: 2|0# BinaryOperation / LiteralExpressionSyntax: 2|##########}"]
Root2 -> Root3 [label="WhenFalse"]
Root4 [shape=record label="{BLOCK #Root4|2# LocalReferenceOperation / IdentifierNameSyntax: ret|2# LiteralOperation / LiteralExpressionSyntax: \"Small\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: ret = \"Small\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: ret = \"Small\";|##########}"]
Root1 -> Root4 [label="Else"]
Root2 -> Root4 [label="Else"]
Root3 -> Root4 [label="Else"]
Root5 [shape=record label="{BLOCK #Root5|2# LocalReferenceOperation / IdentifierNameSyntax: ret|2# LiteralOperation / LiteralExpressionSyntax: \"Other\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: ret = \"Other\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: ret = \"Other\";|##########}"]
Root3 -> Root5 [label="WhenFalse"]
}
Root6 [shape=record label="{BLOCK #Root6|## BranchValue ##|0# LocalReferenceOperation / IdentifierNameSyntax: ret|##########}"]
Root4 -> Root6
Root5 -> Root6
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root7 [shape=record label="{EXIT #Root7}"]
Root6 -> Root7 [label="Return"]
}
}
