// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22SwitchExpression%22+%7B%0D%0Asubgraph+%22cluster_Sonar.SwitchExpression%22+%7B%0Alabel+%3D+%22Sonar.SwitchExpression%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+value%7CLiteralExpressionSyntax%3A+0%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Zero%5C%22%7D%22%5D%0D%0A1+-%3E+3%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+value%7CLiteralExpressionSyntax%3A+1%7D%22%5D%0D%0A2+-%3E+4+%5Blabel%3D%22True%22%5D%0D%0A2+-%3E+5+%5Blabel%3D%22False%22%5D%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22One%5C%22%7D%22%5D%0D%0A4+-%3E+3%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+value%7CLiteralExpressionSyntax%3A+2%7D%22%5D%0D%0A5+-%3E+6+%5Blabel%3D%22True%22%5D%0D%0A5+-%3E+7+%5Blabel%3D%22False%22%5D%0D%0A6+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Two%5C%22%7D%22%5D%0D%0A6+-%3E+3%0D%0A7+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Else%5C%22%7D%22%5D%0D%0A7+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.SwitchExpression%22+%7B%0Alabel+%3D+%22Roslyn.SwitchExpression%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+value%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+0+%3D%5C%3E+%5C%22Zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Zero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22Else%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+1%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+1+%3D%5C%3E+%5C%22One%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R3+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22One%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22One%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R4+%5Blabel%3D%22Else%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R5%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+2%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+2%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+2+%3D%5C%3E+%5C%22Two%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R5+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R6%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5+-%3E+R6+%5Blabel%3D%22Else%22%5D%0D%0AR7+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R7%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C1%23+DiscardPatternOperation+%2F+DiscardPatternSyntax%3A+_%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+_+%3D%5C%3E+%5C%22Else%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5+-%3E+R7+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR8+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R8%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Else%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Else%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR7+-%3E+R8+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0AR9+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R9%7C%23%23+BranchValue+%23%23%7C0%23+ObjectCreationOperation+%2F+SwitchExpressionSyntax%3A+value+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+%5C%22Two%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+%5C%22Else%5C%22%5Cn++++++++%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR7+-%3E+R9+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR9+-%3E+NoDestinationR9+%5Blabel%3D%22Throw%22%5D%0D%0AR10+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R10%7C%23%23+BranchValue+%23%23%7C0%23+FlowCaptureReferenceOperation+%2F+SwitchExpressionSyntax%3A+value+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+%5C%22Two%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+%5C%22Else%5C%22%5Cn++++++++%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R10%0D%0AR4+-%3E+R10%0D%0AR6+-%3E+R10%0D%0AR8+-%3E+R10%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR11+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R11%7D%22%5D%0D%0AR10+-%3E+R11+%5Blabel%3D%22Return%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public string SwitchExpression(int value) =>
        value switch
        {
            0 => "Zero",
            1 => "One",
            2 => "Two",
            _ => "Else"
        };
*/

digraph "SwitchExpression" {
subgraph "cluster_Sonar.SwitchExpression" {
label = "Sonar.SwitchExpression"
0 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: value|LiteralExpressionSyntax: 0}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Zero\"}"]
1 -> 3
2 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: value|LiteralExpressionSyntax: 1}"]
2 -> 4 [label="True"]
2 -> 5 [label="False"]
4 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"One\"}"]
4 -> 3
5 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: value|LiteralExpressionSyntax: 2}"]
5 -> 6 [label="True"]
5 -> 7 [label="False"]
6 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two\"}"]
6 -> 3
7 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Else\"}"]
7 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.SwitchExpression" {
label = "Roslyn.SwitchExpression"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: value|0# FlowCaptureOperation / IdentifierNameSyntax: value|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: 0|1# ConstantPatternOperation / ConstantPatternSyntax: 0|0# IsPatternOperation / SwitchExpressionArmSyntax: 0 =\> \"Zero\"|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# LiteralOperation / LiteralExpressionSyntax: \"Zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Zero\"|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ConstantPatternOperation / ConstantPatternSyntax: 1|0# IsPatternOperation / SwitchExpressionArmSyntax: 1 =\> \"One\"|##########}"]
R1 -> R3 [label="WhenFalse"]
R4 [shape=record label="{BLOCK #R4|1# LiteralOperation / LiteralExpressionSyntax: \"One\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"One\"|##########}"]
R3 -> R4 [label="Else"]
R5 [shape=record label="{BLOCK #R5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: 2|1# ConstantPatternOperation / ConstantPatternSyntax: 2|0# IsPatternOperation / SwitchExpressionArmSyntax: 2 =\> \"Two\"|##########}"]
R3 -> R5 [label="WhenFalse"]
R6 [shape=record label="{BLOCK #R6|1# LiteralOperation / LiteralExpressionSyntax: \"Two\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two\"|##########}"]
R5 -> R6 [label="Else"]
R7 [shape=record label="{BLOCK #R7|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: value|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> \"Else\"|##########}"]
R5 -> R7 [label="WhenFalse"]
R8 [shape=record label="{BLOCK #R8|1# LiteralOperation / LiteralExpressionSyntax: \"Else\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Else\"|##########}"]
R7 -> R8 [label="Else"]
}
R9 [shape=record label="{BLOCK #R9|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: value switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> \"Two\",\n            _ =\> \"Else\"\n        \}|##########}"]
R7 -> R9 [label="WhenFalse"]
R9 -> NoDestinationR9 [label="Throw"]
R10 [shape=record label="{BLOCK #R10|## BranchValue ##|0# FlowCaptureReferenceOperation / SwitchExpressionSyntax: value switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> \"Two\",\n            _ =\> \"Else\"\n        \}|##########}"]
R2 -> R10
R4 -> R10
R6 -> R10
R8 -> R10
}
R0 [shape=record label="{ENTRY #R0}"]
R11 [shape=record label="{EXIT #R11}"]
R10 -> R11 [label="Return"]
}
}
