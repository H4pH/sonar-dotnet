digraph "Roslyn.ConditionalAccessChained" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# ParameterReferenceOperation / IdentifierNameSyntax: o|0# FlowCaptureOperation / IdentifierNameSyntax: o|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: o|0# IsNullOperation / IdentifierNameSyntax: o|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: o|1# InvocationOperation / InvocationExpressionSyntax: .ToString()|0# FlowCaptureOperation / InvocationExpressionSyntax: .ToString()|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|## BranchValue ##|1# FlowCaptureReferenceOperation / InvocationExpressionSyntax: .ToString()|0# IsNullOperation / InvocationExpressionSyntax: .ToString()|##########}"]
2 -> 3
4 [shape=record label="{BLOCK #4|2# FlowCaptureReferenceOperation / InvocationExpressionSyntax: .ToString()|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ArgumentOperation / ArgumentSyntax: 0|3# LiteralOperation / LiteralExpressionSyntax: 1|2# ArgumentOperation / ArgumentSyntax: 1|1# InvocationOperation / InvocationExpressionSyntax: .Substring(0, 1)|0# FlowCaptureOperation / InvocationExpressionSyntax: .Substring(0, 1)|##########}"]
3 -> 4 [label="Else"]
5 [shape=record label="{BLOCK #5|## BranchValue ##|1# FlowCaptureReferenceOperation / InvocationExpressionSyntax: .Substring(0, 1)|0# IsNullOperation / InvocationExpressionSyntax: .Substring(0, 1)|##########}"]
4 -> 5
6 [shape=record label="{BLOCK #6|3# FlowCaptureReferenceOperation / InvocationExpressionSyntax: .Substring(0, 1)|2# PropertyReferenceOperation / MemberBindingExpressionSyntax: .Length|1# ConversionOperation / MemberBindingExpressionSyntax: .Length|0# FlowCaptureOperation / MemberBindingExpressionSyntax: .Length|##########}"]
5 -> 6 [label="Else"]
7 [shape=record label="{BLOCK #7|1# DefaultValueOperation / ConditionalAccessExpressionSyntax: o?.ToString()?.Substring(0, 1)?.Length|0# FlowCaptureOperation / ConditionalAccessExpressionSyntax: o?.ToString()?.Substring(0, 1)?.Length|##########}"]
1 -> 7 [label="WhenTrue"]
3 -> 7 [label="WhenTrue"]
5 -> 7 [label="WhenTrue"]
8 [shape=record label="{BLOCK #8|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = o?.ToString()?.Substring(0, 1)?.Length|1# FlowCaptureReferenceOperation / ConditionalAccessExpressionSyntax: o?.ToString()?.Substring(0, 1)?.Length|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = o?.ToString()?.Substring(0, 1)?.Length|##########}"]
6 -> 8
7 -> 8
9 [shape=record label="{EXIT #9}"]
8 -> 9
}
