// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22NullCoalesceAssignmentToElementAccess%22+%7B%0D%0Asubgraph+%22cluster_Sonar.NullCoalesceAssignmentToElementAccess%22+%7B%0Alabel+%3D+%22Sonar.NullCoalesceAssignmentToElementAccess%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ACoalesceAssignmentExpression%7CIdentifierNameSyntax%3A+list%7CLiteralExpressionSyntax%3A+42%7CElementAccessExpressionSyntax%3A+list%5B42%5D%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+arg%7D%22%5D%0D%0A1+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CAssignmentExpressionSyntax%3A+list%5B42%5D+%3F%3F%3D+arg%7CVariableDeclaratorSyntax%3A+result+%3D+list%5B42%5D+%3F%3F%3D+arg%7D%22%5D%0D%0A2+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.NullCoalesceAssignmentToElementAccess%22+%7B%0Alabel+%3D+%22Roslyn.NullCoalesceAssignmentToElementAccess%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C1%23+FlowCaptureReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C0%23+FlowCaptureOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C0%23+IsNullOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root2%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root3%7C1%23+FlowCaptureReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C0%23+FlowCaptureOperation+%2F+AssignmentExpressionSyntax%3A+list%5B42%5D+%3F%3F%3D+arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+Root3+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C2%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+list%7C3%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+42%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+42%7C1%23+PropertyReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C0%23+FlowCaptureOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0ARoot4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root4%7C2%23+FlowCaptureReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+list%5B42%5D%7C2%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+arg%7C1%23+SimpleAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+list%5B42%5D+%3F%3F%3D+arg%7C0%23+FlowCaptureOperation+%2F+AssignmentExpressionSyntax%3A+list%5B42%5D+%3F%3F%3D+arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+Root4+%5Blabel%3D%22WhenTrue%22%5D%0D%0A%7D%0D%0ARoot5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root5%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+result+%3D+list%5B42%5D+%3F%3F%3D+arg%7C1%23+FlowCaptureReferenceOperation+%2F+AssignmentExpressionSyntax%3A+list%5B42%5D+%3F%3F%3D+arg%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+result+%3D+list%5B42%5D+%3F%3F%3D+arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root5%0D%0ARoot4+-%3E+Root5%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot6+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root6%7D%22%5D%0D%0ARoot5+-%3E+Root6%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void NullCoalesceAssignmentToElementAccess(List<string> list, string arg)
    {
        var result = list[42] ??= arg;
    }
*/

digraph "NullCoalesceAssignmentToElementAccess" {
subgraph "cluster_Sonar.NullCoalesceAssignmentToElementAccess" {
label = "Sonar.NullCoalesceAssignmentToElementAccess"
0 [shape=record label="{BINARY:CoalesceAssignmentExpression|IdentifierNameSyntax: list|LiteralExpressionSyntax: 42|ElementAccessExpressionSyntax: list[42]}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|IdentifierNameSyntax: arg}"]
1 -> 2
2 [shape=record label="{SIMPLE|AssignmentExpressionSyntax: list[42] ??= arg|VariableDeclaratorSyntax: result = list[42] ??= arg}"]
2 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.NullCoalesceAssignmentToElementAccess" {
label = "Roslyn.NullCoalesceAssignmentToElementAccess"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root2 [shape=record label="{BLOCK #Root2|1# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# FlowCaptureOperation / ElementAccessExpressionSyntax: list[42]|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# IsNullOperation / ElementAccessExpressionSyntax: list[42]|##########}"]
Root1 -> Root2
Root3 [shape=record label="{BLOCK #Root3|1# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# FlowCaptureOperation / AssignmentExpressionSyntax: list[42] ??= arg|##########}"]
Root2 -> Root3 [label="Else"]
}
Root1 [shape=record label="{BLOCK #Root1|2# ParameterReferenceOperation / IdentifierNameSyntax: list|3# LiteralOperation / LiteralExpressionSyntax: 42|2# ArgumentOperation / ArgumentSyntax: 42|1# PropertyReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# FlowCaptureOperation / ElementAccessExpressionSyntax: list[42]|##########}"]
Root0 -> Root1
Root4 [shape=record label="{BLOCK #Root4|2# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|2# ParameterReferenceOperation / IdentifierNameSyntax: arg|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: list[42] ??= arg|0# FlowCaptureOperation / AssignmentExpressionSyntax: list[42] ??= arg|##########}"]
Root2 -> Root4 [label="WhenTrue"]
}
Root5 [shape=record label="{BLOCK #Root5|1# LocalReferenceOperation / VariableDeclaratorSyntax: result = list[42] ??= arg|1# FlowCaptureReferenceOperation / AssignmentExpressionSyntax: list[42] ??= arg|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: result = list[42] ??= arg|##########}"]
Root3 -> Root5
Root4 -> Root5
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root6 [shape=record label="{EXIT #Root6}"]
Root5 -> Root6
}
}
