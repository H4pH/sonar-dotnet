// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22NullCoalesceAssignmentToElementAccess%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.NullCoalesceAssignmentToElementAccess%22%20%7B%0Alabel%20%3D%20%22Sonar.NullCoalesceAssignmentToElementAccess%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ACoalesceAssignmentExpression%7CIdentifierNameSyntax%3A%20list%7CLiteralExpressionSyntax%3A%2042%7CElementAccessExpressionSyntax%3A%20list%5B42%5D%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20arg%7D%22%5D%0D%0A1%20-%3E%202%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CAssignmentExpressionSyntax%3A%20list%5B42%5D%20%3F%3F%3D%20arg%7CVariableDeclaratorSyntax%3A%20result%20%3D%20list%5B42%5D%20%3F%3F%3D%20arg%7D%22%5D%0D%0A2%20-%3E%203%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.NullCoalesceAssignmentToElementAccess%22%20%7B%0Alabel%20%3D%20%22Roslyn.NullCoalesceAssignmentToElementAccess%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root2%7C1%23%20FlowCaptureReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C0%23%20FlowCaptureOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C0%23%20IsNullOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0ARoot3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root3%7C1%23%20FlowCaptureReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C0%23%20FlowCaptureOperation%20%2F%20AssignmentExpressionSyntax%3A%20list%5B42%5D%20%3F%3F%3D%20arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2%20-%3E%20Root3%20%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C2%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20list%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%2042%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%2042%7C1%23%20PropertyReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C0%23%20FlowCaptureOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0ARoot4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root4%7C2%23%20FlowCaptureReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20list%5B42%5D%7C2%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20arg%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20list%5B42%5D%20%3F%3F%3D%20arg%7C0%23%20FlowCaptureOperation%20%2F%20AssignmentExpressionSyntax%3A%20list%5B42%5D%20%3F%3F%3D%20arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2%20-%3E%20Root4%20%5Blabel%3D%22WhenTrue%22%5D%0D%0A%7D%0D%0ARoot5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root5%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20result%20%3D%20list%5B42%5D%20%3F%3F%3D%20arg%7C1%23%20FlowCaptureReferenceOperation%20%2F%20AssignmentExpressionSyntax%3A%20list%5B42%5D%20%3F%3F%3D%20arg%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20result%20%3D%20list%5B42%5D%20%3F%3F%3D%20arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3%20-%3E%20Root5%0D%0ARoot4%20-%3E%20Root5%0D%0A%7D%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot6%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root6%7D%22%5D%0D%0ARoot5%20-%3E%20Root6%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void NullCoalesceAssignmentToElementAccess(List<string> list, string arg)
    {
        var result = list[42] ??= arg;
    }
*/

digraph "NullCoalesceAssignmentToElementAccess" {
subgraph "cluster_Sonar.NullCoalesceAssignmentToElementAccess" {
label = "Sonar.NullCoalesceAssignmentToElementAccess"
0 [shape=record label="{BINARY:CoalesceAssignmentExpression|IdentifierNameSyntax: list|LiteralExpressionSyntax: 42|ElementAccessExpressionSyntax: list[42]}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|IdentifierNameSyntax: arg}"]
1 -> 2
2 [shape=record label="{SIMPLE|AssignmentExpressionSyntax: list[42] ??= arg|VariableDeclaratorSyntax: result = list[42] ??= arg}"]
2 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.NullCoalesceAssignmentToElementAccess" {
label = "Roslyn.NullCoalesceAssignmentToElementAccess"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root2 [shape=record label="{BLOCK #Root2|1# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# FlowCaptureOperation / ElementAccessExpressionSyntax: list[42]|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# IsNullOperation / ElementAccessExpressionSyntax: list[42]|##########}"]
Root1 -> Root2
Root3 [shape=record label="{BLOCK #Root3|1# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# FlowCaptureOperation / AssignmentExpressionSyntax: list[42] ??= arg|##########}"]
Root2 -> Root3 [label="Else"]
}
Root1 [shape=record label="{BLOCK #Root1|2# ParameterReferenceOperation / IdentifierNameSyntax: list|3# LiteralOperation / LiteralExpressionSyntax: 42|2# ArgumentOperation / ArgumentSyntax: 42|1# PropertyReferenceOperation / ElementAccessExpressionSyntax: list[42]|0# FlowCaptureOperation / ElementAccessExpressionSyntax: list[42]|##########}"]
Root0 -> Root1
Root4 [shape=record label="{BLOCK #Root4|2# FlowCaptureReferenceOperation / ElementAccessExpressionSyntax: list[42]|2# ParameterReferenceOperation / IdentifierNameSyntax: arg|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: list[42] ??= arg|0# FlowCaptureOperation / AssignmentExpressionSyntax: list[42] ??= arg|##########}"]
Root2 -> Root4 [label="WhenTrue"]
}
Root5 [shape=record label="{BLOCK #Root5|1# LocalReferenceOperation / VariableDeclaratorSyntax: result = list[42] ??= arg|1# FlowCaptureReferenceOperation / AssignmentExpressionSyntax: list[42] ??= arg|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: result = list[42] ??= arg|##########}"]
Root3 -> Root5
Root4 -> Root5
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root6 [shape=record label="{EXIT #Root6}"]
Root5 -> Root6
}
}
