// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22While%22+%7B%0D%0Asubgraph+%22cluster_Sonar.While%22+%7B%0Alabel+%3D+%22Sonar.While%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AGreaterThanExpression%7CIdentifierNameSyntax%3A+i%7CLiteralExpressionSyntax%3A+0%7CBinaryExpressionSyntax%3A+i+%5C%3E+0%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+i%7CPostfixUnaryExpressionSyntax%3A+i--%7CIdentifierNameSyntax%3A+i%7CVariableDeclaratorSyntax%3A+j+%3D+i%7D%22%5D%0D%0A1+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AGreaterThanExpression%7CIdentifierNameSyntax%3A+j%7CLiteralExpressionSyntax%3A+0%7CBinaryExpressionSyntax%3A+j+%5C%3E+0%7D%22%5D%0D%0A3+-%3E+4+%5Blabel%3D%22True%22%5D%0D%0A3+-%3E+0+%5Blabel%3D%22False%22%5D%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+j%7CPostfixUnaryExpressionSyntax%3A+j--%7D%22%5D%0D%0A4+-%3E+3%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.While%22+%7B%0Alabel+%3D+%22Roslyn.While%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C2%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+IncrementOrDecrementOperation+%2F+PostfixUnaryExpressionSyntax%3A+i--%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+i--%3B%7C%23%23%23%23%23%23%23%23%23%23%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+j+%3D+i%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+j+%3D+i%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root2+%5Blabel%3D%22Else%22%5D%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root3%7C%23%23+BranchValue+%23%23%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+j%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+j+%5C%3E+0%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+Root3%0D%0ARoot4+-%3E+Root3%0D%0ARoot4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root4%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+j%7C1%23+IncrementOrDecrementOperation+%2F+PostfixUnaryExpressionSyntax%3A+j--%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+j--%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root4+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C%23%23+BranchValue+%23%23%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+i+%5C%3E+0%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0ARoot3+-%3E+Root1+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot5+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root5%7D%22%5D%0D%0ARoot1+-%3E+Root5+%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void While(int i)
    {
        while (i > 0)
        {
            i--;
            var j = i;
            while (j > 0)
            {
                j--;
            }
        }
    }
*/

digraph "While" {
subgraph "cluster_Sonar.While" {
label = "Sonar.While"
0 [shape=record label="{BINARY:GreaterThanExpression|IdentifierNameSyntax: i|LiteralExpressionSyntax: 0|BinaryExpressionSyntax: i \> 0}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|IdentifierNameSyntax: i|PostfixUnaryExpressionSyntax: i--|IdentifierNameSyntax: i|VariableDeclaratorSyntax: j = i}"]
1 -> 3
3 [shape=record label="{BINARY:GreaterThanExpression|IdentifierNameSyntax: j|LiteralExpressionSyntax: 0|BinaryExpressionSyntax: j \> 0}"]
3 -> 4 [label="True"]
3 -> 0 [label="False"]
4 [shape=record label="{SIMPLE|IdentifierNameSyntax: j|PostfixUnaryExpressionSyntax: j--}"]
4 -> 3
2 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.While" {
label = "Roslyn.While"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root2 [shape=record label="{BLOCK #Root2|2# ParameterReferenceOperation / IdentifierNameSyntax: i|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i--|0# ExpressionStatementOperation / ExpressionStatementSyntax: i--;|##########|1# LocalReferenceOperation / VariableDeclaratorSyntax: j = i|1# ParameterReferenceOperation / IdentifierNameSyntax: i|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: j = i|##########}"]
Root1 -> Root2 [label="Else"]
Root3 [shape=record label="{BLOCK #Root3|## BranchValue ##|1# LocalReferenceOperation / IdentifierNameSyntax: j|1# LiteralOperation / LiteralExpressionSyntax: 0|0# BinaryOperation / BinaryExpressionSyntax: j \> 0|##########}"]
Root2 -> Root3
Root4 -> Root3
Root4 [shape=record label="{BLOCK #Root4|2# LocalReferenceOperation / IdentifierNameSyntax: j|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: j--|0# ExpressionStatementOperation / ExpressionStatementSyntax: j--;|##########}"]
Root3 -> Root4 [label="Else"]
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root1 [shape=record label="{BLOCK #Root1|## BranchValue ##|1# ParameterReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 0|0# BinaryOperation / BinaryExpressionSyntax: i \> 0|##########}"]
Root0 -> Root1
Root3 -> Root1 [label="WhenFalse"]
Root5 [shape=record label="{EXIT #Root5}"]
Root1 -> Root5 [label="WhenFalse"]
}
}
