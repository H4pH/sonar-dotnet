digraph "Roslyn.If" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: outer|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: inner|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|1# LocalReferenceOperation / VariableDeclaratorSyntax: a = \"Outer && Inner\"|1# LiteralOperation / LiteralExpressionSyntax: \"Outer && Inner\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: a = \"Outer && Inner\"|##########}"]
2 -> 3 [label="Else"]
4 [shape=record label="{BLOCK #4|1# LocalReferenceOperation / VariableDeclaratorSyntax: a = \"Outer && !Inner\"|1# LiteralOperation / LiteralExpressionSyntax: \"Outer && !Inner\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: a = \"Outer && !Inner\"|##########}"]
2 -> 4 [label="WhenFalse"]
5 [shape=record label="{BLOCK #5|1# LocalReferenceOperation / VariableDeclaratorSyntax: a = \"!Outer\"|1# LiteralOperation / LiteralExpressionSyntax: \"!Outer\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: a = \"!Outer\"|##########}"]
1 -> 5 [label="WhenFalse"]
6 [shape=record label="{EXIT #6}"]
3 -> 6
4 -> 6
5 -> 6
}
