// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22CoalesceTernaryCoalesce%22+%7B%0D%0Asubgraph+%22cluster_Sonar.CoalesceTernaryCoalesce%22+%7B%0Alabel+%3D+%22Sonar.CoalesceTernaryCoalesce%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ACoalesceExpression%7CIdentifierNameSyntax%3A+first%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A+condition%7D%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+4+%5Blabel%3D%22False%22%5D%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+ternaryTrue%7D%22%5D%0D%0A3+-%3E+5%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+ternaryFalse%7D%22%5D%0D%0A4+-%3E+5%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ACoalesceExpression%7D%22%5D%0D%0A5+-%3E+6+%5Blabel%3D%22True%22%5D%0D%0A5+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A6+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+last%7D%22%5D%0D%0A6+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CVariableDeclaratorSyntax%3A+x+%3D+first+%3F%3F+(condition+%3F+ternaryTrue+%3A+ternaryFalse)+%3F%3F+last%7D%22%5D%0D%0A2+-%3E+7%0D%0A7+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.CoalesceTernaryCoalesce%22+%7B%0Alabel+%3D+%22Roslyn.CoalesceTernaryCoalesce%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+first%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+first%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+first%7C0%23+IsNullOperation+%2F+IdentifierNameSyntax%3A+first%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+first%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+first%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C%23%23+BranchValue+%23%23%7C0%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+condition%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R3+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+ternaryTrue%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+ternaryTrue%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R4+%5Blabel%3D%22Else%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R5%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+ternaryFalse%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+ternaryFalse%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R5+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R6%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+ConditionalExpressionSyntax%3A+condition+%3F+ternaryTrue+%3A+ternaryFalse%7C0%23+IsNullOperation+%2F+ConditionalExpressionSyntax%3A+condition+%3F+ternaryTrue+%3A+ternaryFalse%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR4+-%3E+R6%0D%0AR5+-%3E+R6%0D%0AR7+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R7%7C1%23+FlowCaptureReferenceOperation+%2F+ConditionalExpressionSyntax%3A+condition+%3F+ternaryTrue+%3A+ternaryFalse%7C0%23+FlowCaptureOperation+%2F+ConditionalExpressionSyntax%3A+condition+%3F+ternaryTrue+%3A+ternaryFalse%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR6+-%3E+R7+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0AR8+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R8%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+last%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+last%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR6+-%3E+R8+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR9+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R9%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+x+%3D+first+%3F%3F+(condition+%3F+ternaryTrue+%3A+ternaryFalse)+%3F%3F+last%7C1%23+FlowCaptureReferenceOperation+%2F+BinaryExpressionSyntax%3A+first+%3F%3F+(condition+%3F+ternaryTrue+%3A+ternaryFalse)+%3F%3F+last%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+x+%3D+first+%3F%3F+(condition+%3F+ternaryTrue+%3A+ternaryFalse)+%3F%3F+last%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R9%0D%0AR7+-%3E+R9%0D%0AR8+-%3E+R9%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR10+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R10%7D%22%5D%0D%0AR9+-%3E+R10%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void CoalesceTernaryCoalesce(bool condition, string first, string ternaryTrue, string ternaryFalse, string last)
    {
        var x = first ?? (condition ? ternaryTrue : ternaryFalse) ?? last;
    }
*/

digraph "CoalesceTernaryCoalesce" {
subgraph "cluster_Sonar.CoalesceTernaryCoalesce" {
label = "Sonar.CoalesceTernaryCoalesce"
0 [shape=record label="{BINARY:CoalesceExpression|IdentifierNameSyntax: first}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: condition}"]
1 -> 3 [label="True"]
1 -> 4 [label="False"]
3 [shape=record label="{SIMPLE|IdentifierNameSyntax: ternaryTrue}"]
3 -> 5
4 [shape=record label="{SIMPLE|IdentifierNameSyntax: ternaryFalse}"]
4 -> 5
5 [shape=record label="{BINARY:CoalesceExpression}"]
5 -> 6 [label="True"]
5 -> 2 [label="False"]
6 [shape=record label="{SIMPLE|IdentifierNameSyntax: last}"]
6 -> 2
2 [shape=record label="{SIMPLE|VariableDeclaratorSyntax: x = first ?? (condition ? ternaryTrue : ternaryFalse) ?? last}"]
2 -> 7
7 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.CoalesceTernaryCoalesce" {
label = "Roslyn.CoalesceTernaryCoalesce"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: first|0# FlowCaptureOperation / IdentifierNameSyntax: first|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|0# IsNullOperation / IdentifierNameSyntax: first|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|0# FlowCaptureOperation / IdentifierNameSyntax: first|##########}"]
R1 -> R2 [label="Else"]
}
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R3 [shape=record label="{BLOCK #R3|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: condition|##########}"]
R1 -> R3 [label="WhenTrue"]
R4 [shape=record label="{BLOCK #R4|1# ParameterReferenceOperation / IdentifierNameSyntax: ternaryTrue|0# FlowCaptureOperation / IdentifierNameSyntax: ternaryTrue|##########}"]
R3 -> R4 [label="Else"]
R5 [shape=record label="{BLOCK #R5|1# ParameterReferenceOperation / IdentifierNameSyntax: ternaryFalse|0# FlowCaptureOperation / IdentifierNameSyntax: ternaryFalse|##########}"]
R3 -> R5 [label="WhenFalse"]
R6 [shape=record label="{BLOCK #R6|## BranchValue ##|1# FlowCaptureReferenceOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|0# IsNullOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|##########}"]
R4 -> R6
R5 -> R6
R7 [shape=record label="{BLOCK #R7|1# FlowCaptureReferenceOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|0# FlowCaptureOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|##########}"]
R6 -> R7 [label="Else"]
}
R8 [shape=record label="{BLOCK #R8|1# ParameterReferenceOperation / IdentifierNameSyntax: last|0# FlowCaptureOperation / IdentifierNameSyntax: last|##########}"]
R6 -> R8 [label="WhenTrue"]
R9 [shape=record label="{BLOCK #R9|1# LocalReferenceOperation / VariableDeclaratorSyntax: x = first ?? (condition ? ternaryTrue : ternaryFalse) ?? last|1# FlowCaptureReferenceOperation / BinaryExpressionSyntax: first ?? (condition ? ternaryTrue : ternaryFalse) ?? last|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: x = first ?? (condition ? ternaryTrue : ternaryFalse) ?? last|##########}"]
R2 -> R9
R7 -> R9
R8 -> R9
}
R0 [shape=record label="{ENTRY #R0}"]
R10 [shape=record label="{EXIT #R10}"]
R9 -> R10
}
}
