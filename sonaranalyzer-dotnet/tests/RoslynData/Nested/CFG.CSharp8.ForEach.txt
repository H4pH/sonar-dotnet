// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22ForEach%22+%7B%0D%0Asubgraph+%22cluster_Sonar.ForEach%22+%7B%0Alabel+%3D+%22Sonar.ForEach%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BFOREACH%3AForEachStatement%7CIdentifierNameSyntax%3A+numbers%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AForEachStatement%7D%22%5D%0D%0A1+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22False%22%5D%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BFOREACH%3AForEachStatement%7CIdentifierNameSyntax%3A+names%7D%22%5D%0D%0A2+-%3E+4%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AForEachStatement%7D%22%5D%0D%0A4+-%3E+5+%5Blabel%3D%22True%22%5D%0D%0A4+-%3E+1+%5Blabel%3D%22False%22%5D%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+number%7CIdentifierNameSyntax%3A+name%7CInterpolatedStringExpressionSyntax%3A+%24%5C%22%5C%7Bnumber%5C%7D.+%5C%7Bname%5C%7D%5C%22%7CVariableDeclaratorSyntax%3A+ret+%3D+%24%5C%22%5C%7Bnumber%5C%7D.+%5C%7Bname%5C%7D%5C%22%7D%22%5D%0D%0A5+-%3E+4%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.ForEach%22+%7B%0Alabel+%3D+%22Roslyn.ForEach%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0ARoot7+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root7%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+%24%5C%22%5C%7Bnumber%5C%7D.+%5C%7Bname%5C%7D%5C%22%7C3%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+number%7C2%23+InterpolationOperation+%2F+InterpolationSyntax%3A+%5C%7Bnumber%5C%7D%7C3%23+LiteralOperation+%2F+InterpolatedStringTextSyntax%3A+.+%7C2%23+InterpolatedStringTextOperation+%2F+InterpolatedStringTextSyntax%3A+.+%7C3%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+name%7C2%23+InterpolationOperation+%2F+InterpolationSyntax%3A+%5C%7Bname%5C%7D%7C1%23+InterpolatedStringOperation+%2F+InterpolatedStringExpressionSyntax%3A+%24%5C%22%5C%7Bnumber%5C%7D.+%5C%7Bname%5C%7D%5C%22%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+%24%5C%22%5C%7Bnumber%5C%7D.+%5C%7Bname%5C%7D%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot6+-%3E+Root7%0D%0A%7D%0D%0ARoot6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root6%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+var%7C3%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+names%7C2%23+PropertyReferenceOperation+%2F+IdentifierNameSyntax%3A+var%7C1%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+var%7C0%23+SimpleAssignmentOperation+%2F+IdentifierNameSyntax%3A+var%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot5+-%3E+Root6+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root5%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+names%7C0%23+InvocationOperation.MoveNext+%2F+IdentifierNameSyntax%3A+names%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot4+-%3E+Root5%0D%0ARoot7+-%3E+Root5%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0ARoot8+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root8%7C2%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+names%7C1%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+names%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+names%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+names%7C0%23+IsNullOperation+%2F+IdentifierNameSyntax%3A+names%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot9+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root9%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+names%7C0%23+InvocationOperation.Dispose+%2F+IdentifierNameSyntax%3A+names%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot8+-%3E+Root9+%5Blabel%3D%22Else%22%5D%0D%0ARoot10+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root10%7D%22%5D%0D%0ARoot8+-%3E+Root10+%5Blabel%3D%22WhenTrue%22%5D%0D%0ARoot9+-%3E+Root10%0D%0ARoot10+-%3E+NoDestinationRoot10+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0ARoot4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root4%7C3%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+names%7C2%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+names%7C1%23+InvocationOperation.GetEnumerator+%2F+IdentifierNameSyntax%3A+names%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+names%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root4%0D%0A%7D%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root3%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+var%7C3%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+numbers%7C2%23+PropertyReferenceOperation+%2F+IdentifierNameSyntax%3A+var%7C1%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+var%7C0%23+SimpleAssignmentOperation+%2F+IdentifierNameSyntax%3A+var%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+Root3+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+numbers%7C0%23+InvocationOperation.MoveNext+%2F+IdentifierNameSyntax%3A+numbers%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root2%0D%0ARoot5+-%3E+Root2+%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0ARoot11+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root11%7C2%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+numbers%7C1%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+numbers%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+numbers%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+numbers%7C0%23+IsNullOperation+%2F+IdentifierNameSyntax%3A+numbers%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot12+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root12%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+numbers%7C0%23+InvocationOperation.Dispose+%2F+IdentifierNameSyntax%3A+numbers%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot11+-%3E+Root12+%5Blabel%3D%22Else%22%5D%0D%0ARoot13+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root13%7D%22%5D%0D%0ARoot11+-%3E+Root13+%5Blabel%3D%22WhenTrue%22%5D%0D%0ARoot12+-%3E+Root13%0D%0ARoot13+-%3E+NoDestinationRoot13+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C3%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+numbers%7C2%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+numbers%7C1%23+InvocationOperation.GetEnumerator+%2F+IdentifierNameSyntax%3A+numbers%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+numbers%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot14+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root14%7D%22%5D%0D%0ARoot2+-%3E+Root14+%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void ForEach(string[] names, int[] numbers)
    {
        foreach (var number in numbers)
        {
            foreach (var name in names)
            {
                var ret = $"{number}. {name}";
            }
        }
    }
*/

digraph "ForEach" {
subgraph "cluster_Sonar.ForEach" {
label = "Sonar.ForEach"
0 [shape=record label="{FOREACH:ForEachStatement|IdentifierNameSyntax: numbers}"]
0 -> 1
1 [shape=record label="{BINARY:ForEachStatement}"]
1 -> 2 [label="True"]
1 -> 3 [label="False"]
2 [shape=record label="{FOREACH:ForEachStatement|IdentifierNameSyntax: names}"]
2 -> 4
4 [shape=record label="{BINARY:ForEachStatement}"]
4 -> 5 [label="True"]
4 -> 1 [label="False"]
5 [shape=record label="{SIMPLE|IdentifierNameSyntax: number|IdentifierNameSyntax: name|InterpolatedStringExpressionSyntax: $\"\{number\}. \{name\}\"|VariableDeclaratorSyntax: ret = $\"\{number\}. \{name\}\"}"]
5 -> 4
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.ForEach" {
label = "Roslyn.ForEach"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root7 [shape=record label="{BLOCK #Root7|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = $\"\{number\}. \{name\}\"|3# LocalReferenceOperation / IdentifierNameSyntax: number|2# InterpolationOperation / InterpolationSyntax: \{number\}|3# LiteralOperation / InterpolatedStringTextSyntax: . |2# InterpolatedStringTextOperation / InterpolatedStringTextSyntax: . |3# LocalReferenceOperation / IdentifierNameSyntax: name|2# InterpolationOperation / InterpolationSyntax: \{name\}|1# InterpolatedStringOperation / InterpolatedStringExpressionSyntax: $\"\{number\}. \{name\}\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = $\"\{number\}. \{name\}\"|##########}"]
Root6 -> Root7
}
Root6 [shape=record label="{BLOCK #Root6|1# LocalReferenceOperation / IdentifierNameSyntax: var|3# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|2# PropertyReferenceOperation / IdentifierNameSyntax: var|1# ConversionOperation / IdentifierNameSyntax: var|0# SimpleAssignmentOperation / IdentifierNameSyntax: var|##########}"]
Root5 -> Root6 [label="Else"]
}
Root5 [shape=record label="{BLOCK #Root5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|0# InvocationOperation.MoveNext / IdentifierNameSyntax: names|##########}"]
Root4 -> Root5
Root7 -> Root5
}
subgraph "cluster_Finally region" {
label = "Finally region"
Root8 [shape=record label="{BLOCK #Root8|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|1# ConversionOperation / IdentifierNameSyntax: names|0# FlowCaptureOperation / IdentifierNameSyntax: names|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|0# IsNullOperation / IdentifierNameSyntax: names|##########}"]
Root9 [shape=record label="{BLOCK #Root9|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|0# InvocationOperation.Dispose / IdentifierNameSyntax: names|##########}"]
Root8 -> Root9 [label="Else"]
Root10 [shape=record label="{BLOCK #Root10}"]
Root8 -> Root10 [label="WhenTrue"]
Root9 -> Root10
Root10 -> NoDestinationRoot10 [label="StructuredExceptionHandling"]
}
}
Root4 [shape=record label="{BLOCK #Root4|3# ParameterReferenceOperation / IdentifierNameSyntax: names|2# ConversionOperation / IdentifierNameSyntax: names|1# InvocationOperation.GetEnumerator / IdentifierNameSyntax: names|0# FlowCaptureOperation / IdentifierNameSyntax: names|##########}"]
Root3 -> Root4
}
Root3 [shape=record label="{BLOCK #Root3|1# LocalReferenceOperation / IdentifierNameSyntax: var|3# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|2# PropertyReferenceOperation / IdentifierNameSyntax: var|1# ConversionOperation / IdentifierNameSyntax: var|0# SimpleAssignmentOperation / IdentifierNameSyntax: var|##########}"]
Root2 -> Root3 [label="Else"]
}
Root2 [shape=record label="{BLOCK #Root2|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|0# InvocationOperation.MoveNext / IdentifierNameSyntax: numbers|##########}"]
Root1 -> Root2
Root5 -> Root2 [label="WhenFalse"]
}
subgraph "cluster_Finally region" {
label = "Finally region"
Root11 [shape=record label="{BLOCK #Root11|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|1# ConversionOperation / IdentifierNameSyntax: numbers|0# FlowCaptureOperation / IdentifierNameSyntax: numbers|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|0# IsNullOperation / IdentifierNameSyntax: numbers|##########}"]
Root12 [shape=record label="{BLOCK #Root12|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|0# InvocationOperation.Dispose / IdentifierNameSyntax: numbers|##########}"]
Root11 -> Root12 [label="Else"]
Root13 [shape=record label="{BLOCK #Root13}"]
Root11 -> Root13 [label="WhenTrue"]
Root12 -> Root13
Root13 -> NoDestinationRoot13 [label="StructuredExceptionHandling"]
}
}
Root1 [shape=record label="{BLOCK #Root1|3# ParameterReferenceOperation / IdentifierNameSyntax: numbers|2# ConversionOperation / IdentifierNameSyntax: numbers|1# InvocationOperation.GetEnumerator / IdentifierNameSyntax: numbers|0# FlowCaptureOperation / IdentifierNameSyntax: numbers|##########}"]
Root0 -> Root1
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root14 [shape=record label="{EXIT #Root14}"]
Root2 -> Root14 [label="WhenFalse"]
}
}
