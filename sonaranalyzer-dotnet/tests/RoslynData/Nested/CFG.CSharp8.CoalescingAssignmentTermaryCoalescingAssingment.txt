// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22CoalescingAssignmentTermaryCoalescingAssingment%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.CoalescingAssignmentTermaryCoalescingAssingment%22%20%7B%0Alabel%20%3D%20%22Sonar.CoalescingAssignmentTermaryCoalescingAssingment%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ACoalesceAssignmentExpression%7CIdentifierNameSyntax%3A%20first%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ACoalesceAssignmentExpression%7CIdentifierNameSyntax%3A%20second%7D%22%5D%0D%0A1%20-%3E%203%20%5Blabel%3D%22True%22%5D%0D%0A1%20-%3E%204%20%5Blabel%3D%22False%22%5D%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A%20condition%7D%22%5D%0D%0A3%20-%3E%205%20%5Blabel%3D%22True%22%5D%0D%0A3%20-%3E%206%20%5Blabel%3D%22False%22%5D%0D%0A5%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20ternaryTrue%7D%22%5D%0D%0A5%20-%3E%204%0D%0A6%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20ternaryFalse%7D%22%5D%0D%0A6%20-%3E%204%0D%0A4%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CAssignmentExpressionSyntax%3A%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7D%22%5D%0D%0A4%20-%3E%202%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CAssignmentExpressionSyntax%3A%20first%20%3F%3F%3D%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7D%22%5D%0D%0A2%20-%3E%207%0D%0A7%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.CoalescingAssignmentTermaryCoalescingAssingment%22%20%7B%0Alabel%20%3D%20%22Roslyn.CoalescingAssignmentTermaryCoalescingAssingment%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root2%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0A%7D%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root4%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3%20-%3E%20Root4%0D%0ARoot5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root5%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C0%23%20FlowCaptureOperation%20%2F%20AssignmentExpressionSyntax%3A%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot4%20-%3E%20Root5%20%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root6%7C%23%23%20BranchValue%20%23%23%7C0%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20condition%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot4%20-%3E%20Root6%20%5Blabel%3D%22WhenTrue%22%5D%0D%0ARoot7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root7%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ternaryTrue%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20ternaryTrue%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot6%20-%3E%20Root7%20%5Blabel%3D%22Else%22%5D%0D%0ARoot8%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root8%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ternaryFalse%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20ternaryFalse%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot6%20-%3E%20Root8%20%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot9%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root9%7C2%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C2%23%20FlowCaptureReferenceOperation%20%2F%20ConditionalExpressionSyntax%3A%20condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7C0%23%20FlowCaptureOperation%20%2F%20AssignmentExpressionSyntax%3A%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot7%20-%3E%20Root9%0D%0ARoot8%20-%3E%20Root9%0D%0A%7D%0D%0ARoot3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root3%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20second%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2%20-%3E%20Root3%20%5Blabel%3D%22WhenTrue%22%5D%0D%0A%7D%0D%0ARoot10%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root10%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C1%23%20FlowCaptureReferenceOperation%20%2F%20AssignmentExpressionSyntax%3A%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7C0%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20first%20%3F%3F%3D%20second%20%3F%3F%3D%20(condition%20%3F%20ternaryTrue%20%3A%20ternaryFalse)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot5%20-%3E%20Root10%0D%0ARoot9%20-%3E%20Root10%0D%0A%7D%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20first%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0A%7D%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot11%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root11%7D%22%5D%0D%0ARoot2%20-%3E%20Root11%20%5Blabel%3D%22Else%22%5D%0D%0ARoot10%20-%3E%20Root11%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void CoalescingAssignmentTermaryCoalescingAssingment(bool condition, string first, string second, string ternaryTrue, string ternaryFalse)
    {
        first ??= second ??= (condition ? ternaryTrue : ternaryFalse);
    }
*/

digraph "CoalescingAssignmentTermaryCoalescingAssingment" {
subgraph "cluster_Sonar.CoalescingAssignmentTermaryCoalescingAssingment" {
label = "Sonar.CoalescingAssignmentTermaryCoalescingAssingment"
0 [shape=record label="{BINARY:CoalesceAssignmentExpression|IdentifierNameSyntax: first}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{BINARY:CoalesceAssignmentExpression|IdentifierNameSyntax: second}"]
1 -> 3 [label="True"]
1 -> 4 [label="False"]
3 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: condition}"]
3 -> 5 [label="True"]
3 -> 6 [label="False"]
5 [shape=record label="{SIMPLE|IdentifierNameSyntax: ternaryTrue}"]
5 -> 4
6 [shape=record label="{SIMPLE|IdentifierNameSyntax: ternaryFalse}"]
6 -> 4
4 [shape=record label="{SIMPLE|AssignmentExpressionSyntax: second ??= (condition ? ternaryTrue : ternaryFalse)}"]
4 -> 2
2 [shape=record label="{SIMPLE|AssignmentExpressionSyntax: first ??= second ??= (condition ? ternaryTrue : ternaryFalse)}"]
2 -> 7
7 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.CoalescingAssignmentTermaryCoalescingAssingment" {
label = "Roslyn.CoalescingAssignmentTermaryCoalescingAssingment"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root2 [shape=record label="{BLOCK #Root2|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|0# FlowCaptureOperation / IdentifierNameSyntax: first|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|0# IsNullOperation / IdentifierNameSyntax: first|##########}"]
Root1 -> Root2
}
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root4 [shape=record label="{BLOCK #Root4|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: second|0# FlowCaptureOperation / IdentifierNameSyntax: second|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: second|0# IsNullOperation / IdentifierNameSyntax: second|##########}"]
Root3 -> Root4
Root5 [shape=record label="{BLOCK #Root5|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: second|0# FlowCaptureOperation / AssignmentExpressionSyntax: second ??= (condition ? ternaryTrue : ternaryFalse)|##########}"]
Root4 -> Root5 [label="Else"]
}
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root6 [shape=record label="{BLOCK #Root6|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: condition|##########}"]
Root4 -> Root6 [label="WhenTrue"]
Root7 [shape=record label="{BLOCK #Root7|1# ParameterReferenceOperation / IdentifierNameSyntax: ternaryTrue|0# FlowCaptureOperation / IdentifierNameSyntax: ternaryTrue|##########}"]
Root6 -> Root7 [label="Else"]
Root8 [shape=record label="{BLOCK #Root8|1# ParameterReferenceOperation / IdentifierNameSyntax: ternaryFalse|0# FlowCaptureOperation / IdentifierNameSyntax: ternaryFalse|##########}"]
Root6 -> Root8 [label="WhenFalse"]
Root9 [shape=record label="{BLOCK #Root9|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: second|2# FlowCaptureReferenceOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: second ??= (condition ? ternaryTrue : ternaryFalse)|0# FlowCaptureOperation / AssignmentExpressionSyntax: second ??= (condition ? ternaryTrue : ternaryFalse)|##########}"]
Root7 -> Root9
Root8 -> Root9
}
Root3 [shape=record label="{BLOCK #Root3|1# ParameterReferenceOperation / IdentifierNameSyntax: second|0# FlowCaptureOperation / IdentifierNameSyntax: second|##########}"]
Root2 -> Root3 [label="WhenTrue"]
}
Root10 [shape=record label="{BLOCK #Root10|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|1# FlowCaptureReferenceOperation / AssignmentExpressionSyntax: second ??= (condition ? ternaryTrue : ternaryFalse)|0# SimpleAssignmentOperation / AssignmentExpressionSyntax: first ??= second ??= (condition ? ternaryTrue : ternaryFalse)|##########}"]
Root5 -> Root10
Root9 -> Root10
}
Root1 [shape=record label="{BLOCK #Root1|1# ParameterReferenceOperation / IdentifierNameSyntax: first|0# FlowCaptureOperation / IdentifierNameSyntax: first|##########}"]
Root0 -> Root1
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root11 [shape=record label="{EXIT #Root11}"]
Root2 -> Root11 [label="Else"]
Root10 -> Root11
}
}
