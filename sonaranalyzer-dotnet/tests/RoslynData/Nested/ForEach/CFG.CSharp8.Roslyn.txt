digraph "Roslyn.ForEach" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|3# ParameterReferenceOperation / IdentifierNameSyntax: numbers|2# ConversionOperation / IdentifierNameSyntax: numbers|1# InvocationOperation / IdentifierNameSyntax: numbers|0# FlowCaptureOperation / IdentifierNameSyntax: numbers|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|0# InvocationOperation / IdentifierNameSyntax: numbers|##########}"]
1 -> 2
5 -> 2 [label="WhenFalse"]
3 [shape=record label="{BLOCK #3|1# LocalReferenceOperation / IdentifierNameSyntax: var|3# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|2# PropertyReferenceOperation / IdentifierNameSyntax: var|1# ConversionOperation / IdentifierNameSyntax: var|0# SimpleAssignmentOperation / IdentifierNameSyntax: var|##########}"]
2 -> 3 [label="Else"]
4 [shape=record label="{BLOCK #4|3# ParameterReferenceOperation / IdentifierNameSyntax: names|2# ConversionOperation / IdentifierNameSyntax: names|1# InvocationOperation / IdentifierNameSyntax: names|0# FlowCaptureOperation / IdentifierNameSyntax: names|##########}"]
3 -> 4
5 [shape=record label="{BLOCK #5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|0# InvocationOperation / IdentifierNameSyntax: names|##########}"]
4 -> 5
7 -> 5
6 [shape=record label="{BLOCK #6|1# LocalReferenceOperation / IdentifierNameSyntax: var|3# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|2# PropertyReferenceOperation / IdentifierNameSyntax: var|1# ConversionOperation / IdentifierNameSyntax: var|0# SimpleAssignmentOperation / IdentifierNameSyntax: var|##########}"]
5 -> 6 [label="Else"]
7 [shape=record label="{BLOCK #7|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = $\"\{number\}. \{name\}\"|3# LocalReferenceOperation / IdentifierNameSyntax: number|2# InterpolationOperation / InterpolationSyntax: \{number\}|3# LiteralOperation / InterpolatedStringTextSyntax: . |2# InterpolatedStringTextOperation / InterpolatedStringTextSyntax: . |3# LocalReferenceOperation / IdentifierNameSyntax: name|2# InterpolationOperation / InterpolationSyntax: \{name\}|1# InterpolatedStringOperation / InterpolatedStringExpressionSyntax: $\"\{number\}. \{name\}\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = $\"\{number\}. \{name\}\"|##########}"]
6 -> 7
8 [shape=record label="{BLOCK #8|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|1# ConversionOperation / IdentifierNameSyntax: names|0# FlowCaptureOperation / IdentifierNameSyntax: names|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|0# IsNullOperation / IdentifierNameSyntax: names|##########}"]
9 [shape=record label="{BLOCK #9|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: names|0# InvocationOperation / IdentifierNameSyntax: names|##########}"]
8 -> 9 [label="Else"]
10 [shape=record label="{BLOCK #10}"]
8 -> 10 [label="WhenTrue"]
9 -> 10
11 [shape=record label="{BLOCK #11|2# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|1# ConversionOperation / IdentifierNameSyntax: numbers|0# FlowCaptureOperation / IdentifierNameSyntax: numbers|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|0# IsNullOperation / IdentifierNameSyntax: numbers|##########}"]
12 [shape=record label="{BLOCK #12|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: numbers|0# InvocationOperation / IdentifierNameSyntax: numbers|##########}"]
11 -> 12 [label="Else"]
13 [shape=record label="{BLOCK #13}"]
11 -> 13 [label="WhenTrue"]
12 -> 13
14 [shape=record label="{EXIT #14}"]
2 -> 14 [label="WhenFalse"]
}
