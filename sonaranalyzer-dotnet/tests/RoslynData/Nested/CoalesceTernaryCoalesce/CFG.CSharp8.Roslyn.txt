digraph "Roslyn.CoalesceTernaryCoalesce" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# ParameterReferenceOperation / IdentifierNameSyntax: first|0# FlowCaptureOperation / IdentifierNameSyntax: first|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|0# IsNullOperation / IdentifierNameSyntax: first|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: first|0# FlowCaptureOperation / IdentifierNameSyntax: first|##########}"]
1 -> 2 [label="Else"]
3 [shape=record label="{BLOCK #3|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: condition|##########}"]
1 -> 3 [label="WhenTrue"]
4 [shape=record label="{BLOCK #4|1# ParameterReferenceOperation / IdentifierNameSyntax: ternaryTrue|0# FlowCaptureOperation / IdentifierNameSyntax: ternaryTrue|##########}"]
3 -> 4 [label="Else"]
5 [shape=record label="{BLOCK #5|1# ParameterReferenceOperation / IdentifierNameSyntax: ternaryFalse|0# FlowCaptureOperation / IdentifierNameSyntax: ternaryFalse|##########}"]
3 -> 5 [label="WhenFalse"]
6 [shape=record label="{BLOCK #6|## BranchValue ##|1# FlowCaptureReferenceOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|0# IsNullOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|##########}"]
4 -> 6
5 -> 6
7 [shape=record label="{BLOCK #7|1# FlowCaptureReferenceOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|0# FlowCaptureOperation / ConditionalExpressionSyntax: condition ? ternaryTrue : ternaryFalse|##########}"]
6 -> 7 [label="Else"]
8 [shape=record label="{BLOCK #8|1# ParameterReferenceOperation / IdentifierNameSyntax: last|0# FlowCaptureOperation / IdentifierNameSyntax: last|##########}"]
6 -> 8 [label="WhenTrue"]
9 [shape=record label="{BLOCK #9|1# LocalReferenceOperation / VariableDeclaratorSyntax: x = first ?? (condition ? ternaryTrue : ternaryFalse) ?? last|1# FlowCaptureReferenceOperation / BinaryExpressionSyntax: first ?? (condition ? ternaryTrue : ternaryFalse) ?? last|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: x = first ?? (condition ? ternaryTrue : ternaryFalse) ?? last|##########}"]
2 -> 9
7 -> 9
8 -> 9
10 [shape=record label="{EXIT #10}"]
9 -> 10
}
