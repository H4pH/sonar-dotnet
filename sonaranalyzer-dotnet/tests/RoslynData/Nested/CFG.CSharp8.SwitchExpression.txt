// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22SwitchExpression%22+%7B%0D%0Asubgraph+%22cluster_Sonar.SwitchExpression%22+%7B%0Alabel+%3D+%22Sonar.SwitchExpression%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+a%7CLiteralExpressionSyntax%3A+0%7D%22%5D%0D%0A0+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A0+-%3E+2+%5Blabel%3D%22False%22%5D%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Zero%5C%22%7D%22%5D%0D%0A1+-%3E+3%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+a%7CLiteralExpressionSyntax%3A+1%7D%22%5D%0D%0A2+-%3E+4+%5Blabel%3D%22True%22%5D%0D%0A2+-%3E+5+%5Blabel%3D%22False%22%5D%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22One%5C%22%7D%22%5D%0D%0A4+-%3E+3%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+a%7CLiteralExpressionSyntax%3A+2%7D%22%5D%0D%0A5+-%3E+6+%5Blabel%3D%22True%22%5D%0D%0A5+-%3E+7+%5Blabel%3D%22False%22%5D%0D%0A6+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+b%7CLiteralExpressionSyntax%3A+0%7D%22%5D%0D%0A6+-%3E+8+%5Blabel%3D%22True%22%5D%0D%0A6+-%3E+9+%5Blabel%3D%22False%22%5D%0D%0A8+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Two+bIsZero%5C%22%7D%22%5D%0D%0A8+-%3E+3%0D%0A9+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+b%7CLiteralExpressionSyntax%3A+1%7D%22%5D%0D%0A9+-%3E+10+%5Blabel%3D%22True%22%5D%0D%0A9+-%3E+11+%5Blabel%3D%22False%22%5D%0D%0A10+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Two+bIsOne%5C%22%7D%22%5D%0D%0A10+-%3E+3%0D%0A11+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Two+bIsMore%5C%22%7D%22%5D%0D%0A11+-%3E+3%0D%0A7+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A+a%7CLiteralExpressionSyntax%3A+3%7D%22%5D%0D%0A7+-%3E+12+%5Blabel%3D%22True%22%5D%0D%0A7+-%3E+13+%5Blabel%3D%22False%22%5D%0D%0A12+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Three%5C%22%7D%22%5D%0D%0A12+-%3E+3%0D%0A13+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+null%7D%22%5D%0D%0A13+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CVariableDeclaratorSyntax%3A+ret+%3D+a+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%2C%5Cn++++++++++++3+%3D%5C%3E+%5C%22Three%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+null%5Cn++++++++%5C%7D%7D%22%5D%0D%0A3+-%3E+14%0D%0A14+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.SwitchExpression%22+%7B%0Alabel+%3D+%22Roslyn.SwitchExpression%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0ARoot6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root6%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+b%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+b%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+b%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot5+-%3E+Root6+%5Blabel%3D%22Else%22%5D%0D%0ARoot7+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root7%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two+bIsZero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two+bIsZero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot6+-%3E+Root7+%5Blabel%3D%22Else%22%5D%0D%0ARoot8+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root8%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+b%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+1%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot6+-%3E+Root8+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot9+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root9%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two+bIsOne%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two+bIsOne%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot8+-%3E+Root9+%5Blabel%3D%22Else%22%5D%0D%0ARoot10+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root10%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+b%7C1%23+DiscardPatternOperation+%2F+DiscardPatternSyntax%3A+_%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot8+-%3E+Root10+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot11+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root11%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two+bIsMore%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Two+bIsMore%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot10+-%3E+Root11+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C1%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C0%23+FlowCaptureOperation+%2F+IdentifierNameSyntax%3A+a%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+0%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+0+%3D%5C%3E+%5C%22Zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Zero%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root2+%5Blabel%3D%22Else%22%5D%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root3%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+1%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+1+%3D%5C%3E+%5C%22One%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root3+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root4%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22One%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22One%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root4+%5Blabel%3D%22Else%22%5D%0D%0ARoot5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root5%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+2%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+2%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+2+%3D%5C%3E+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root5+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot12+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root12%7C%23%23+BranchValue+%23%23%7C0%23+ObjectCreationOperation+%2F+SwitchExpressionSyntax%3A+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot10+-%3E+Root12+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot12+-%3E+NoDestinationRoot12+%5Blabel%3D%22Throw%22%5D%0D%0ARoot13+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root13%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+3%7C1%23+ConstantPatternOperation+%2F+ConstantPatternSyntax%3A+3%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+3+%3D%5C%3E+%5C%22Three%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot5+-%3E+Root13+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot14+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root14%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Three%5C%22%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Three%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot13+-%3E+Root14+%5Blabel%3D%22Else%22%5D%0D%0ARoot15+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root15%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+IdentifierNameSyntax%3A+a%7C1%23+DiscardPatternOperation+%2F+DiscardPatternSyntax%3A+_%7C0%23+IsPatternOperation+%2F+SwitchExpressionArmSyntax%3A+_+%3D%5C%3E+null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot13+-%3E+Root15+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot16+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root16%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+null%7C1%23+ConversionOperation+%2F+LiteralExpressionSyntax%3A+null%7C0%23+FlowCaptureOperation+%2F+LiteralExpressionSyntax%3A+null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot15+-%3E+Root16+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0ARoot17+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root17%7C%23%23+BranchValue+%23%23%7C0%23+ObjectCreationOperation+%2F+SwitchExpressionSyntax%3A+a+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%2C%5Cn++++++++++++3+%3D%5C%3E+%5C%22Three%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+null%5Cn++++++++%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot15+-%3E+Root17+%5Blabel%3D%22WhenFalse%22%5D%0D%0ARoot17+-%3E+NoDestinationRoot17+%5Blabel%3D%22Throw%22%5D%0D%0ARoot18+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root18%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+a+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%2C%5Cn++++++++++++3+%3D%5C%3E+%5C%22Three%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+null%5Cn++++++++%5C%7D%7C1%23+FlowCaptureReferenceOperation+%2F+SwitchExpressionSyntax%3A+a+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%2C%5Cn++++++++++++3+%3D%5C%3E+%5C%22Three%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+null%5Cn++++++++%5C%7D%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+ret+%3D+a+switch%5Cn++++++++%5C%7B%5Cn++++++++++++0+%3D%5C%3E+%5C%22Zero%5C%22%2C%5Cn++++++++++++1+%3D%5C%3E+%5C%22One%5C%22%2C%5Cn++++++++++++2+%3D%5C%3E+b+switch+%5C%7B+0+%3D%5C%3E+%5C%22Two+bIsZero%5C%22%2C+1+%3D%5C%3E+%5C%22Two+bIsOne%5C%22%2C+_+%3D%5C%3E+%5C%22Two+bIsMore%5C%22+%5C%7D%2C%5Cn++++++++++++3+%3D%5C%3E+%5C%22Three%5C%22%2C%5Cn++++++++++++_+%3D%5C%3E+null%5Cn++++++++%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+Root18%0D%0ARoot4+-%3E+Root18%0D%0ARoot7+-%3E+Root18%0D%0ARoot9+-%3E+Root18%0D%0ARoot11+-%3E+Root18%0D%0ARoot14+-%3E+Root18%0D%0ARoot16+-%3E+Root18%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot19+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root19%7D%22%5D%0D%0ARoot18+-%3E+Root19%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void SwitchExpression(int a, int b)
    {
        var ret = a switch
        {
            0 => "Zero",
            1 => "One",
            2 => b switch { 0 => "Two bIsZero", 1 => "Two bIsOne", _ => "Two bIsMore" },
            3 => "Three",
            _ => null
        };
    }
*/

digraph "SwitchExpression" {
subgraph "cluster_Sonar.SwitchExpression" {
label = "Sonar.SwitchExpression"
0 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 0}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Zero\"}"]
1 -> 3
2 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 1}"]
2 -> 4 [label="True"]
2 -> 5 [label="False"]
4 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"One\"}"]
4 -> 3
5 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 2}"]
5 -> 6 [label="True"]
5 -> 7 [label="False"]
6 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: b|LiteralExpressionSyntax: 0}"]
6 -> 8 [label="True"]
6 -> 9 [label="False"]
8 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two bIsZero\"}"]
8 -> 3
9 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: b|LiteralExpressionSyntax: 1}"]
9 -> 10 [label="True"]
9 -> 11 [label="False"]
10 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two bIsOne\"}"]
10 -> 3
11 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two bIsMore\"}"]
11 -> 3
7 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 3}"]
7 -> 12 [label="True"]
7 -> 13 [label="False"]
12 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Three\"}"]
12 -> 3
13 [shape=record label="{SIMPLE|LiteralExpressionSyntax: null}"]
13 -> 3
3 [shape=record label="{SIMPLE|VariableDeclaratorSyntax: ret = a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}}"]
3 -> 14
14 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.SwitchExpression" {
label = "Roslyn.SwitchExpression"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root6 [shape=record label="{BLOCK #Root6|1# ParameterReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / IdentifierNameSyntax: b|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|2# LiteralOperation / LiteralExpressionSyntax: 0|1# ConstantPatternOperation / ConstantPatternSyntax: 0|0# IsPatternOperation / SwitchExpressionArmSyntax: 0 =\> \"Two bIsZero\"|##########}"]
Root5 -> Root6 [label="Else"]
Root7 [shape=record label="{BLOCK #Root7|1# LiteralOperation / LiteralExpressionSyntax: \"Two bIsZero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two bIsZero\"|##########}"]
Root6 -> Root7 [label="Else"]
Root8 [shape=record label="{BLOCK #Root8|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ConstantPatternOperation / ConstantPatternSyntax: 1|0# IsPatternOperation / SwitchExpressionArmSyntax: 1 =\> \"Two bIsOne\"|##########}"]
Root6 -> Root8 [label="WhenFalse"]
Root9 [shape=record label="{BLOCK #Root9|1# LiteralOperation / LiteralExpressionSyntax: \"Two bIsOne\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two bIsOne\"|##########}"]
Root8 -> Root9 [label="Else"]
Root10 [shape=record label="{BLOCK #Root10|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> \"Two bIsMore\"|##########}"]
Root8 -> Root10 [label="WhenFalse"]
Root11 [shape=record label="{BLOCK #Root11|1# LiteralOperation / LiteralExpressionSyntax: \"Two bIsMore\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two bIsMore\"|##########}"]
Root10 -> Root11 [label="Else"]
}
Root1 [shape=record label="{BLOCK #Root1|1# ParameterReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 0|1# ConstantPatternOperation / ConstantPatternSyntax: 0|0# IsPatternOperation / SwitchExpressionArmSyntax: 0 =\> \"Zero\"|##########}"]
Root0 -> Root1
Root2 [shape=record label="{BLOCK #Root2|1# LiteralOperation / LiteralExpressionSyntax: \"Zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Zero\"|##########}"]
Root1 -> Root2 [label="Else"]
Root3 [shape=record label="{BLOCK #Root3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ConstantPatternOperation / ConstantPatternSyntax: 1|0# IsPatternOperation / SwitchExpressionArmSyntax: 1 =\> \"One\"|##########}"]
Root1 -> Root3 [label="WhenFalse"]
Root4 [shape=record label="{BLOCK #Root4|1# LiteralOperation / LiteralExpressionSyntax: \"One\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"One\"|##########}"]
Root3 -> Root4 [label="Else"]
Root5 [shape=record label="{BLOCK #Root5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 2|1# ConstantPatternOperation / ConstantPatternSyntax: 2|0# IsPatternOperation / SwitchExpressionArmSyntax: 2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \}|##########}"]
Root3 -> Root5 [label="WhenFalse"]
Root12 [shape=record label="{BLOCK #Root12|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \}|##########}"]
Root10 -> Root12 [label="WhenFalse"]
Root12 -> NoDestinationRoot12 [label="Throw"]
Root13 [shape=record label="{BLOCK #Root13|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 3|1# ConstantPatternOperation / ConstantPatternSyntax: 3|0# IsPatternOperation / SwitchExpressionArmSyntax: 3 =\> \"Three\"|##########}"]
Root5 -> Root13 [label="WhenFalse"]
Root14 [shape=record label="{BLOCK #Root14|1# LiteralOperation / LiteralExpressionSyntax: \"Three\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Three\"|##########}"]
Root13 -> Root14 [label="Else"]
Root15 [shape=record label="{BLOCK #Root15|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> null|##########}"]
Root13 -> Root15 [label="WhenFalse"]
Root16 [shape=record label="{BLOCK #Root16|2# LiteralOperation / LiteralExpressionSyntax: null|1# ConversionOperation / LiteralExpressionSyntax: null|0# FlowCaptureOperation / LiteralExpressionSyntax: null|##########}"]
Root15 -> Root16 [label="Else"]
}
Root17 [shape=record label="{BLOCK #Root17|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|##########}"]
Root15 -> Root17 [label="WhenFalse"]
Root17 -> NoDestinationRoot17 [label="Throw"]
Root18 [shape=record label="{BLOCK #Root18|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|1# FlowCaptureReferenceOperation / SwitchExpressionSyntax: a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|##########}"]
Root2 -> Root18
Root4 -> Root18
Root7 -> Root18
Root9 -> Root18
Root11 -> Root18
Root14 -> Root18
Root16 -> Root18
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root19 [shape=record label="{EXIT #Root19}"]
Root18 -> Root19
}
}
