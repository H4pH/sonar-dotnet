// http://viz-js.com/
// https://dreampuf.github.io/GraphvizOnline/#digraph%20%22SwitchExpression%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.SwitchExpression%22%20%7B%0Alabel%20%3D%20%22Sonar.SwitchExpression%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20a%7CLiteralExpressionSyntax%3A%200%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Zero%5C%22%7D%22%5D%0D%0A1%20-%3E%203%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20a%7CLiteralExpressionSyntax%3A%201%7D%22%5D%0D%0A2%20-%3E%204%20%5Blabel%3D%22True%22%5D%0D%0A2%20-%3E%205%20%5Blabel%3D%22False%22%5D%0D%0A4%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22One%5C%22%7D%22%5D%0D%0A4%20-%3E%203%0D%0A5%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20a%7CLiteralExpressionSyntax%3A%202%7D%22%5D%0D%0A5%20-%3E%206%20%5Blabel%3D%22True%22%5D%0D%0A5%20-%3E%207%20%5Blabel%3D%22False%22%5D%0D%0A6%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20b%7CLiteralExpressionSyntax%3A%200%7D%22%5D%0D%0A6%20-%3E%208%20%5Blabel%3D%22True%22%5D%0D%0A6%20-%3E%209%20%5Blabel%3D%22False%22%5D%0D%0A8%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Two%20bIsZero%5C%22%7D%22%5D%0D%0A8%20-%3E%203%0D%0A9%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20b%7CLiteralExpressionSyntax%3A%201%7D%22%5D%0D%0A9%20-%3E%2010%20%5Blabel%3D%22True%22%5D%0D%0A9%20-%3E%2011%20%5Blabel%3D%22False%22%5D%0D%0A10%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Two%20bIsOne%5C%22%7D%22%5D%0D%0A10%20-%3E%203%0D%0A11%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Two%20bIsMore%5C%22%7D%22%5D%0D%0A11%20-%3E%203%0D%0A7%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3ASwitchExpressionArm%7CIdentifierNameSyntax%3A%20a%7CLiteralExpressionSyntax%3A%203%7D%22%5D%0D%0A7%20-%3E%2012%20%5Blabel%3D%22True%22%5D%0D%0A7%20-%3E%2013%20%5Blabel%3D%22False%22%5D%0D%0A12%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Three%5C%22%7D%22%5D%0D%0A12%20-%3E%203%0D%0A13%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20null%7D%22%5D%0D%0A13%20-%3E%203%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CVariableDeclaratorSyntax%3A%20ret%20%3D%20a%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%200%20%3D%5C%3E%20%5C%22Zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%201%20%3D%5C%3E%20%5C%22One%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%202%20%3D%5C%3E%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%203%20%3D%5C%3E%20%5C%22Three%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20null%5Cn%20%20%20%20%20%20%20%20%5C%7D%7D%22%5D%0D%0A3%20-%3E%2014%0D%0A14%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.SwitchExpression%22%20%7B%0Alabel%20%3D%20%22Roslyn.SwitchExpression%22%0D%0AR0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23R0%7D%22%5D%0D%0AR1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R1%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C1%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%200%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%200%20%3D%5C%3E%20%5C%22Zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0%20-%3E%20R1%0D%0AR2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R2%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Zero%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Zero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R2%20%5Blabel%3D%22Else%22%5D%0D%0AR3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R3%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C1%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%201%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%201%20%3D%5C%3E%20%5C%22One%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R3%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R4%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22One%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22One%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3%20-%3E%20R4%20%5Blabel%3D%22Else%22%5D%0D%0AR5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R5%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%202%7C1%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%202%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%202%20%3D%5C%3E%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3%20-%3E%20R5%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R6%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C0%23%20FlowCaptureOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C1%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%200%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5%20-%3E%20R6%20%5Blabel%3D%22Else%22%5D%0D%0AR7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R7%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Two%20bIsZero%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Two%20bIsZero%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR6%20-%3E%20R7%20%5Blabel%3D%22Else%22%5D%0D%0AR8%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R8%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C1%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%201%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR6%20-%3E%20R8%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR9%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R9%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Two%20bIsOne%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Two%20bIsOne%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR8%20-%3E%20R9%20%5Blabel%3D%22Else%22%5D%0D%0AR10%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R10%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C1%23%20DiscardPatternOperation%20%2F%20DiscardPatternSyntax%3A%20_%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR8%20-%3E%20R10%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR11%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R11%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Two%20bIsMore%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Two%20bIsMore%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR10%20-%3E%20R11%20%5Blabel%3D%22Else%22%5D%0D%0AR12%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R12%7C%23%23%20BranchValue%20%23%23%7C0%23%20ObjectCreationOperation%20%2F%20SwitchExpressionSyntax%3A%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR10%20-%3E%20R12%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR13%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R13%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%203%7C1%23%20ConstantPatternOperation%20%2F%20ConstantPatternSyntax%3A%203%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%203%20%3D%5C%3E%20%5C%22Three%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5%20-%3E%20R13%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR14%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R14%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Three%5C%22%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Three%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR13%20-%3E%20R14%20%5Blabel%3D%22Else%22%5D%0D%0AR15%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R15%7C%23%23%20BranchValue%20%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C1%23%20DiscardPatternOperation%20%2F%20DiscardPatternSyntax%3A%20_%7C0%23%20IsPatternOperation%20%2F%20SwitchExpressionArmSyntax%3A%20_%20%3D%5C%3E%20null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR13%20-%3E%20R15%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR16%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R16%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C1%23%20ConversionOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C0%23%20FlowCaptureOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR15%20-%3E%20R16%20%5Blabel%3D%22Else%22%5D%0D%0AR17%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R17%7C%23%23%20BranchValue%20%23%23%7C0%23%20ObjectCreationOperation%20%2F%20SwitchExpressionSyntax%3A%20a%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%200%20%3D%5C%3E%20%5C%22Zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%201%20%3D%5C%3E%20%5C%22One%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%202%20%3D%5C%3E%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%203%20%3D%5C%3E%20%5C%22Three%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20null%5Cn%20%20%20%20%20%20%20%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR15%20-%3E%20R17%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR18%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R18%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20ret%20%3D%20a%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%200%20%3D%5C%3E%20%5C%22Zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%201%20%3D%5C%3E%20%5C%22One%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%202%20%3D%5C%3E%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%203%20%3D%5C%3E%20%5C%22Three%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20null%5Cn%20%20%20%20%20%20%20%20%5C%7D%7C1%23%20FlowCaptureReferenceOperation%20%2F%20SwitchExpressionSyntax%3A%20a%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%200%20%3D%5C%3E%20%5C%22Zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%201%20%3D%5C%3E%20%5C%22One%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%202%20%3D%5C%3E%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%203%20%3D%5C%3E%20%5C%22Three%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20null%5Cn%20%20%20%20%20%20%20%20%5C%7D%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20ret%20%3D%20a%20switch%5Cn%20%20%20%20%20%20%20%20%5C%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%200%20%3D%5C%3E%20%5C%22Zero%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%201%20%3D%5C%3E%20%5C%22One%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%202%20%3D%5C%3E%20b%20switch%20%5C%7B%200%20%3D%5C%3E%20%5C%22Two%20bIsZero%5C%22%2C%201%20%3D%5C%3E%20%5C%22Two%20bIsOne%5C%22%2C%20_%20%3D%5C%3E%20%5C%22Two%20bIsMore%5C%22%20%5C%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%203%20%3D%5C%3E%20%5C%22Three%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20_%20%3D%5C%3E%20null%5Cn%20%20%20%20%20%20%20%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2%20-%3E%20R18%0D%0AR4%20-%3E%20R18%0D%0AR7%20-%3E%20R18%0D%0AR9%20-%3E%20R18%0D%0AR11%20-%3E%20R18%0D%0AR14%20-%3E%20R18%0D%0AR16%20-%3E%20R18%0D%0AR19%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23R19%7D%22%5D%0D%0AR18%20-%3E%20R19%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void SwitchExpression(int a, int b)
    {
        var ret = a switch
        {
            0 => "Zero",
            1 => "One",
            2 => b switch { 0 => "Two bIsZero", 1 => "Two bIsOne", _ => "Two bIsMore" },
            3 => "Three",
            _ => null
        };
    }
*/

digraph "SwitchExpression" {
subgraph "cluster_Sonar.SwitchExpression" {
label = "Sonar.SwitchExpression"
0 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 0}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Zero\"}"]
1 -> 3
2 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 1}"]
2 -> 4 [label="True"]
2 -> 5 [label="False"]
4 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"One\"}"]
4 -> 3
5 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 2}"]
5 -> 6 [label="True"]
5 -> 7 [label="False"]
6 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: b|LiteralExpressionSyntax: 0}"]
6 -> 8 [label="True"]
6 -> 9 [label="False"]
8 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two bIsZero\"}"]
8 -> 3
9 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: b|LiteralExpressionSyntax: 1}"]
9 -> 10 [label="True"]
9 -> 11 [label="False"]
10 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two bIsOne\"}"]
10 -> 3
11 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Two bIsMore\"}"]
11 -> 3
7 [shape=record label="{BINARY:SwitchExpressionArm|IdentifierNameSyntax: a|LiteralExpressionSyntax: 3}"]
7 -> 12 [label="True"]
7 -> 13 [label="False"]
12 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Three\"}"]
12 -> 3
13 [shape=record label="{SIMPLE|LiteralExpressionSyntax: null}"]
13 -> 3
3 [shape=record label="{SIMPLE|VariableDeclaratorSyntax: ret = a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}}"]
3 -> 14
14 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.SwitchExpression" {
label = "Roslyn.SwitchExpression"
R0 [shape=record label="{ENTRY #R0}"]
R1 [shape=record label="{BLOCK #R1|1# ParameterReferenceOperation / IdentifierNameSyntax: a|0# FlowCaptureOperation / IdentifierNameSyntax: a|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 0|1# ConstantPatternOperation / ConstantPatternSyntax: 0|0# IsPatternOperation / SwitchExpressionArmSyntax: 0 =\> \"Zero\"|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|1# LiteralOperation / LiteralExpressionSyntax: \"Zero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Zero\"|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ConstantPatternOperation / ConstantPatternSyntax: 1|0# IsPatternOperation / SwitchExpressionArmSyntax: 1 =\> \"One\"|##########}"]
R1 -> R3 [label="WhenFalse"]
R4 [shape=record label="{BLOCK #R4|1# LiteralOperation / LiteralExpressionSyntax: \"One\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"One\"|##########}"]
R3 -> R4 [label="Else"]
R5 [shape=record label="{BLOCK #R5|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 2|1# ConstantPatternOperation / ConstantPatternSyntax: 2|0# IsPatternOperation / SwitchExpressionArmSyntax: 2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \}|##########}"]
R3 -> R5 [label="WhenFalse"]
R6 [shape=record label="{BLOCK #R6|1# ParameterReferenceOperation / IdentifierNameSyntax: b|0# FlowCaptureOperation / IdentifierNameSyntax: b|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|2# LiteralOperation / LiteralExpressionSyntax: 0|1# ConstantPatternOperation / ConstantPatternSyntax: 0|0# IsPatternOperation / SwitchExpressionArmSyntax: 0 =\> \"Two bIsZero\"|##########}"]
R5 -> R6 [label="Else"]
R7 [shape=record label="{BLOCK #R7|1# LiteralOperation / LiteralExpressionSyntax: \"Two bIsZero\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two bIsZero\"|##########}"]
R6 -> R7 [label="Else"]
R8 [shape=record label="{BLOCK #R8|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ConstantPatternOperation / ConstantPatternSyntax: 1|0# IsPatternOperation / SwitchExpressionArmSyntax: 1 =\> \"Two bIsOne\"|##########}"]
R6 -> R8 [label="WhenFalse"]
R9 [shape=record label="{BLOCK #R9|1# LiteralOperation / LiteralExpressionSyntax: \"Two bIsOne\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two bIsOne\"|##########}"]
R8 -> R9 [label="Else"]
R10 [shape=record label="{BLOCK #R10|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: b|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> \"Two bIsMore\"|##########}"]
R8 -> R10 [label="WhenFalse"]
R11 [shape=record label="{BLOCK #R11|1# LiteralOperation / LiteralExpressionSyntax: \"Two bIsMore\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Two bIsMore\"|##########}"]
R10 -> R11 [label="Else"]
R12 [shape=record label="{BLOCK #R12|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \}|##########}"]
R10 -> R12 [label="WhenFalse"]
R13 [shape=record label="{BLOCK #R13|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|2# LiteralOperation / LiteralExpressionSyntax: 3|1# ConstantPatternOperation / ConstantPatternSyntax: 3|0# IsPatternOperation / SwitchExpressionArmSyntax: 3 =\> \"Three\"|##########}"]
R5 -> R13 [label="WhenFalse"]
R14 [shape=record label="{BLOCK #R14|1# LiteralOperation / LiteralExpressionSyntax: \"Three\"|0# FlowCaptureOperation / LiteralExpressionSyntax: \"Three\"|##########}"]
R13 -> R14 [label="Else"]
R15 [shape=record label="{BLOCK #R15|## BranchValue ##|1# FlowCaptureReferenceOperation / IdentifierNameSyntax: a|1# DiscardPatternOperation / DiscardPatternSyntax: _|0# IsPatternOperation / SwitchExpressionArmSyntax: _ =\> null|##########}"]
R13 -> R15 [label="WhenFalse"]
R16 [shape=record label="{BLOCK #R16|2# LiteralOperation / LiteralExpressionSyntax: null|1# ConversionOperation / LiteralExpressionSyntax: null|0# FlowCaptureOperation / LiteralExpressionSyntax: null|##########}"]
R15 -> R16 [label="Else"]
R17 [shape=record label="{BLOCK #R17|## BranchValue ##|0# ObjectCreationOperation / SwitchExpressionSyntax: a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|##########}"]
R15 -> R17 [label="WhenFalse"]
R18 [shape=record label="{BLOCK #R18|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|1# FlowCaptureReferenceOperation / SwitchExpressionSyntax: a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = a switch\n        \{\n            0 =\> \"Zero\",\n            1 =\> \"One\",\n            2 =\> b switch \{ 0 =\> \"Two bIsZero\", 1 =\> \"Two bIsOne\", _ =\> \"Two bIsMore\" \},\n            3 =\> \"Three\",\n            _ =\> null\n        \}|##########}"]
R2 -> R18
R4 -> R18
R7 -> R18
R9 -> R18
R11 -> R18
R14 -> R18
R16 -> R18
R19 [shape=record label="{EXIT #R19}"]
R18 -> R19
}
}
