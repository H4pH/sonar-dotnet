// http://viz-js.com/
// https://dreampuf.github.io/GraphvizOnline/#digraph%20%22If%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.If%22%20%7B%0Alabel%20%3D%20%22Sonar.If%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A%20outer%7D%22%5D%0D%0A0%20-%3E%201%20%5Blabel%3D%22True%22%5D%0D%0A0%20-%3E%202%20%5Blabel%3D%22False%22%5D%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BBINARY%3AIdentifierName%7CIdentifierNameSyntax%3A%20inner%7D%22%5D%0D%0A1%20-%3E%203%20%5Blabel%3D%22True%22%5D%0D%0A1%20-%3E%204%20%5Blabel%3D%22False%22%5D%0D%0A3%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Outer%20%26%26%20Inner%5C%22%7CVariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22Outer%20%26%26%20Inner%5C%22%7D%22%5D%0D%0A3%20-%3E%205%0D%0A4%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22Outer%20%26%26%20!Inner%5C%22%7CVariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22Outer%20%26%26%20!Inner%5C%22%7D%22%5D%0D%0A4%20-%3E%205%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A%20%5C%22!Outer%5C%22%7CVariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22!Outer%5C%22%7D%22%5D%0D%0A2%20-%3E%205%0D%0A5%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.If%22%20%7B%0Alabel%20%3D%20%22Roslyn.If%22%0D%0AR0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23R0%7D%22%5D%0D%0AR1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R1%7C%23%23%20BranchValue%20%23%23%7C0%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20outer%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0%20-%3E%20R1%0D%0AR2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R2%7C%23%23%20BranchValue%20%23%23%7C0%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20inner%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R2%20%5Blabel%3D%22Else%22%5D%0D%0AR3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R3%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22Outer%20%26%26%20Inner%5C%22%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Outer%20%26%26%20Inner%5C%22%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22Outer%20%26%26%20Inner%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2%20-%3E%20R3%20%5Blabel%3D%22Else%22%5D%0D%0AR4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R4%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22Outer%20%26%26%20!Inner%5C%22%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Outer%20%26%26%20!Inner%5C%22%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22Outer%20%26%26%20!Inner%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2%20-%3E%20R4%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23R5%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22!Outer%5C%22%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22!Outer%5C%22%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20a%20%3D%20%5C%22!Outer%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1%20-%3E%20R5%20%5Blabel%3D%22WhenFalse%22%5D%0D%0AR6%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23R6%7D%22%5D%0D%0AR3%20-%3E%20R6%0D%0AR4%20-%3E%20R6%0D%0AR5%20-%3E%20R6%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void If(bool outer, bool inner)
    {
        if (outer)
        {
            if (inner)
            {
                var a = "Outer && Inner";
            }
            else
            {
                var a = "Outer && !Inner";
            }
        }
        else
        {
            var a = "!Outer";
        }
    }
*/

digraph "If" {
subgraph "cluster_Sonar.If" {
label = "Sonar.If"
0 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: outer}"]
0 -> 1 [label="True"]
0 -> 2 [label="False"]
1 [shape=record label="{BINARY:IdentifierName|IdentifierNameSyntax: inner}"]
1 -> 3 [label="True"]
1 -> 4 [label="False"]
3 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Outer && Inner\"|VariableDeclaratorSyntax: a = \"Outer && Inner\"}"]
3 -> 5
4 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Outer && !Inner\"|VariableDeclaratorSyntax: a = \"Outer && !Inner\"}"]
4 -> 5
2 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"!Outer\"|VariableDeclaratorSyntax: a = \"!Outer\"}"]
2 -> 5
5 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.If" {
label = "Roslyn.If"
R0 [shape=record label="{ENTRY #R0}"]
R1 [shape=record label="{BLOCK #R1|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: outer|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|## BranchValue ##|0# ParameterReferenceOperation / IdentifierNameSyntax: inner|##########}"]
R1 -> R2 [label="Else"]
R3 [shape=record label="{BLOCK #R3|1# LocalReferenceOperation / VariableDeclaratorSyntax: a = \"Outer && Inner\"|1# LiteralOperation / LiteralExpressionSyntax: \"Outer && Inner\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: a = \"Outer && Inner\"|##########}"]
R2 -> R3 [label="Else"]
R4 [shape=record label="{BLOCK #R4|1# LocalReferenceOperation / VariableDeclaratorSyntax: a = \"Outer && !Inner\"|1# LiteralOperation / LiteralExpressionSyntax: \"Outer && !Inner\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: a = \"Outer && !Inner\"|##########}"]
R2 -> R4 [label="WhenFalse"]
R5 [shape=record label="{BLOCK #R5|1# LocalReferenceOperation / VariableDeclaratorSyntax: a = \"!Outer\"|1# LiteralOperation / LiteralExpressionSyntax: \"!Outer\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: a = \"!Outer\"|##########}"]
R1 -> R5 [label="WhenFalse"]
R6 [shape=record label="{EXIT #R6}"]
R3 -> R6
R4 -> R6
R5 -> R6
}
}
