// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22DoContinue%22+%7B%0D%0Asubgraph+%22cluster_Sonar.DoContinue%22+%7B%0Alabel+%3D+%22Sonar.DoContinue%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+0%7CVariableDeclaratorSyntax%3A+i+%3D+0%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ALessThanExpression%7CIdentifierNameSyntax%3A+i%7CPostfixUnaryExpressionSyntax%3A+i%2B%2B%7CIdentifierNameSyntax%3A+i%7CLiteralExpressionSyntax%3A+5%7CBinaryExpressionSyntax%3A+i+%5C%3C+5%7D%22%5D%0D%0A1+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22False%22%5D%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AContinueStatement%7D%22%5D%0D%0A2+-%3E+4%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+i%7CLiteralExpressionSyntax%3A+10%7CAssignmentExpressionSyntax%3A+i+%2B%3D+10%7D%22%5D%0D%0A3+-%3E+4%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BBINARY%3ALessThanExpression%7CIdentifierNameSyntax%3A+i%7CLiteralExpressionSyntax%3A+10%7CBinaryExpressionSyntax%3A+i+%5C%3C+10%7D%22%5D%0D%0A4+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A4+-%3E+5+%5Blabel%3D%22False%22%5D%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.DoContinue%22+%7B%0Alabel+%3D+%22Roslyn.DoContinue%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+i+%3D+0%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+i+%3D+0%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+IncrementOrDecrementOperation+%2F+PostfixUnaryExpressionSyntax%3A+i%2B%2B%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+i%2B%2B%3B%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+5%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+i+%5C%3C+5%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2%0D%0AR4+-%3E+R2+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+10%7C1%23+CompoundAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+i+%2B%3D+10%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+i+%2B%3D+10%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R3+%5Blabel%3D%22WhenFalse%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C%23%23+BranchValue+%23%23%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+10%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+i+%5C%3C+10%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R4+%5Blabel%3D%22Else%22%5D%0D%0AR3+-%3E+R4%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R5%7D%22%5D%0D%0AR4+-%3E+R5+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void DoContinue()
    {
        var i = 0;
        do
        {
            i++;
            if (i < 5)
            {
                continue;
            }
            i += 10;
        } while (i < 10);
    }
*/

digraph "DoContinue" {
subgraph "cluster_Sonar.DoContinue" {
label = "Sonar.DoContinue"
0 [shape=record label="{SIMPLE|LiteralExpressionSyntax: 0|VariableDeclaratorSyntax: i = 0}"]
0 -> 1
1 [shape=record label="{BINARY:LessThanExpression|IdentifierNameSyntax: i|PostfixUnaryExpressionSyntax: i++|IdentifierNameSyntax: i|LiteralExpressionSyntax: 5|BinaryExpressionSyntax: i \< 5}"]
1 -> 2 [label="True"]
1 -> 3 [label="False"]
2 [shape=record label="{JUMP:ContinueStatement}"]
2 -> 4
3 [shape=record label="{SIMPLE|IdentifierNameSyntax: i|LiteralExpressionSyntax: 10|AssignmentExpressionSyntax: i += 10}"]
3 -> 4
4 [shape=record label="{BINARY:LessThanExpression|IdentifierNameSyntax: i|LiteralExpressionSyntax: 10|BinaryExpressionSyntax: i \< 10}"]
4 -> 1 [label="True"]
4 -> 5 [label="False"]
5 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.DoContinue" {
label = "Roslyn.DoContinue"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# LocalReferenceOperation / VariableDeclaratorSyntax: i = 0|1# LiteralOperation / LiteralExpressionSyntax: 0|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: i = 0|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|2# LocalReferenceOperation / IdentifierNameSyntax: i|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i++|0# ExpressionStatementOperation / ExpressionStatementSyntax: i++;|##########|## BranchValue ##|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 5|0# BinaryOperation / BinaryExpressionSyntax: i \< 5|##########}"]
R1 -> R2
R4 -> R2 [label="WhenTrue"]
R3 [shape=record label="{BLOCK #R3|2# LocalReferenceOperation / IdentifierNameSyntax: i|2# LiteralOperation / LiteralExpressionSyntax: 10|1# CompoundAssignmentOperation / AssignmentExpressionSyntax: i += 10|0# ExpressionStatementOperation / ExpressionStatementSyntax: i += 10;|##########}"]
R2 -> R3 [label="WhenFalse"]
R4 [shape=record label="{BLOCK #R4|## BranchValue ##|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 10|0# BinaryOperation / BinaryExpressionSyntax: i \< 10|##########}"]
R2 -> R4 [label="Else"]
R3 -> R4
}
R0 [shape=record label="{ENTRY #R0}"]
R5 [shape=record label="{EXIT #R5}"]
R4 -> R5 [label="Else"]
}
}
