// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22For%22+%7B%0D%0Asubgraph+%22cluster_Sonar.For%22+%7B%0Alabel+%3D+%22Sonar.For%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BFOR%3AForStatement%7CLiteralExpressionSyntax%3A+0%7CVariableDeclaratorSyntax%3A+i+%3D+0%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AForStatement%7CIdentifierNameSyntax%3A+i%7CLiteralExpressionSyntax%3A+10%7CBinaryExpressionSyntax%3A+i+%5C%3C+10%7D%22%5D%0D%0A1+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22False%22%5D%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Value%5C%22%7CVariableDeclaratorSyntax%3A+value+%3D+%5C%22Value%5C%22%7D%22%5D%0D%0A2+-%3E+4%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+i%7CPostfixUnaryExpressionSyntax%3A+i%2B%2B%7D%22%5D%0D%0A4+-%3E+1%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.For%22+%7B%0Alabel+%3D+%22Roslyn.For%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+%5C%22Value%5C%22%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Value%5C%22%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+%5C%22Value%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R3+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+i+%3D+0%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+i+%3D+0%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C%23%23+BranchValue+%23%23%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+10%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+i+%5C%3C+10%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2%0D%0AR4+-%3E+R2%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+IncrementOrDecrementOperation+%2F+PostfixUnaryExpressionSyntax%3A+i%2B%2B%7C0%23+ExpressionStatementOperation+%2F+PostfixUnaryExpressionSyntax%3A+i%2B%2B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R4%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R5%7D%22%5D%0D%0AR2+-%3E+R5+%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void For()
    {
        for(var i = 0; i < 10; i++)
        {
            var value = "Value";
        }
    }
*/

digraph "For" {
subgraph "cluster_Sonar.For" {
label = "Sonar.For"
0 [shape=record label="{FOR:ForStatement|LiteralExpressionSyntax: 0|VariableDeclaratorSyntax: i = 0}"]
0 -> 1
1 [shape=record label="{BINARY:ForStatement|IdentifierNameSyntax: i|LiteralExpressionSyntax: 10|BinaryExpressionSyntax: i \< 10}"]
1 -> 2 [label="True"]
1 -> 3 [label="False"]
2 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Value\"|VariableDeclaratorSyntax: value = \"Value\"}"]
2 -> 4
4 [shape=record label="{SIMPLE|IdentifierNameSyntax: i|PostfixUnaryExpressionSyntax: i++}"]
4 -> 1
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.For" {
label = "Roslyn.For"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R3 [shape=record label="{BLOCK #R3|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = \"Value\"|1# LiteralOperation / LiteralExpressionSyntax: \"Value\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = \"Value\"|##########}"]
R2 -> R3 [label="Else"]
}
R1 [shape=record label="{BLOCK #R1|1# LocalReferenceOperation / VariableDeclaratorSyntax: i = 0|1# LiteralOperation / LiteralExpressionSyntax: 0|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: i = 0|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|## BranchValue ##|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 10|0# BinaryOperation / BinaryExpressionSyntax: i \< 10|##########}"]
R1 -> R2
R4 -> R2
R4 [shape=record label="{BLOCK #R4|2# LocalReferenceOperation / IdentifierNameSyntax: i|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i++|0# ExpressionStatementOperation / PostfixUnaryExpressionSyntax: i++|##########}"]
R3 -> R4
}
R0 [shape=record label="{ENTRY #R0}"]
R5 [shape=record label="{EXIT #R5}"]
R2 -> R5 [label="WhenFalse"]
}
}
