// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22ForEach%22+%7B%0D%0Asubgraph+%22cluster_Sonar.ForEach%22+%7B%0Alabel+%3D+%22Sonar.ForEach%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BFOREACH%3AForEachStatement%7CImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7CLiteralExpressionSyntax%3A+0%7CLiteralExpressionSyntax%3A+1%7CLiteralExpressionSyntax%3A+2%7CLiteralExpressionSyntax%3A+4%7CLiteralExpressionSyntax%3A+8%7CLiteralExpressionSyntax%3A+16%7CInitializerExpressionSyntax%3A+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AForEachStatement%7D%22%5D%0D%0A1+-%3E+2+%5Blabel%3D%22True%22%5D%0D%0A1+-%3E+3+%5Blabel%3D%22False%22%5D%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+i%7CMemberAccessExpressionSyntax%3A+i.ToString%7CInvocationExpressionSyntax%3A+i.ToString()%7CVariableDeclaratorSyntax%3A+value+%3D+i.ToString()%7D%22%5D%0D%0A2+-%3E+1%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.ForEach%22+%7B%0Alabel+%3D+%22Roslyn.ForEach%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+i.ToString()%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+i%7C1%23+InvocationOperation.ToString+%2F+InvocationExpressionSyntax%3A+i.ToString()%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+i.ToString()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+R4%0D%0A%7D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+var%7C3%23+FlowCaptureReferenceOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C2%23+PropertyReferenceOperation+%2F+IdentifierNameSyntax%3A+var%7C1%23+ConversionOperation+%2F+IdentifierNameSyntax%3A+var%7C0%23+SimpleAssignmentOperation+%2F+IdentifierNameSyntax%3A+var%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR2+-%3E+R3+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C0%23+InvocationOperation.MoveNext+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2%0D%0AR4+-%3E+R2%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R5%7C2%23+FlowCaptureReferenceOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C1%23+ConversionOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C0%23+FlowCaptureOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C0%23+IsNullOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R6%7C1%23+FlowCaptureReferenceOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C0%23+InvocationOperation.Dispose+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5+-%3E+R6+%5Blabel%3D%22Else%22%5D%0D%0AR7+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R7%7D%22%5D%0D%0AR5+-%3E+R7+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR6+-%3E+R7%0D%0AR7+-%3E+NoDestinationR7+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C4%23+LiteralOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C5%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C5%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C5%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+2%7C5%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+4%7C5%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+8%7C5%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+16%7C4%23+ArrayInitializerOperation+%2F+InitializerExpressionSyntax%3A+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C3%23+ArrayCreationOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C2%23+ConversionOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C1%23+InvocationOperation.GetEnumerator+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C0%23+FlowCaptureOperation+%2F+ImplicitArrayCreationExpressionSyntax%3A+new%5B%5D+%5C%7B+0%2C+1%2C+2%2C+4%2C+8%2C+16+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR8+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R8%7D%22%5D%0D%0AR2+-%3E+R8+%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void ForEach()
    {
        foreach(var i in new[] { 0, 1, 2, 4, 8, 16 })
        {
            var value = i.ToString();
        }
    }
*/

digraph "ForEach" {
subgraph "cluster_Sonar.ForEach" {
label = "Sonar.ForEach"
0 [shape=record label="{FOREACH:ForEachStatement|ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|LiteralExpressionSyntax: 0|LiteralExpressionSyntax: 1|LiteralExpressionSyntax: 2|LiteralExpressionSyntax: 4|LiteralExpressionSyntax: 8|LiteralExpressionSyntax: 16|InitializerExpressionSyntax: \{ 0, 1, 2, 4, 8, 16 \}}"]
0 -> 1
1 [shape=record label="{BINARY:ForEachStatement}"]
1 -> 2 [label="True"]
1 -> 3 [label="False"]
2 [shape=record label="{SIMPLE|IdentifierNameSyntax: i|MemberAccessExpressionSyntax: i.ToString|InvocationExpressionSyntax: i.ToString()|VariableDeclaratorSyntax: value = i.ToString()}"]
2 -> 1
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.ForEach" {
label = "Roslyn.ForEach"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R4 [shape=record label="{BLOCK #R4|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = i.ToString()|2# LocalReferenceOperation / IdentifierNameSyntax: i|1# InvocationOperation.ToString / InvocationExpressionSyntax: i.ToString()|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = i.ToString()|##########}"]
R3 -> R4
}
R3 [shape=record label="{BLOCK #R3|1# LocalReferenceOperation / IdentifierNameSyntax: var|3# FlowCaptureReferenceOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|2# PropertyReferenceOperation / IdentifierNameSyntax: var|1# ConversionOperation / IdentifierNameSyntax: var|0# SimpleAssignmentOperation / IdentifierNameSyntax: var|##########}"]
R2 -> R3 [label="Else"]
}
R2 [shape=record label="{BLOCK #R2|## BranchValue ##|1# FlowCaptureReferenceOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|0# InvocationOperation.MoveNext / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|##########}"]
R1 -> R2
R4 -> R2
}
subgraph "cluster_Finally region" {
label = "Finally region"
R5 [shape=record label="{BLOCK #R5|2# FlowCaptureReferenceOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|1# ConversionOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|0# FlowCaptureOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|##########|## BranchValue ##|1# FlowCaptureReferenceOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|0# IsNullOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|##########}"]
R6 [shape=record label="{BLOCK #R6|1# FlowCaptureReferenceOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|0# InvocationOperation.Dispose / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|##########}"]
R5 -> R6 [label="Else"]
R7 [shape=record label="{BLOCK #R7}"]
R5 -> R7 [label="WhenTrue"]
R6 -> R7
R7 -> NoDestinationR7 [label="StructuredExceptionHandling"]
}
}
R1 [shape=record label="{BLOCK #R1|4# LiteralOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|5# LiteralOperation / LiteralExpressionSyntax: 0|5# LiteralOperation / LiteralExpressionSyntax: 1|5# LiteralOperation / LiteralExpressionSyntax: 2|5# LiteralOperation / LiteralExpressionSyntax: 4|5# LiteralOperation / LiteralExpressionSyntax: 8|5# LiteralOperation / LiteralExpressionSyntax: 16|4# ArrayInitializerOperation / InitializerExpressionSyntax: \{ 0, 1, 2, 4, 8, 16 \}|3# ArrayCreationOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|2# ConversionOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|1# InvocationOperation.GetEnumerator / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|0# FlowCaptureOperation / ImplicitArrayCreationExpressionSyntax: new[] \{ 0, 1, 2, 4, 8, 16 \}|##########}"]
R0 -> R1
}
R0 [shape=record label="{ENTRY #R0}"]
R8 [shape=record label="{EXIT #R8}"]
R2 -> R8 [label="WhenFalse"]
}
}
