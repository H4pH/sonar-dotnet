// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22DoWhile%22+%7B%0D%0Asubgraph+%22cluster_Sonar.DoWhile%22+%7B%0Alabel+%3D+%22Sonar.DoWhile%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+null%7CVariableDeclaratorSyntax%3A+value+%3D+null%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CLiteralExpressionSyntax%3A+%5C%22Value%5C%22%7CAssignmentExpressionSyntax%3A+value+%3D+%5C%22Value%5C%22%7D%22%5D%0D%0A1+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BBINARY%3AEqualsExpression%7CIdentifierNameSyntax%3A+value%7CLiteralExpressionSyntax%3A+null%7CBinaryExpressionSyntax%3A+value+%3D%3D+null%7D%22%5D%0D%0A2+-%3E+1+%5Blabel%3D%22True%22%5D%0D%0A2+-%3E+3+%5Blabel%3D%22False%22%5D%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.DoWhile%22+%7B%0Alabel+%3D+%22Roslyn.DoWhile%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+null%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+null%7C1%23+ConversionOperation+%2F+LiteralExpressionSyntax%3A+null%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Value%5C%22%7C1%23+SimpleAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+value+%3D+%5C%22Value%5C%22%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+value+%3D+%5C%22Value%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+value%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+null%7C1%23+ConversionOperation+%2F+LiteralExpressionSyntax%3A+null%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+value+%3D%3D+null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2%0D%0AR2+-%3E+R2+%5Blabel%3D%22WhenTrue%22%5D%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R3%7D%22%5D%0D%0AR2+-%3E+R3+%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void DoWhile()
    {
        string value = null;
        do
        {
            value = "Value";
        } while (value == null);
    }
*/

digraph "DoWhile" {
subgraph "cluster_Sonar.DoWhile" {
label = "Sonar.DoWhile"
0 [shape=record label="{SIMPLE|LiteralExpressionSyntax: null|VariableDeclaratorSyntax: value = null}"]
0 -> 1
1 [shape=record label="{SIMPLE|LiteralExpressionSyntax: \"Value\"|AssignmentExpressionSyntax: value = \"Value\"}"]
1 -> 2
2 [shape=record label="{BINARY:EqualsExpression|IdentifierNameSyntax: value|LiteralExpressionSyntax: null|BinaryExpressionSyntax: value == null}"]
2 -> 1 [label="True"]
2 -> 3 [label="False"]
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.DoWhile" {
label = "Roslyn.DoWhile"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = null|2# LiteralOperation / LiteralExpressionSyntax: null|1# ConversionOperation / LiteralExpressionSyntax: null|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = null|##########}"]
R0 -> R1
R2 [shape=record label="{BLOCK #R2|2# LocalReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: \"Value\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: value = \"Value\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: value = \"Value\";|##########|## BranchValue ##|1# LocalReferenceOperation / IdentifierNameSyntax: value|2# LiteralOperation / LiteralExpressionSyntax: null|1# ConversionOperation / LiteralExpressionSyntax: null|0# BinaryOperation / BinaryExpressionSyntax: value == null|##########}"]
R1 -> R2
R2 -> R2 [label="WhenTrue"]
}
R0 [shape=record label="{ENTRY #R0}"]
R3 [shape=record label="{EXIT #R3}"]
R2 -> R3 [label="Else"]
}
}
