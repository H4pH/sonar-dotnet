digraph "Roslyn.For" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|1# LocalReferenceOperation / VariableDeclaratorSyntax: i = 0|1# LiteralOperation / LiteralExpressionSyntax: 0|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: i = 0|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|## BranchValue ##|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 10|0# BinaryOperation / BinaryExpressionSyntax: i \< 10|##########}"]
1 -> 2
4 -> 2
3 [shape=record label="{BLOCK #3|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = \"Value\"|1# LiteralOperation / LiteralExpressionSyntax: \"Value\"|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = \"Value\"|##########}"]
2 -> 3 [label="Else"]
4 [shape=record label="{BLOCK #4|2# LocalReferenceOperation / IdentifierNameSyntax: i|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i++|0# ExpressionStatementOperation / PostfixUnaryExpressionSyntax: i++|##########}"]
3 -> 4
5 [shape=record label="{EXIT #5}"]
2 -> 5 [label="WhenFalse"]
}
