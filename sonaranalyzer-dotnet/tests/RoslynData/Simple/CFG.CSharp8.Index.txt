// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22Index%22+%7B%0D%0Asubgraph+%22cluster_Sonar.Index%22+%7B%0Alabel+%3D+%22Sonar.Index%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+arr%7CPrefixUnaryExpressionSyntax%3A+%5E1%7CElementAccessExpressionSyntax%3A+arr%5B%5E1%5D%7CVariableDeclaratorSyntax%3A+value+%3D+arr%5B%5E1%5D%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.Index%22+%7B%0Alabel+%3D+%22Roslyn.Index%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+arr%5B%5E1%5D%7C2%23+ParameterReferenceOperation+%2F+IdentifierNameSyntax%3A+arr%7C3%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C2%23+UnaryOperation+%2F+PrefixUnaryExpressionSyntax%3A+%5E1%7C1%23+ArrayElementReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+arr%5B%5E1%5D%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+value+%3D+arr%5B%5E1%5D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R2%7D%22%5D%0D%0AR1+-%3E+R2%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void Index(string[] arr)
    {
        var value = arr[^1];
    }
*/

digraph "Index" {
subgraph "cluster_Sonar.Index" {
label = "Sonar.Index"
0 [shape=record label="{SIMPLE|IdentifierNameSyntax: arr|PrefixUnaryExpressionSyntax: ^1|ElementAccessExpressionSyntax: arr[^1]|VariableDeclaratorSyntax: value = arr[^1]}"]
0 -> 1
1 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.Index" {
label = "Roslyn.Index"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
R1 [shape=record label="{BLOCK #R1|1# LocalReferenceOperation / VariableDeclaratorSyntax: value = arr[^1]|2# ParameterReferenceOperation / IdentifierNameSyntax: arr|3# LiteralOperation / LiteralExpressionSyntax: 1|2# UnaryOperation / PrefixUnaryExpressionSyntax: ^1|1# ArrayElementReferenceOperation / ElementAccessExpressionSyntax: arr[^1]|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: value = arr[^1]|##########}"]
R0 -> R1
}
R0 [shape=record label="{ENTRY #R0}"]
R2 [shape=record label="{EXIT #R2}"]
R1 -> R2
}
}
