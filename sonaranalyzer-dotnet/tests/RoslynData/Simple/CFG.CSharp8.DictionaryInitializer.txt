// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22DictionaryInitializer%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.DictionaryInitializer%22%20%7B%0Alabel%20%3D%20%22Sonar.DictionaryInitializer%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7CLiteralExpressionSyntax%3A%20%5C%22a%5C%22%7CLiteralExpressionSyntax%3A%201%7CInitializerExpressionSyntax%3A%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%7CLiteralExpressionSyntax%3A%20%5C%22b%5C%22%7CLiteralExpressionSyntax%3A%202%7CInitializerExpressionSyntax%3A%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%7CInitializerExpressionSyntax%3A%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7CVariableDeclaratorSyntax%3A%20dict%20%3D%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7CIdentifierNameSyntax%3A%20dict%7CLiteralExpressionSyntax%3A%20%5C%22a%5C%22%7CElementAccessExpressionSyntax%3A%20dict%5B%5C%22a%5C%22%5D%7CLiteralExpressionSyntax%3A%2042%7CAssignmentExpressionSyntax%3A%20dict%5B%5C%22a%5C%22%5D%20%3D%2042%7D%22%5D%0D%0A0%20-%3E%201%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.DictionaryInitializer%22%20%7B%0Alabel%20%3D%20%22Roslyn.DictionaryInitializer%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C1%23%20ObjectCreationOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C0%23%20FlowCaptureOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22a%5C%22%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22a%5C%22%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C0%23%20InvocationOperation.Add%20%2F%20InitializerExpressionSyntax%3A%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C1%23%20FlowCaptureReferenceOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22b%5C%22%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22b%5C%22%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%202%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%202%7C0%23%20InvocationOperation.Add%20%2F%20InitializerExpressionSyntax%3A%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20dict%20%3D%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C1%23%20FlowCaptureReferenceOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20dict%20%3D%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0A%7D%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root2%7C3%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20dict%7C4%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22a%5C%22%7C3%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22a%5C%22%7C2%23%20PropertyReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20dict%5B%5C%22a%5C%22%5D%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%2042%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20dict%5B%5C%22a%5C%22%5D%20%3D%2042%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20dict%5B%5C%22a%5C%22%5D%20%3D%2042%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0A%7D%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root3%7D%22%5D%0D%0ARoot2%20-%3E%20Root3%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void DictionaryInitializer()
    {
        var dict = new Dictionary<string, int>() { { "a", 1 }, { "b", 2 } };
        dict["a"] = 42;
    }
*/

digraph "DictionaryInitializer" {
subgraph "cluster_Sonar.DictionaryInitializer" {
label = "Sonar.DictionaryInitializer"
0 [shape=record label="{SIMPLE|ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|LiteralExpressionSyntax: \"a\"|LiteralExpressionSyntax: 1|InitializerExpressionSyntax: \{ \"a\", 1 \}|LiteralExpressionSyntax: \"b\"|LiteralExpressionSyntax: 2|InitializerExpressionSyntax: \{ \"b\", 2 \}|InitializerExpressionSyntax: \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|IdentifierNameSyntax: dict|LiteralExpressionSyntax: \"a\"|ElementAccessExpressionSyntax: dict[\"a\"]|LiteralExpressionSyntax: 42|AssignmentExpressionSyntax: dict[\"a\"] = 42}"]
0 -> 1
1 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.DictionaryInitializer" {
label = "Roslyn.DictionaryInitializer"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root1 [shape=record label="{BLOCK #Root1|1# ObjectCreationOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|0# FlowCaptureOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|##########|1# FlowCaptureReferenceOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|2# LiteralOperation / LiteralExpressionSyntax: \"a\"|1# ArgumentOperation / LiteralExpressionSyntax: \"a\"|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ArgumentOperation / LiteralExpressionSyntax: 1|0# InvocationOperation.Add / InitializerExpressionSyntax: \{ \"a\", 1 \}|##########|1# FlowCaptureReferenceOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|2# LiteralOperation / LiteralExpressionSyntax: \"b\"|1# ArgumentOperation / LiteralExpressionSyntax: \"b\"|2# LiteralOperation / LiteralExpressionSyntax: 2|1# ArgumentOperation / LiteralExpressionSyntax: 2|0# InvocationOperation.Add / InitializerExpressionSyntax: \{ \"b\", 2 \}|##########|1# LocalReferenceOperation / VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# FlowCaptureReferenceOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|##########}"]
Root0 -> Root1
}
Root2 [shape=record label="{BLOCK #Root2|3# LocalReferenceOperation / IdentifierNameSyntax: dict|4# LiteralOperation / LiteralExpressionSyntax: \"a\"|3# ArgumentOperation / ArgumentSyntax: \"a\"|2# PropertyReferenceOperation / ElementAccessExpressionSyntax: dict[\"a\"]|2# LiteralOperation / LiteralExpressionSyntax: 42|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: dict[\"a\"] = 42|0# ExpressionStatementOperation / ExpressionStatementSyntax: dict[\"a\"] = 42;|##########}"]
Root1 -> Root2
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root3 [shape=record label="{EXIT #Root3}"]
Root2 -> Root3
}
}
