// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22DictionaryInitializer%22+%7B%0D%0Asubgraph+%22cluster_Sonar.DictionaryInitializer%22+%7B%0Alabel+%3D+%22Sonar.DictionaryInitializer%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CObjectCreationExpressionSyntax%3A+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7CLiteralExpressionSyntax%3A+%5C%22a%5C%22%7CLiteralExpressionSyntax%3A+1%7CInitializerExpressionSyntax%3A+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%7CLiteralExpressionSyntax%3A+%5C%22b%5C%22%7CLiteralExpressionSyntax%3A+2%7CInitializerExpressionSyntax%3A+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D%7CInitializerExpressionSyntax%3A+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7CVariableDeclaratorSyntax%3A+dict+%3D+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7CIdentifierNameSyntax%3A+dict%7CLiteralExpressionSyntax%3A+%5C%22a%5C%22%7CElementAccessExpressionSyntax%3A+dict%5B%5C%22a%5C%22%5D%7CLiteralExpressionSyntax%3A+42%7CAssignmentExpressionSyntax%3A+dict%5B%5C%22a%5C%22%5D+%3D+42%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.DictionaryInitializer%22+%7B%0Alabel+%3D+%22Roslyn.DictionaryInitializer%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C1%23+ObjectCreationOperation+%2F+ObjectCreationExpressionSyntax%3A+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C0%23+FlowCaptureOperation+%2F+ObjectCreationExpressionSyntax%3A+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+ObjectCreationExpressionSyntax%3A+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22a%5C%22%7C1%23+ArgumentOperation+%2F+LiteralExpressionSyntax%3A+%5C%22a%5C%22%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C1%23+ArgumentOperation+%2F+LiteralExpressionSyntax%3A+1%7C0%23+InvocationOperation.Add+%2F+InitializerExpressionSyntax%3A+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C1%23+FlowCaptureReferenceOperation+%2F+ObjectCreationExpressionSyntax%3A+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22b%5C%22%7C1%23+ArgumentOperation+%2F+LiteralExpressionSyntax%3A+%5C%22b%5C%22%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+2%7C1%23+ArgumentOperation+%2F+LiteralExpressionSyntax%3A+2%7C0%23+InvocationOperation.Add+%2F+InitializerExpressionSyntax%3A+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+dict+%3D+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C1%23+FlowCaptureReferenceOperation+%2F+ObjectCreationExpressionSyntax%3A+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+dict+%3D+new+Dictionary%5C%3Cstring%2C+int%5C%3E()+%5C%7B+%5C%7B+%5C%22a%5C%22%2C+1+%5C%7D%2C+%5C%7B+%5C%22b%5C%22%2C+2+%5C%7D+%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0A%7D%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C3%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+dict%7C4%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22a%5C%22%7C3%23+ArgumentOperation+%2F+ArgumentSyntax%3A+%5C%22a%5C%22%7C2%23+PropertyReferenceOperation+%2F+ElementAccessExpressionSyntax%3A+dict%5B%5C%22a%5C%22%5D%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+42%7C1%23+SimpleAssignmentOperation+%2F+AssignmentExpressionSyntax%3A+dict%5B%5C%22a%5C%22%5D+%3D+42%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+dict%5B%5C%22a%5C%22%5D+%3D+42%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root2%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root3%7D%22%5D%0D%0ARoot2+-%3E+Root3%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void DictionaryInitializer()
    {
        var dict = new Dictionary<string, int>() { { "a", 1 }, { "b", 2 } };
        dict["a"] = 42;
    }
*/

digraph "DictionaryInitializer" {
subgraph "cluster_Sonar.DictionaryInitializer" {
label = "Sonar.DictionaryInitializer"
0 [shape=record label="{SIMPLE|ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|LiteralExpressionSyntax: \"a\"|LiteralExpressionSyntax: 1|InitializerExpressionSyntax: \{ \"a\", 1 \}|LiteralExpressionSyntax: \"b\"|LiteralExpressionSyntax: 2|InitializerExpressionSyntax: \{ \"b\", 2 \}|InitializerExpressionSyntax: \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|IdentifierNameSyntax: dict|LiteralExpressionSyntax: \"a\"|ElementAccessExpressionSyntax: dict[\"a\"]|LiteralExpressionSyntax: 42|AssignmentExpressionSyntax: dict[\"a\"] = 42}"]
0 -> 1
1 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.DictionaryInitializer" {
label = "Roslyn.DictionaryInitializer"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root1 [shape=record label="{BLOCK #Root1|1# ObjectCreationOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|0# FlowCaptureOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|##########|1# FlowCaptureReferenceOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|2# LiteralOperation / LiteralExpressionSyntax: \"a\"|1# ArgumentOperation / LiteralExpressionSyntax: \"a\"|2# LiteralOperation / LiteralExpressionSyntax: 1|1# ArgumentOperation / LiteralExpressionSyntax: 1|0# InvocationOperation.Add / InitializerExpressionSyntax: \{ \"a\", 1 \}|##########|1# FlowCaptureReferenceOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|2# LiteralOperation / LiteralExpressionSyntax: \"b\"|1# ArgumentOperation / LiteralExpressionSyntax: \"b\"|2# LiteralOperation / LiteralExpressionSyntax: 2|1# ArgumentOperation / LiteralExpressionSyntax: 2|0# InvocationOperation.Add / InitializerExpressionSyntax: \{ \"b\", 2 \}|##########|1# LocalReferenceOperation / VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# FlowCaptureReferenceOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|##########}"]
Root0 -> Root1
}
Root2 [shape=record label="{BLOCK #Root2|3# LocalReferenceOperation / IdentifierNameSyntax: dict|4# LiteralOperation / LiteralExpressionSyntax: \"a\"|3# ArgumentOperation / ArgumentSyntax: \"a\"|2# PropertyReferenceOperation / ElementAccessExpressionSyntax: dict[\"a\"]|2# LiteralOperation / LiteralExpressionSyntax: 42|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: dict[\"a\"] = 42|0# ExpressionStatementOperation / ExpressionStatementSyntax: dict[\"a\"] = 42;|##########}"]
Root1 -> Root2
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root3 [shape=record label="{EXIT #Root3}"]
Root2 -> Root3
}
}
