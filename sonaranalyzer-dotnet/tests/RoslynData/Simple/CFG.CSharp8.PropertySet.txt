// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22PropertySet%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.PropertySet%22%20%7B%0Alabel%20%3D%20%22Sonar.PropertySet%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20b%7CMemberAccessExpressionSyntax%3A%20b.Property%7CLiteralExpressionSyntax%3A%20%5C%22Value%5C%22%7CAssignmentExpressionSyntax%3A%20b.Property%20%3D%20%5C%22Value%5C%22%7D%22%5D%0D%0A0%20-%3E%201%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.PropertySet%22%20%7B%0Alabel%20%3D%20%22Roslyn.PropertySet%22%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C3%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C2%23%20PropertyReferenceOperation%20%2F%20MemberAccessExpressionSyntax%3A%20b.Property%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Value%5C%22%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20b.Property%20%3D%20%5C%22Value%5C%22%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20b.Property%20%3D%20%5C%22Value%5C%22%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root2%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void PropertySet(EmptyBase b)
    {
        b.Property = "Value";
    }
*/

digraph "PropertySet" {
subgraph "cluster_Sonar.PropertySet" {
label = "Sonar.PropertySet"
0 [shape=record label="{SIMPLE|IdentifierNameSyntax: b|MemberAccessExpressionSyntax: b.Property|LiteralExpressionSyntax: \"Value\"|AssignmentExpressionSyntax: b.Property = \"Value\"}"]
0 -> 1
1 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.PropertySet" {
label = "Roslyn.PropertySet"
Root0 [shape=record label="{ENTRY #Root0}"]
Root1 [shape=record label="{BLOCK #Root1|3# ParameterReferenceOperation / IdentifierNameSyntax: b|2# PropertyReferenceOperation / MemberAccessExpressionSyntax: b.Property|2# LiteralOperation / LiteralExpressionSyntax: \"Value\"|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: b.Property = \"Value\"|0# ExpressionStatementOperation / ExpressionStatementSyntax: b.Property = \"Value\";|##########}"]
Root0 -> Root1
Root2 [shape=record label="{EXIT #Root2}"]
Root1 -> Root2
}
}
