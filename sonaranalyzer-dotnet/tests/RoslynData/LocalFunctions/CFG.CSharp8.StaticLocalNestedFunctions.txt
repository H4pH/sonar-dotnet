// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22StaticLocalNestedFunctions%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.StaticLocalNestedFunctions%22%20%7B%0Alabel%20%3D%20%22Sonar.StaticLocalNestedFunctions%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20Compute%7CLiteralExpressionSyntax%3A%201%7CLiteralExpressionSyntax%3A%202%7CInvocationExpressionSyntax%3A%20Compute(1%2C%202)%7CVariableDeclaratorSyntax%3A%20result%20%3D%20Compute(1%2C%202)%7D%22%5D%0D%0A0%20-%3E%201%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.StaticLocalNestedFunctions%22%20%7B%0Alabel%20%3D%20%22Roslyn.StaticLocalNestedFunctions%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20result%20%3D%20Compute(1%2C%202)%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%201%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%202%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%202%7C1%23%20InvocationOperation.Compute%20%2F%20InvocationExpressionSyntax%3A%20Compute(1%2C%202)%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20result%20%3D%20Compute(1%2C%202)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0A%7D%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root2%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0Asubgraph%20%22cluster_Roslyn.StaticLocalNestedFunctions.Compute%22%20%7B%0Alabel%20%3D%20%22Roslyn.StaticLocalNestedFunctions.Compute%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0AA1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23A1%7C%23%23%20BranchValue%20%23%23%7C2%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C1%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20a%7C2%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C1%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20b%7C0%23%20InvocationOperation.ComputeNested%20%2F%20InvocationExpressionSyntax%3A%20ComputeNested(a%2C%20b)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AA0%20-%3E%20A1%0D%0A%7D%0D%0AA0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23A0%7D%22%5D%0D%0AA2%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23A2%7D%22%5D%0D%0AA1%20-%3E%20A2%20%5Blabel%3D%22Return%22%5D%0D%0Asubgraph%20%22cluster_Roslyn.StaticLocalNestedFunctions.Compute.ComputeNested%22%20%7B%0Alabel%20%3D%20%22Roslyn.StaticLocalNestedFunctions.Compute.ComputeNested%22%0D%0AB0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23B0%7D%22%5D%0D%0AB1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23B1%7C%23%23%20BranchValue%20%23%23%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20c%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20d%7C0%23%20BinaryOperation%20%2F%20BinaryExpressionSyntax%3A%20c%20%2B%20d%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AB0%20-%3E%20B1%0D%0AB2%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23B2%7D%22%5D%0D%0AB1%20-%3E%20B2%20%5Blabel%3D%22Return%22%5D%0D%0A%7D%0D%0A%7D%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void StaticLocalNestedFunctions()
        {
            var result = Compute(1, 2);

            static int Compute(int a, int b)
            {
                return ComputeNested(a, b);

                static int ComputeNested(int c, int d)
                {
                    return c + d;
                }
            }
        }
*/

digraph "StaticLocalNestedFunctions" {
subgraph "cluster_Sonar.StaticLocalNestedFunctions" {
label = "Sonar.StaticLocalNestedFunctions"
0 [shape=record label="{SIMPLE|IdentifierNameSyntax: Compute|LiteralExpressionSyntax: 1|LiteralExpressionSyntax: 2|InvocationExpressionSyntax: Compute(1, 2)|VariableDeclaratorSyntax: result = Compute(1, 2)}"]
0 -> 1
1 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.StaticLocalNestedFunctions" {
label = "Roslyn.StaticLocalNestedFunctions"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
Root1 [shape=record label="{BLOCK #Root1|1# LocalReferenceOperation / VariableDeclaratorSyntax: result = Compute(1, 2)|3# LiteralOperation / LiteralExpressionSyntax: 1|2# ArgumentOperation / ArgumentSyntax: 1|3# LiteralOperation / LiteralExpressionSyntax: 2|2# ArgumentOperation / ArgumentSyntax: 2|1# InvocationOperation.Compute / InvocationExpressionSyntax: Compute(1, 2)|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: result = Compute(1, 2)|##########}"]
Root0 -> Root1
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root2 [shape=record label="{EXIT #Root2}"]
Root1 -> Root2
subgraph "cluster_Roslyn.StaticLocalNestedFunctions.Compute" {
label = "Roslyn.StaticLocalNestedFunctions.Compute"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
A1 [shape=record label="{BLOCK #A1|## BranchValue ##|2# ParameterReferenceOperation / IdentifierNameSyntax: a|1# ArgumentOperation / ArgumentSyntax: a|2# ParameterReferenceOperation / IdentifierNameSyntax: b|1# ArgumentOperation / ArgumentSyntax: b|0# InvocationOperation.ComputeNested / InvocationExpressionSyntax: ComputeNested(a, b)|##########}"]
A0 -> A1
}
A0 [shape=record label="{ENTRY #A0}"]
A2 [shape=record label="{EXIT #A2}"]
A1 -> A2 [label="Return"]
subgraph "cluster_Roslyn.StaticLocalNestedFunctions.Compute.ComputeNested" {
label = "Roslyn.StaticLocalNestedFunctions.Compute.ComputeNested"
B0 [shape=record label="{ENTRY #B0}"]
B1 [shape=record label="{BLOCK #B1|## BranchValue ##|1# ParameterReferenceOperation / IdentifierNameSyntax: c|1# ParameterReferenceOperation / IdentifierNameSyntax: d|0# BinaryOperation / BinaryExpressionSyntax: c + d|##########}"]
B0 -> B1
B2 [shape=record label="{EXIT #B2}"]
B1 -> B2 [label="Return"]
}
}
}
}
