digraph "Roslyn.TryMultiCatchFinally" {
0 [shape=record label="{ENTRY #0}"]
1 [shape=record label="{BLOCK #1|2# InstanceReferenceOperation / IdentifierNameSyntax: A|1# InvocationOperation / InvocationExpressionSyntax: A()|0# ExpressionStatementOperation / ExpressionStatementSyntax: A();|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: B|1# InvocationOperation / InvocationExpressionSyntax: B()|0# ExpressionStatementOperation / ExpressionStatementSyntax: B();|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: C|1# InvocationOperation / InvocationExpressionSyntax: C()|0# ExpressionStatementOperation / ExpressionStatementSyntax: C();|##########}"]
0 -> 1
2 [shape=record label="{BLOCK #2|1# LocalReferenceOperation / CatchDeclarationSyntax: (FormatException ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (FormatException ex)|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (FormatException ex)|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: Handle|4# LocalReferenceOperation / IdentifierNameSyntax: ex|3# ConversionOperation / IdentifierNameSyntax: ex|2# ArgumentOperation / ArgumentSyntax: ex|1# InvocationOperation / InvocationExpressionSyntax: Handle(ex)|0# ExpressionStatementOperation / ExpressionStatementSyntax: Handle(ex);|##########}"]
3 [shape=record label="{BLOCK #3|1# LocalReferenceOperation / CatchDeclarationSyntax: (ArgumentNullException ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (ArgumentNullException ex)|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (ArgumentNullException ex)|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: Handle|4# LocalReferenceOperation / IdentifierNameSyntax: ex|3# ConversionOperation / IdentifierNameSyntax: ex|2# ArgumentOperation / ArgumentSyntax: ex|1# InvocationOperation / InvocationExpressionSyntax: Handle(ex)|0# ExpressionStatementOperation / ExpressionStatementSyntax: Handle(ex);|##########}"]
4 [shape=record label="{BLOCK #4|1# LocalReferenceOperation / CatchDeclarationSyntax: (Exception ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (Exception ex)|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (Exception ex)|##########|## BranchValue ##|2# LocalReferenceOperation / IdentifierNameSyntax: ex|1# PropertyReferenceOperation / MemberAccessExpressionSyntax: ex.Message|2# LiteralOperation / LiteralExpressionSyntax: \"memory\"|1# ArgumentOperation / ArgumentSyntax: \"memory\"|0# InvocationOperation / InvocationExpressionSyntax: ex.Message.Contains(\"memory\")|##########}"]
5 [shape=record label="{BLOCK #5|2# InstanceReferenceOperation / IdentifierNameSyntax: Handle|3# LocalReferenceOperation / IdentifierNameSyntax: ex|2# ArgumentOperation / ArgumentSyntax: ex|1# InvocationOperation / InvocationExpressionSyntax: Handle(ex)|0# ExpressionStatementOperation / ExpressionStatementSyntax: Handle(ex);|##########}"]
4 -> 5 [label="WhenTrue"]
6 [shape=record label="{BLOCK #6|1# LocalReferenceOperation / CatchDeclarationSyntax: (Exception ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (Exception ex)|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (Exception ex)|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: Handle|3# LocalReferenceOperation / IdentifierNameSyntax: ex|2# ArgumentOperation / ArgumentSyntax: ex|1# InvocationOperation / InvocationExpressionSyntax: Handle(ex)|0# ExpressionStatementOperation / ExpressionStatementSyntax: Handle(ex);|##########}"]
7 [shape=record label="{BLOCK #7|2# InstanceReferenceOperation / IdentifierNameSyntax: F|1# InvocationOperation / InvocationExpressionSyntax: F()|0# ExpressionStatementOperation / ExpressionStatementSyntax: F();|##########}"]
8 [shape=record label="{EXIT #8}"]
1 -> 8
2 -> 8
3 -> 8
5 -> 8
6 -> 8
}
