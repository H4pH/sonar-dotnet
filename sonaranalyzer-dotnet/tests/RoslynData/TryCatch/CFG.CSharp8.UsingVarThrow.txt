// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22UsingVarThrow%22%20%7B%0D%0Asubgraph%20%22cluster_Sonar.UsingVarThrow%22%20%7B%0Alabel%20%3D%20%22Sonar.UsingVarThrow%22%0D%0A0%20%5Bshape%3Drecord%20label%3D%22%7BJUMP%3AThrowStatement%7CObjectCreationExpressionSyntax%3A%20new%20MemoryStream()%7CVariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7CIdentifierNameSyntax%3A%20ms%7CMemberAccessExpressionSyntax%3A%20ms.Write%7CLiteralExpressionSyntax%3A%20null%7CLiteralExpressionSyntax%3A%200%7CLiteralExpressionSyntax%3A%200%7CInvocationExpressionSyntax%3A%20ms.Write(null%2C%200%2C%200)%7CLiteralExpressionSyntax%3A%20%5C%22Message%5C%22%7CObjectCreationExpressionSyntax%3A%20new%20Exception(%5C%22Message%5C%22)%7D%22%5D%0D%0A0%20-%3E%201%0D%0A2%20%5Bshape%3Drecord%20label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A%20ms%7CMemberAccessExpressionSyntax%3A%20ms.Write%7CLiteralExpressionSyntax%3A%20null%7CLiteralExpressionSyntax%3A%201%7CLiteralExpressionSyntax%3A%201%7CInvocationExpressionSyntax%3A%20ms.Write(null%2C%201%2C%201)%7D%22%5D%0D%0A2%20-%3E%201%0D%0A1%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Roslyn.UsingVarThrow%22%20%7B%0Alabel%20%3D%20%22Roslyn.UsingVarThrow%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_TryAndFinally%20region%22%20%7B%0Alabel%20%3D%20%22TryAndFinally%20region%22%0D%0Asubgraph%20%22cluster_Try%20region%22%20%7B%0Alabel%20%3D%20%22Try%20region%22%0D%0ARoot2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root2%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ms%7C4%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C3%23%20ConversionOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20null%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%200%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%200%7C1%23%20InvocationOperation.Write%20%2F%20InvocationExpressionSyntax%3A%20ms.Write(null%2C%200%2C%200)%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20ms.Write(null%2C%200%2C%200)%3B%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Message%5C%22%7C1%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22Message%5C%22%7C0%23%20ObjectCreationOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Exception(%5C%22Message%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1%20-%3E%20Root2%0D%0ARoot2%20-%3E%20NoDestinationRoot2%20%5Blabel%3D%22Throw%22%5D%0D%0ARoot3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root3%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ms%7C4%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C3%23%20ConversionOperation%20%2F%20LiteralExpressionSyntax%3A%20null%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20null%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%201%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%201%7C1%23%20InvocationOperation.Write%20%2F%20InvocationExpressionSyntax%3A%20ms.Write(null%2C%201%2C%201)%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20ms.Write(null%2C%201%2C%201)%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Finally%20region%22%20%7B%0Alabel%20%3D%20%22Finally%20region%22%0D%0ARoot4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root4%7C%23%23%20BranchValue%20%23%23%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C0%23%20IsNullOperation%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root5%7C2%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C1%23%20ConversionOperation%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C0%23%20InvocationOperation.Dispose%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot4%20-%3E%20Root5%20%5Blabel%3D%22Else%22%5D%0D%0ARoot6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root6%7D%22%5D%0D%0ARoot4%20-%3E%20Root6%20%5Blabel%3D%22WhenTrue%22%5D%0D%0ARoot5%20-%3E%20Root6%0D%0ARoot6%20-%3E%20NoDestinationRoot6%20%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0ARoot1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%23Root1%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C1%23%20ObjectCreationOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20MemoryStream()%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20ms%20%3D%20new%20MemoryStream()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0%20-%3E%20Root1%0D%0A%7D%0D%0ARoot0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%23Root0%7D%22%5D%0D%0ARoot7%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%23Root7%7D%22%5D%0D%0ARoot3%20-%3E%20Root7%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void UsingVarThrow()
    {
        using var ms = new MemoryStream();
        ms.Write(null, 0, 0);
        throw new Exception("Message");
        ms.Write(null, 1, 1);
    }
*/

digraph "UsingVarThrow" {
subgraph "cluster_Sonar.UsingVarThrow" {
label = "Sonar.UsingVarThrow"
0 [shape=record label="{JUMP:ThrowStatement|ObjectCreationExpressionSyntax: new MemoryStream()|VariableDeclaratorSyntax: ms = new MemoryStream()|IdentifierNameSyntax: ms|MemberAccessExpressionSyntax: ms.Write|LiteralExpressionSyntax: null|LiteralExpressionSyntax: 0|LiteralExpressionSyntax: 0|InvocationExpressionSyntax: ms.Write(null, 0, 0)|LiteralExpressionSyntax: \"Message\"|ObjectCreationExpressionSyntax: new Exception(\"Message\")}"]
0 -> 1
2 [shape=record label="{SIMPLE|IdentifierNameSyntax: ms|MemberAccessExpressionSyntax: ms.Write|LiteralExpressionSyntax: null|LiteralExpressionSyntax: 1|LiteralExpressionSyntax: 1|InvocationExpressionSyntax: ms.Write(null, 1, 1)}"]
2 -> 1
1 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.UsingVarThrow" {
label = "Roslyn.UsingVarThrow"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
Root2 [shape=record label="{BLOCK #Root2|2# LocalReferenceOperation / IdentifierNameSyntax: ms|4# LiteralOperation / LiteralExpressionSyntax: null|3# ConversionOperation / LiteralExpressionSyntax: null|2# ArgumentOperation / ArgumentSyntax: null|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ArgumentOperation / ArgumentSyntax: 0|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ArgumentOperation / ArgumentSyntax: 0|1# InvocationOperation.Write / InvocationExpressionSyntax: ms.Write(null, 0, 0)|0# ExpressionStatementOperation / ExpressionStatementSyntax: ms.Write(null, 0, 0);|##########|## BranchValue ##|2# LiteralOperation / LiteralExpressionSyntax: \"Message\"|1# ArgumentOperation / ArgumentSyntax: \"Message\"|0# ObjectCreationOperation / ObjectCreationExpressionSyntax: new Exception(\"Message\")|##########}"]
Root1 -> Root2
Root2 -> NoDestinationRoot2 [label="Throw"]
Root3 [shape=record label="{BLOCK #Root3|2# LocalReferenceOperation / IdentifierNameSyntax: ms|4# LiteralOperation / LiteralExpressionSyntax: null|3# ConversionOperation / LiteralExpressionSyntax: null|2# ArgumentOperation / ArgumentSyntax: null|3# LiteralOperation / LiteralExpressionSyntax: 1|2# ArgumentOperation / ArgumentSyntax: 1|3# LiteralOperation / LiteralExpressionSyntax: 1|2# ArgumentOperation / ArgumentSyntax: 1|1# InvocationOperation.Write / InvocationExpressionSyntax: ms.Write(null, 1, 1)|0# ExpressionStatementOperation / ExpressionStatementSyntax: ms.Write(null, 1, 1);|##########}"]
}
subgraph "cluster_Finally region" {
label = "Finally region"
Root4 [shape=record label="{BLOCK #Root4|## BranchValue ##|1# LocalReferenceOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|0# IsNullOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|##########}"]
Root5 [shape=record label="{BLOCK #Root5|2# LocalReferenceOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|1# ConversionOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|0# InvocationOperation.Dispose / VariableDeclaratorSyntax: ms = new MemoryStream()|##########}"]
Root4 -> Root5 [label="Else"]
Root6 [shape=record label="{BLOCK #Root6}"]
Root4 -> Root6 [label="WhenTrue"]
Root5 -> Root6
Root6 -> NoDestinationRoot6 [label="StructuredExceptionHandling"]
}
}
Root1 [shape=record label="{BLOCK #Root1|1# LocalReferenceOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|1# ObjectCreationOperation / ObjectCreationExpressionSyntax: new MemoryStream()|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|##########}"]
Root0 -> Root1
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root7 [shape=record label="{EXIT #Root7}"]
Root3 -> Root7
}
}
