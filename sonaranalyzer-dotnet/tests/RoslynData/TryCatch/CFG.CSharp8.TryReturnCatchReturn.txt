// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22TryReturnCatchReturn%22+%7B%0D%0Asubgraph+%22cluster_Sonar.TryReturnCatchReturn%22+%7B%0Alabel+%3D+%22Sonar.TryReturnCatchReturn%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3ATryStatement%7D%22%5D%0D%0A0+-%3E+1%0D%0A0+-%3E+2%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AReturnStatement%7CIdentifierNameSyntax%3A+A%7CInvocationExpressionSyntax%3A+A()%7CIdentifierNameSyntax%3A+B%7CInvocationExpressionSyntax%3A+B()%7CIdentifierNameSyntax%3A+C%7CInvocationExpressionSyntax%3A+C()%7CLiteralExpressionSyntax%3A+%5C%22OK%5C%22%7D%22%5D%0D%0A1+-%3E+3%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AReturnStatement%7CLiteralExpressionSyntax%3A+%5C%22Error%3A+%5C%22%7CIdentifierNameSyntax%3A+ex%7CMemberAccessExpressionSyntax%3A+ex.Message%7CBinaryExpressionSyntax%3A+%5C%22Error%3A+%5C%22+%2B+ex.Message%7D%22%5D%0D%0A2+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.TryReturnCatchReturn%22+%7B%0Alabel+%3D+%22Roslyn.TryReturnCatchReturn%22%0D%0Asubgraph+%22cluster_TryAndCatch+region%22+%7B%0Alabel+%3D+%22TryAndCatch+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+A%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+A()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+A()%3B%7C%23%23%23%23%23%23%23%23%23%23%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+B%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+B()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+B()%3B%7C%23%23%23%23%23%23%23%23%23%23%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+C%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+C()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+C()%3B%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C0%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22OK%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0A%7D%0D%0Asubgraph+%22cluster_Catch+region%22+%7B%0Alabel+%3D+%22Catch+region%22%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C1%23+LocalReferenceOperation+%2F+CatchDeclarationSyntax%3A+(Exception+ex)%7C1%23+CaughtExceptionOperation+%2F+CatchDeclarationSyntax%3A+(Exception+ex)%7C0%23+SimpleAssignmentOperation+%2F+CatchDeclarationSyntax%3A+(Exception+ex)%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C1%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Error%3A+%5C%22%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ex%7C1%23+PropertyReferenceOperation+%2F+MemberAccessExpressionSyntax%3A+ex.Message%7C0%23+BinaryOperation+%2F+BinaryExpressionSyntax%3A+%5C%22Error%3A+%5C%22+%2B+ex.Message%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R3%7D%22%5D%0D%0AR1+-%3E+R3%0D%0AR2+-%3E+R3%0D%0A%7D%0D%0A%7D%0D%0A

/*
public string TryReturnCatchReturn()
    {
        try
        {
            A();
            B();
            C();
            return "OK";
        }
        catch (Exception ex)
        {
            return "Error: " + ex.Message;
        }
    }
*/

digraph "TryReturnCatchReturn" {
subgraph "cluster_Sonar.TryReturnCatchReturn" {
label = "Sonar.TryReturnCatchReturn"
0 [shape=record label="{BRANCH:TryStatement}"]
0 -> 1
0 -> 2
1 [shape=record label="{JUMP:ReturnStatement|IdentifierNameSyntax: A|InvocationExpressionSyntax: A()|IdentifierNameSyntax: B|InvocationExpressionSyntax: B()|IdentifierNameSyntax: C|InvocationExpressionSyntax: C()|LiteralExpressionSyntax: \"OK\"}"]
1 -> 3
2 [shape=record label="{JUMP:ReturnStatement|LiteralExpressionSyntax: \"Error: \"|IdentifierNameSyntax: ex|MemberAccessExpressionSyntax: ex.Message|BinaryExpressionSyntax: \"Error: \" + ex.Message}"]
2 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.TryReturnCatchReturn" {
label = "Roslyn.TryReturnCatchReturn"
subgraph "cluster_TryAndCatch region" {
label = "TryAndCatch region"
subgraph "cluster_Try region" {
label = "Try region"
R1 [shape=record label="{BLOCK #R1|2# InstanceReferenceOperation / IdentifierNameSyntax: A|1# InvocationOperation / InvocationExpressionSyntax: A()|0# ExpressionStatementOperation / ExpressionStatementSyntax: A();|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: B|1# InvocationOperation / InvocationExpressionSyntax: B()|0# ExpressionStatementOperation / ExpressionStatementSyntax: B();|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: C|1# InvocationOperation / InvocationExpressionSyntax: C()|0# ExpressionStatementOperation / ExpressionStatementSyntax: C();|##########|## BranchValue ##|0# LiteralOperation / LiteralExpressionSyntax: \"OK\"|##########}"]
R0 -> R1
}
subgraph "cluster_Catch region" {
label = "Catch region"
R2 [shape=record label="{BLOCK #R2|1# LocalReferenceOperation / CatchDeclarationSyntax: (Exception ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (Exception ex)|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (Exception ex)|##########|## BranchValue ##|1# LiteralOperation / LiteralExpressionSyntax: \"Error: \"|2# LocalReferenceOperation / IdentifierNameSyntax: ex|1# PropertyReferenceOperation / MemberAccessExpressionSyntax: ex.Message|0# BinaryOperation / BinaryExpressionSyntax: \"Error: \" + ex.Message|##########}"]
}
}
R0 [shape=record label="{ENTRY #R0}"]
R3 [shape=record label="{EXIT #R3}"]
R1 -> R3
R2 -> R3
}
}
