// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22TryCatchCommonFinally%22+%7B%0D%0Asubgraph+%22cluster_Sonar.TryCatchCommonFinally%22+%7B%0Alabel+%3D+%22Sonar.TryCatchCommonFinally%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3ATryStatement%7CIdentifierNameSyntax%3A+A%7CInvocationExpressionSyntax%3A+A()%7CIdentifierNameSyntax%3A+B%7CInvocationExpressionSyntax%3A+B()%7CIdentifierNameSyntax%3A+C%7CInvocationExpressionSyntax%3A+C()%7D%22%5D%0D%0A0+-%3E+1%0D%0A0+-%3E+2%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+Handle%7CIdentifierNameSyntax%3A+ex%7CInvocationExpressionSyntax%3A+Handle(ex)%7D%22%5D%0D%0A1+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3AFinallyClause%7CIdentifierNameSyntax%3A+F%7CInvocationExpressionSyntax%3A+F()%7D%22%5D%0D%0A2+-%3E+3%0D%0A2+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.TryCatchCommonFinally%22+%7B%0Alabel+%3D+%22Roslyn.TryCatchCommonFinally%22%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0Asubgraph+%22cluster_TryAndCatch+region%22+%7B%0Alabel+%3D+%22TryAndCatch+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+A%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+A()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+A()%3B%7C%23%23%23%23%23%23%23%23%23%23%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+B%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+B()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+B()%3B%7C%23%23%23%23%23%23%23%23%23%23%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+C%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+C()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+C()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0A%7D%0D%0Asubgraph+%22cluster_Catch+region+System.Exception%22+%7B%0Alabel+%3D+%22Catch+region+System.Exception%22%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C1%23+LocalReferenceOperation+%2F+CatchDeclarationSyntax%3A+(Exception+ex)%7C1%23+CaughtExceptionOperation+%2F+CatchDeclarationSyntax%3A+(Exception+ex)%7C0%23+SimpleAssignmentOperation+%2F+CatchDeclarationSyntax%3A+(Exception+ex)%7C%23%23%23%23%23%23%23%23%23%23%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+Handle%7C3%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ex%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+ex%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+Handle(ex)%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+Handle(ex)%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+F%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+F()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+F()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR3+-%3E+NoDestinationR3+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R4%7D%22%5D%0D%0AR1+-%3E+R4%0D%0AR2+-%3E+R4%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void TryCatchCommonFinally()
    {
        try
        {
            A();
            B();
            C();
        }
        catch (Exception ex)
        {
            Handle(ex);
        }
        finally
        {
            F();
        }
    }
*/

digraph "TryCatchCommonFinally" {
subgraph "cluster_Sonar.TryCatchCommonFinally" {
label = "Sonar.TryCatchCommonFinally"
0 [shape=record label="{BRANCH:TryStatement|IdentifierNameSyntax: A|InvocationExpressionSyntax: A()|IdentifierNameSyntax: B|InvocationExpressionSyntax: B()|IdentifierNameSyntax: C|InvocationExpressionSyntax: C()}"]
0 -> 1
0 -> 2
1 [shape=record label="{SIMPLE|IdentifierNameSyntax: Handle|IdentifierNameSyntax: ex|InvocationExpressionSyntax: Handle(ex)}"]
1 -> 2
2 [shape=record label="{BRANCH:FinallyClause|IdentifierNameSyntax: F|InvocationExpressionSyntax: F()}"]
2 -> 3
2 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.TryCatchCommonFinally" {
label = "Roslyn.TryCatchCommonFinally"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
subgraph "cluster_TryAndCatch region" {
label = "TryAndCatch region"
subgraph "cluster_Try region" {
label = "Try region"
R1 [shape=record label="{BLOCK #R1|2# InstanceReferenceOperation / IdentifierNameSyntax: A|1# InvocationOperation / InvocationExpressionSyntax: A()|0# ExpressionStatementOperation / ExpressionStatementSyntax: A();|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: B|1# InvocationOperation / InvocationExpressionSyntax: B()|0# ExpressionStatementOperation / ExpressionStatementSyntax: B();|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: C|1# InvocationOperation / InvocationExpressionSyntax: C()|0# ExpressionStatementOperation / ExpressionStatementSyntax: C();|##########}"]
R0 -> R1
}
subgraph "cluster_Catch region System.Exception" {
label = "Catch region System.Exception"
R2 [shape=record label="{BLOCK #R2|1# LocalReferenceOperation / CatchDeclarationSyntax: (Exception ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (Exception ex)|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (Exception ex)|##########|2# InstanceReferenceOperation / IdentifierNameSyntax: Handle|3# LocalReferenceOperation / IdentifierNameSyntax: ex|2# ArgumentOperation / ArgumentSyntax: ex|1# InvocationOperation / InvocationExpressionSyntax: Handle(ex)|0# ExpressionStatementOperation / ExpressionStatementSyntax: Handle(ex);|##########}"]
}
}
}
subgraph "cluster_Finally region" {
label = "Finally region"
R3 [shape=record label="{BLOCK #R3|2# InstanceReferenceOperation / IdentifierNameSyntax: F|1# InvocationOperation / InvocationExpressionSyntax: F()|0# ExpressionStatementOperation / ExpressionStatementSyntax: F();|##########}"]
R3 -> NoDestinationR3 [label="StructuredExceptionHandling"]
}
}
R0 [shape=record label="{ENTRY #R0}"]
R4 [shape=record label="{EXIT #R4}"]
R1 -> R4
R2 -> R4
}
}
