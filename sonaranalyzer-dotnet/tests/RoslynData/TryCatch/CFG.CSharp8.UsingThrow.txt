// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22UsingThrow%22+%7B%0D%0Asubgraph+%22cluster_Sonar.UsingThrow%22+%7B%0Alabel+%3D+%22Sonar.UsingThrow%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AUsingStatement%7CObjectCreationExpressionSyntax%3A+new+MemoryStream()%7CVariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BJUMP%3AThrowStatement%7CIdentifierNameSyntax%3A+ms%7CMemberAccessExpressionSyntax%3A+ms.Write%7CLiteralExpressionSyntax%3A+null%7CLiteralExpressionSyntax%3A+0%7CLiteralExpressionSyntax%3A+0%7CInvocationExpressionSyntax%3A+ms.Write(null%2C+0%2C+0)%7CLiteralExpressionSyntax%3A+%5C%22Message%5C%22%7CObjectCreationExpressionSyntax%3A+new+Exception(%5C%22Message%5C%22)%7D%22%5D%0D%0A1+-%3E+2%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BUSING%3AUsingStatement%7CIdentifierNameSyntax%3A+ms%7CMemberAccessExpressionSyntax%3A+ms.Write%7CLiteralExpressionSyntax%3A+null%7CLiteralExpressionSyntax%3A+1%7CLiteralExpressionSyntax%3A+1%7CInvocationExpressionSyntax%3A+ms.Write(null%2C+1%2C+1)%7D%22%5D%0D%0A3+-%3E+2%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.UsingThrow%22+%7B%0Alabel+%3D+%22Roslyn.UsingThrow%22%0D%0Asubgraph+%22cluster_LocalLifetime+region%22+%7B%0Alabel+%3D+%22LocalLifetime+region%22%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0AR2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R2%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ms%7C4%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+null%7C3%23+ConversionOperation+%2F+LiteralExpressionSyntax%3A+null%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+null%7C3%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+0%7C3%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+0%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+0%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+ms.Write(null%2C+0%2C+0)%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+ms.Write(null%2C+0%2C+0)%3B%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23+BranchValue+%23%23%7C2%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+%5C%22Message%5C%22%7C1%23+ArgumentOperation+%2F+ArgumentSyntax%3A+%5C%22Message%5C%22%7C0%23+ObjectCreationOperation+%2F+ObjectCreationExpressionSyntax%3A+new+Exception(%5C%22Message%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR1+-%3E+R2%0D%0AR2+-%3E+NoDestinationR2+%5Blabel%3D%22Throw%22%5D%0D%0AR3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R3%7C2%23+LocalReferenceOperation+%2F+IdentifierNameSyntax%3A+ms%7C4%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+null%7C3%23+ConversionOperation+%2F+LiteralExpressionSyntax%3A+null%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+null%7C3%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+1%7C3%23+LiteralOperation+%2F+LiteralExpressionSyntax%3A+1%7C2%23+ArgumentOperation+%2F+ArgumentSyntax%3A+1%7C1%23+InvocationOperation+%2F+InvocationExpressionSyntax%3A+ms.Write(null%2C+1%2C+1)%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+ms.Write(null%2C+1%2C+1)%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0AR4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R4%7C%23%23+BranchValue+%23%23%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C0%23+IsNullOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R5%7C2%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C1%23+ConversionOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C0%23+InvocationOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR4+-%3E+R5+%5Blabel%3D%22Else%22%5D%0D%0AR6+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R6%7D%22%5D%0D%0AR4+-%3E+R6+%5Blabel%3D%22WhenTrue%22%5D%0D%0AR5+-%3E+R6%0D%0AR6+-%3E+NoDestinationR6+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0AR1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23R1%7C1%23+LocalReferenceOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C1%23+ObjectCreationOperation+%2F+ObjectCreationExpressionSyntax%3A+new+MemoryStream()%7C0%23+SimpleAssignmentOperation+%2F+VariableDeclaratorSyntax%3A+ms+%3D+new+MemoryStream()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0AR0+-%3E+R1%0D%0A%7D%0D%0AR0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23R0%7D%22%5D%0D%0AR7+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23R7%7D%22%5D%0D%0AR3+-%3E+R7%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void UsingThrow()
    {
        using (var ms = new MemoryStream())
        {
            ms.Write(null, 0, 0);
            throw new Exception("Message");
            ms.Write(null, 1, 1);
        }
    }
*/

digraph "UsingThrow" {
subgraph "cluster_Sonar.UsingThrow" {
label = "Sonar.UsingThrow"
0 [shape=record label="{JUMP:UsingStatement|ObjectCreationExpressionSyntax: new MemoryStream()|VariableDeclaratorSyntax: ms = new MemoryStream()}"]
0 -> 1
1 [shape=record label="{JUMP:ThrowStatement|IdentifierNameSyntax: ms|MemberAccessExpressionSyntax: ms.Write|LiteralExpressionSyntax: null|LiteralExpressionSyntax: 0|LiteralExpressionSyntax: 0|InvocationExpressionSyntax: ms.Write(null, 0, 0)|LiteralExpressionSyntax: \"Message\"|ObjectCreationExpressionSyntax: new Exception(\"Message\")}"]
1 -> 2
3 [shape=record label="{USING:UsingStatement|IdentifierNameSyntax: ms|MemberAccessExpressionSyntax: ms.Write|LiteralExpressionSyntax: null|LiteralExpressionSyntax: 1|LiteralExpressionSyntax: 1|InvocationExpressionSyntax: ms.Write(null, 1, 1)}"]
3 -> 2
2 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.UsingThrow" {
label = "Roslyn.UsingThrow"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
R2 [shape=record label="{BLOCK #R2|2# LocalReferenceOperation / IdentifierNameSyntax: ms|4# LiteralOperation / LiteralExpressionSyntax: null|3# ConversionOperation / LiteralExpressionSyntax: null|2# ArgumentOperation / ArgumentSyntax: null|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ArgumentOperation / ArgumentSyntax: 0|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ArgumentOperation / ArgumentSyntax: 0|1# InvocationOperation / InvocationExpressionSyntax: ms.Write(null, 0, 0)|0# ExpressionStatementOperation / ExpressionStatementSyntax: ms.Write(null, 0, 0);|##########|## BranchValue ##|2# LiteralOperation / LiteralExpressionSyntax: \"Message\"|1# ArgumentOperation / ArgumentSyntax: \"Message\"|0# ObjectCreationOperation / ObjectCreationExpressionSyntax: new Exception(\"Message\")|##########}"]
R1 -> R2
R2 -> NoDestinationR2 [label="Throw"]
R3 [shape=record label="{BLOCK #R3|2# LocalReferenceOperation / IdentifierNameSyntax: ms|4# LiteralOperation / LiteralExpressionSyntax: null|3# ConversionOperation / LiteralExpressionSyntax: null|2# ArgumentOperation / ArgumentSyntax: null|3# LiteralOperation / LiteralExpressionSyntax: 1|2# ArgumentOperation / ArgumentSyntax: 1|3# LiteralOperation / LiteralExpressionSyntax: 1|2# ArgumentOperation / ArgumentSyntax: 1|1# InvocationOperation / InvocationExpressionSyntax: ms.Write(null, 1, 1)|0# ExpressionStatementOperation / ExpressionStatementSyntax: ms.Write(null, 1, 1);|##########}"]
}
subgraph "cluster_Finally region" {
label = "Finally region"
R4 [shape=record label="{BLOCK #R4|## BranchValue ##|1# LocalReferenceOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|0# IsNullOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|##########}"]
R5 [shape=record label="{BLOCK #R5|2# LocalReferenceOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|1# ConversionOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|0# InvocationOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|##########}"]
R4 -> R5 [label="Else"]
R6 [shape=record label="{BLOCK #R6}"]
R4 -> R6 [label="WhenTrue"]
R5 -> R6
R6 -> NoDestinationR6 [label="StructuredExceptionHandling"]
}
}
R1 [shape=record label="{BLOCK #R1|1# LocalReferenceOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|1# ObjectCreationOperation / ObjectCreationExpressionSyntax: new MemoryStream()|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ms = new MemoryStream()|##########}"]
R0 -> R1
}
R0 [shape=record label="{ENTRY #R0}"]
R7 [shape=record label="{EXIT #R7}"]
R3 -> R7
}
}
