// http://viz-js.com/
// http://magjac.com/graphviz-visual-editor/?dot=digraph+%22TryFinallyTryFinally%22+%7B%0D%0Asubgraph+%22cluster_Sonar.TryFinallyTryFinally%22+%7B%0Alabel+%3D+%22Sonar.TryFinallyTryFinally%22%0D%0A0+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3ATryStatement%7CIdentifierNameSyntax%3A+A%7CInvocationExpressionSyntax%3A+A()%7D%22%5D%0D%0A0+-%3E+1%0D%0A1+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3AFinallyClause%7CIdentifierNameSyntax%3A+F%7CInvocationExpressionSyntax%3A+F()%7D%22%5D%0D%0A1+-%3E+2%0D%0A1+-%3E+3%0D%0A2+%5Bshape%3Drecord+label%3D%22%7BSIMPLE%7CIdentifierNameSyntax%3A+B%7CInvocationExpressionSyntax%3A+B()%7D%22%5D%0D%0A2+-%3E+4%0D%0A4+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3ATryStatement%7CIdentifierNameSyntax%3A+C%7CInvocationExpressionSyntax%3A+C()%7D%22%5D%0D%0A4+-%3E+5%0D%0A5+%5Bshape%3Drecord+label%3D%22%7BBRANCH%3AFinallyClause%7CIdentifierNameSyntax%3A+F%7CInvocationExpressionSyntax%3A+F()%7D%22%5D%0D%0A5+-%3E+3%0D%0A5+-%3E+3%0D%0A3+%5Bshape%3Drecord+label%3D%22%7BEXIT%7D%22%5D%0D%0A%7D%0D%0Asubgraph+%22cluster_Roslyn.TryFinallyTryFinally%22+%7B%0Alabel+%3D+%22Roslyn.TryFinallyTryFinally%22%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0ARoot1+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root1%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+A%7C1%23+InvocationOperation.A+%2F+InvocationExpressionSyntax%3A+A()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+A()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot0+-%3E+Root1%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0ARoot2+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root2%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+F%7C1%23+InvocationOperation.F+%2F+InvocationExpressionSyntax%3A+F()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+F()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot2+-%3E+NoDestinationRoot2+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0Asubgraph+%22cluster_TryAndFinally+region%22+%7B%0Alabel+%3D+%22TryAndFinally+region%22%0D%0Asubgraph+%22cluster_Try+region%22+%7B%0Alabel+%3D+%22Try+region%22%0D%0ARoot4+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root4%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+C%7C1%23+InvocationOperation.C+%2F+InvocationExpressionSyntax%3A+C()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+C()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot3+-%3E+Root4%0D%0A%7D%0D%0Asubgraph+%22cluster_Finally+region%22+%7B%0Alabel+%3D+%22Finally+region%22%0D%0ARoot5+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root5%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+F%7C1%23+InvocationOperation.F+%2F+InvocationExpressionSyntax%3A+F()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+F()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot5+-%3E+NoDestinationRoot5+%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0A%7D%0D%0A%7D%0D%0ARoot0+%5Bshape%3Drecord+label%3D%22%7BENTRY+%23Root0%7D%22%5D%0D%0ARoot3+%5Bshape%3Drecord+label%3D%22%7BBLOCK+%23Root3%7C2%23+InstanceReferenceOperation+%2F+IdentifierNameSyntax%3A+B%7C1%23+InvocationOperation.B+%2F+InvocationExpressionSyntax%3A+B()%7C0%23+ExpressionStatementOperation+%2F+ExpressionStatementSyntax%3A+B()%3B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0ARoot1+-%3E+Root3%0D%0ARoot6+%5Bshape%3Drecord+label%3D%22%7BEXIT+%23Root6%7D%22%5D%0D%0ARoot4+-%3E+Root6%0D%0A%7D%0D%0A%7D%0D%0A

/*
public void TryFinallyTryFinally()
    {
        try
        {
            A();
        }
        finally
        {
            F();
        }
        B();
        try
        {
            C();
        }
        finally
        {
            F();
        }
    }
*/

digraph "TryFinallyTryFinally" {
subgraph "cluster_Sonar.TryFinallyTryFinally" {
label = "Sonar.TryFinallyTryFinally"
0 [shape=record label="{BRANCH:TryStatement|IdentifierNameSyntax: A|InvocationExpressionSyntax: A()}"]
0 -> 1
1 [shape=record label="{BRANCH:FinallyClause|IdentifierNameSyntax: F|InvocationExpressionSyntax: F()}"]
1 -> 2
1 -> 3
2 [shape=record label="{SIMPLE|IdentifierNameSyntax: B|InvocationExpressionSyntax: B()}"]
2 -> 4
4 [shape=record label="{BRANCH:TryStatement|IdentifierNameSyntax: C|InvocationExpressionSyntax: C()}"]
4 -> 5
5 [shape=record label="{BRANCH:FinallyClause|IdentifierNameSyntax: F|InvocationExpressionSyntax: F()}"]
5 -> 3
5 -> 3
3 [shape=record label="{EXIT}"]
}
subgraph "cluster_Roslyn.TryFinallyTryFinally" {
label = "Roslyn.TryFinallyTryFinally"
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
Root1 [shape=record label="{BLOCK #Root1|2# InstanceReferenceOperation / IdentifierNameSyntax: A|1# InvocationOperation.A / InvocationExpressionSyntax: A()|0# ExpressionStatementOperation / ExpressionStatementSyntax: A();|##########}"]
Root0 -> Root1
}
subgraph "cluster_Finally region" {
label = "Finally region"
Root2 [shape=record label="{BLOCK #Root2|2# InstanceReferenceOperation / IdentifierNameSyntax: F|1# InvocationOperation.F / InvocationExpressionSyntax: F()|0# ExpressionStatementOperation / ExpressionStatementSyntax: F();|##########}"]
Root2 -> NoDestinationRoot2 [label="StructuredExceptionHandling"]
}
}
subgraph "cluster_TryAndFinally region" {
label = "TryAndFinally region"
subgraph "cluster_Try region" {
label = "Try region"
Root4 [shape=record label="{BLOCK #Root4|2# InstanceReferenceOperation / IdentifierNameSyntax: C|1# InvocationOperation.C / InvocationExpressionSyntax: C()|0# ExpressionStatementOperation / ExpressionStatementSyntax: C();|##########}"]
Root3 -> Root4
}
subgraph "cluster_Finally region" {
label = "Finally region"
Root5 [shape=record label="{BLOCK #Root5|2# InstanceReferenceOperation / IdentifierNameSyntax: F|1# InvocationOperation.F / InvocationExpressionSyntax: F()|0# ExpressionStatementOperation / ExpressionStatementSyntax: F();|##########}"]
Root5 -> NoDestinationRoot5 [label="StructuredExceptionHandling"]
}
}
Root0 [shape=record label="{ENTRY #Root0}"]
Root3 [shape=record label="{BLOCK #Root3|2# InstanceReferenceOperation / IdentifierNameSyntax: B|1# InvocationOperation.B / InvocationExpressionSyntax: B()|0# ExpressionStatementOperation / ExpressionStatementSyntax: B();|##########}"]
Root1 -> Root3
Root6 [shape=record label="{EXIT #Root6}"]
Root4 -> Root6
}
}
